//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.Common.VSPackages.CrmDeveloperHelper.Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): Duplicate Rule Condition
    ///     (Russian - 1049): Условие правила обнаружения повторяющихся данных
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Duplicate Rule Conditions
    ///     (Russian - 1049): Условия правила обнаружения повторов
    /// 
    /// Description:
    ///     (English - United States - 1033): Condition of a duplicate detection rule.
    ///     (Russian - 1049): Условие правила обнаружения повторных записей.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(DuplicateRuleCondition.EntityLogicalName)]
    [System.ComponentModel.DescriptionAttribute("Duplicate Rule Condition")]
    public partial class DuplicateRuleCondition : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "duplicaterulecondition";
        
        public const string EntitySchemaName = "DuplicateRuleCondition";
        
        public const int EntityTypeCode = 4416;
        
        public const string EntityPrimaryIdAttribute = "duplicateruleconditionid";
        
        /// <summary>
        /// Default Constructor duplicaterulecondition
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DuplicateRuleCondition() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor duplicaterulecondition for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DuplicateRuleCondition(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events

        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        

        #endregion
        
        #region Primary Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Duplicate Rule Condition
        ///     (Russian - 1049): Условие правила обнаружения повторяющихся данных
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the condition.
        ///     (Russian - 1049): Уникальный идентификатор условия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Duplicate Rule Condition")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.DuplicateRuleConditionId = value;
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Duplicate Rule Condition
        ///     (Russian - 1049): Условие правила обнаружения повторяющихся данных
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the condition.
        ///     (Russian - 1049): Уникальный идентификатор условия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Duplicate Rule Condition")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> DuplicateRuleConditionId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DuplicateRuleConditionId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(DuplicateRuleConditionId));
            }
        }
        

        #endregion
        
        #region Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Base Field
        ///     (Russian - 1049): Базовое поле
        /// 
        /// Description:
        ///     (English - United States - 1033): Field that is being compared.
        ///     (Russian - 1049): Сравниваемое поле.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.baseattributename)]
        [System.ComponentModel.DescriptionAttribute("Base Field")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BaseAttributeName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.baseattributename);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BaseAttributeName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.baseattributename, value);
                this.OnPropertyChanged(nameof(BaseAttributeName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By
        ///     (Russian - 1049): Создано
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who created the condition.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, создавшего условие.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.createdby)]
        [System.ComponentModel.DescriptionAttribute("Created By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.createdby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        ///     (Russian - 1049): Дата создания
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the condition was created.
        ///     (Russian - 1049): Дата и время создания условия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.createdon)]
        [System.ComponentModel.DescriptionAttribute("Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.createdon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        ///     (Russian - 1049): Кем создано (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who created the duplicate rule condition.
        ///     (Russian - 1049): Уникальный идентификатор делегированного пользователя, создавшего условие правила поиска повторяющихся данных.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.createdonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Created By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.createdonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Ignore Blank Values
        ///     (Russian - 1049): Пропуск пустых значений
        /// 
        /// Description:
        ///     (English - United States - 1033): Determines whether to consider blank values as non-duplicate values
        ///     (Russian - 1049): Определяет, рассматривать ли пустые значения как не являющиеся дубликатами
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.ignoreblankvalues)]
        [System.ComponentModel.DescriptionAttribute("Ignore Blank Values")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IgnoreBlankValues
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.ignoreblankvalues);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IgnoreBlankValues));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.ignoreblankvalues, value);
                this.OnPropertyChanged(nameof(IgnoreBlankValues));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Matching Field
        ///     (Russian - 1049): Совпадающее поле
        /// 
        /// Description:
        ///     (English - United States - 1033): Field that is being compared with the base field.
        ///     (Russian - 1049): Поле, сравниваемое с базовым полем.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.matchingattributename)]
        [System.ComponentModel.DescriptionAttribute("Matching Field")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MatchingAttributeName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.matchingattributename);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MatchingAttributeName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.matchingattributename, value);
                this.OnPropertyChanged(nameof(MatchingAttributeName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By
        ///     (Russian - 1049): Изменено
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who last modified the condition.
        ///     (Russian - 1049): Уникальный идентификатор последнего пользователя, изменившего условие.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.modifiedby)]
        [System.ComponentModel.DescriptionAttribute("Modified By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.modifiedby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        ///     (Russian - 1049): Дата изменения
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the condition was last modified.
        ///     (Russian - 1049): Дата и время последнего изменения условия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.modifiedon)]
        [System.ComponentModel.DescriptionAttribute("Modified On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.modifiedon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        ///     (Russian - 1049): Кем изменено (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who last modified the duplicate rule condition.
        ///     (Russian - 1049): Уникальный идентификатор последнего делегированного пользователя, изменившего условие правила поиска повторяющихся данных.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.modifiedonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Modified By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.modifiedonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Operator Code
        ///     (Russian - 1049): Код оператора
        /// 
        /// Description:
        ///     (English - United States - 1033): Operator for this rule condition.
        ///     (Russian - 1049): Оператор для этого условия правила.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode)]
        [System.ComponentModel.DescriptionAttribute("Operator Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue OperatorCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OperatorCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode, value);
                this.OnPropertyChanged(nameof(OperatorCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Operator Code
        ///     (Russian - 1049): Код оператора
        /// 
        /// Description:
        ///     (English - United States - 1033): Operator for this rule condition.
        ///     (Russian - 1049): Оператор для этого условия правила.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode)]
        [System.ComponentModel.DescriptionAttribute("Operator Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.OptionSets.operatorcode> OperatorCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.OptionSets.operatorcode), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.OptionSets.operatorcode)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.OptionSets.operatorcode), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OperatorCodeEnum));
                this.OnPropertyChanging(nameof(OperatorCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(OperatorCode));
                this.OnPropertyChanged(nameof(OperatorCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Operator Parameter
        ///     (Russian - 1049): Параметр оператора
        /// 
        /// Description:
        ///     (English - United States - 1033): Parameter value of N if the operator is Same First Characters or Same Last Characters.
        ///     (Russian - 1049): Значение параметра N при использовании оператора одинаковых первых или последних символов.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorparam)]
        [System.ComponentModel.DescriptionAttribute("Operator Parameter")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> OperatorParam
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorparam);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OperatorParam));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.operatorparam, value);
                this.OnPropertyChanged(nameof(OperatorParam));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owner
        ///     (Russian - 1049): Ответственный
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user or team who owns the duplicate rule condition.
        ///     (Russian - 1049): Уникальный идентификатор пользователя или рабочей группы, ответственных за условие правила поиска повторяющихся данных.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.ownerid)]
        [System.ComponentModel.DescriptionAttribute("Owner")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OwnerId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.ownerid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owning Business Unit
        ///     (Russian - 1049): Ответственная бизнес-единица
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the business unit that owns the condition.
        ///     (Russian - 1049): Уникальный идентификатор бизнес-единицы, ответственной за условие.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.owningbusinessunit)]
        [System.ComponentModel.DescriptionAttribute("Owning Business Unit")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> OwningBusinessUnit
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.owningbusinessunit);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owning User
        ///     (Russian - 1049): Ответственный пользователь
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who owns the condition.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, ответственного за условие.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.owninguser)]
        [System.ComponentModel.DescriptionAttribute("Owning User")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> OwningUser
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.owninguser);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Regarding
        ///     (Russian - 1049): В отношении
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the object with which the condition is associated.
        ///     (Russian - 1049): Уникальный идентификатор объекта, с которым связано условие.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.regardingobjectid)]
        [System.ComponentModel.DescriptionAttribute("Regarding")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.regardingobjectid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RegardingObjectId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.DuplicateRuleCondition.Schema.Attributes.regardingobjectid, value);
                this.OnPropertyChanged(nameof(RegardingObjectId));
            }
        }
        

        #endregion
    }
}

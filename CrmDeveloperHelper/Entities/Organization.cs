//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.Common.VSPackages.CrmDeveloperHelper.Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): Organization
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Organizations
    /// 
    /// Description:
    ///     (English - United States - 1033): Top level of the Microsoft Dynamics 365 business hierarchy. The organization can be a specific business, holding company, or corporation.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(Organization.EntityLogicalName)]
    public partial class Organization : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "organization";
        
        public const string EntitySchemaName = "Organization";
        
        public const int EntityTypeCode = 1019;
        
        public const string EntityPrimaryIdAttribute = "organizationid";
        
        public const string EntityPrimaryNameAttribute = "name";
        
        /// <summary>
        /// Default Constructor organization
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Organization() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor organization for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Organization(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        #endregion
        
        #region Primary Attributes
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OrganizationId = value;
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> OrganizationId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OrganizationId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(OrganizationId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryNameAttribute)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(EntityPrimaryNameAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Name));
                this.SetAttributeValue(EntityPrimaryNameAttribute, value);
                this.OnPropertyChanged(nameof(Name));
            }
        }
        #endregion
        
        #region Attributes
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): ACI Tenant URL.
        /// 
        /// Description:
        ///     (English - United States - 1033): ACI Web Endpoint URL.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.aciwebendpointurl)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ACIWebEndpointUrl
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.aciwebendpointurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ACIWebEndpointUrl));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.aciwebendpointurl, value);
                this.OnPropertyChanged(nameof(ACIWebEndpointUrl));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Acknowledgement Template
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the template to be used for acknowledgement when a user unsubscribes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.acknowledgementtemplateid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference AcknowledgementTemplateId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.acknowledgementtemplateid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AcknowledgementTemplateId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.acknowledgementtemplateid, value);
                this.OnPropertyChanged(nameof(AcknowledgementTemplateId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Address Book Synchronization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether background address book synchronization in Microsoft Office Outlook is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowaddressbooksyncs)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowAddressBookSyncs
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowaddressbooksyncs);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowAddressBookSyncs));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowaddressbooksyncs, value);
                this.OnPropertyChanged(nameof(AllowAddressBookSyncs));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Automatic Response Creation
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether automatic response creation is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautoresponsecreation)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowAutoResponseCreation
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautoresponsecreation);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowAutoResponseCreation));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautoresponsecreation, value);
                this.OnPropertyChanged(nameof(AllowAutoResponseCreation));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Automatic Unsubscribe
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether automatic unsubscribe is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautounsubscribe)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowAutoUnsubscribe
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautounsubscribe);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowAutoUnsubscribe));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautounsubscribe, value);
                this.OnPropertyChanged(nameof(AllowAutoUnsubscribe));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Automatic Unsubscribe Acknowledgement
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether automatic unsubscribe acknowledgement email is allowed to send.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautounsubscribeacknowledgement)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowAutoUnsubscribeAcknowledgement
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautounsubscribeacknowledgement);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowAutoUnsubscribeAcknowledgement));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowautounsubscribeacknowledgement, value);
                this.OnPropertyChanged(nameof(AllowAutoUnsubscribeAcknowledgement));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Outlook Client Message Bar Advertisement
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether Outlook Client message bar advertisement is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowclientmessagebarad)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowClientMessageBarAd
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowclientmessagebarad);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowClientMessageBarAd));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowclientmessagebarad, value);
                this.OnPropertyChanged(nameof(AllowClientMessageBarAd));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Entity Level Auditing
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether auditing of changes to entity is allowed when no attributes have changed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowentityonlyaudit)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowEntityOnlyAudit
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowentityonlyaudit);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowEntityOnlyAudit));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowentityonlyaudit, value);
                this.OnPropertyChanged(nameof(AllowEntityOnlyAudit));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Marketing Email Execution
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether marketing emails execution is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowmarketingemailexecution)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowMarketingEmailExecution
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowmarketingemailexecution);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowMarketingEmailExecution));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowmarketingemailexecution, value);
                this.OnPropertyChanged(nameof(AllowMarketingEmailExecution));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Offline Scheduled Synchronization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether background offline synchronization in Microsoft Office Outlook is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowofflinescheduledsyncs)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowOfflineScheduledSyncs
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowofflinescheduledsyncs);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowOfflineScheduledSyncs));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowofflinescheduledsyncs, value);
                this.OnPropertyChanged(nameof(AllowOfflineScheduledSyncs));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Scheduled Synchronization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether scheduled synchronizations to Outlook are allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowoutlookscheduledsyncs)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowOutlookScheduledSyncs
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowoutlookscheduledsyncs);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowOutlookScheduledSyncs));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowoutlookscheduledsyncs, value);
                this.OnPropertyChanged(nameof(AllowOutlookScheduledSyncs));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Unresolved Address Email Send
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether users are allowed to send email to unresolved parties (parties must still have an email address).
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowunresolvedpartiesonemailsend)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowUnresolvedPartiesOnEmailSend
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowunresolvedpartiesonemailsend);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowUnresolvedPartiesOnEmailSend));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowunresolvedpartiesonemailsend, value);
                this.OnPropertyChanged(nameof(AllowUnresolvedPartiesOnEmailSend));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow User Form Mode Preference
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether individuals can select their form mode preference in their personal options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowuserformmodepreference)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowUserFormModePreference
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowuserformmodepreference);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowUserFormModePreference));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowuserformmodepreference, value);
                this.OnPropertyChanged(nameof(AllowUserFormModePreference));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow the showing tablet application notification bars in a browser.
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the showing tablet application notification bars in a browser is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowusersseeappdownloadmessage)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowUsersSeeAppdownloadMessage
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowusersseeappdownloadmessage);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowUsersSeeAppdownloadMessage));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowusersseeappdownloadmessage, value);
                this.OnPropertyChanged(nameof(AllowUsersSeeAppdownloadMessage));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow Export to Excel
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether Web-based export of grids to Microsoft Office Excel is allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowwebexcelexport)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AllowWebExcelExport
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowwebexcelexport);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AllowWebExcelExport));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.allowwebexcelexport, value);
                this.OnPropertyChanged(nameof(AllowWebExcelExport));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): AM Designator
        /// 
        /// Description:
        ///     (English - United States - 1033): AM designator to use throughout Microsoft Dynamics CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.amdesignator)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AMDesignator
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.amdesignator);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AMDesignator));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.amdesignator, value);
                this.OnPropertyChanged(nameof(AMDesignator));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable App Designer Experience for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the appDesignerExperience is enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.appdesignerexperienceenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AppDesignerExperienceEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.appdesignerexperienceenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AppDesignerExperienceEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.appdesignerexperienceenabled, value);
                this.OnPropertyChanged(nameof(AppDesignerExperienceEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Rich Editing Experience for Appointment
        /// 
        /// Description:
        ///     (English - United States - 1033): Information on whether rich editing experience for Appointment is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.appointmentricheditorexperience)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AppointmentRichEditorExperience
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.appointmentricheditorexperience);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AppointmentRichEditorExperience));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.appointmentricheditorexperience, value);
                this.OnPropertyChanged(nameof(AppointmentRichEditorExperience));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Auto Apply Default Entitlement on Case Create
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to auto apply the default customer entitlement on case creation.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplydefaultoncasecreate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AutoApplyDefaultonCaseCreate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplydefaultoncasecreate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AutoApplyDefaultonCaseCreate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplydefaultoncasecreate, value);
                this.OnPropertyChanged(nameof(AutoApplyDefaultonCaseCreate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Auto Apply Default Entitlement on Case Update
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to auto apply the default customer entitlement on case update.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplydefaultoncaseupdate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AutoApplyDefaultonCaseUpdate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplydefaultoncaseupdate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AutoApplyDefaultonCaseUpdate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplydefaultoncaseupdate, value);
                this.OnPropertyChanged(nameof(AutoApplyDefaultonCaseUpdate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Auto-apply SLA After Manually Over-riding
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether to Auto-apply SLA on case record update after SLA was manually applied.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplysla)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> AutoApplySLA
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplysla);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AutoApplySLA));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.autoapplysla, value);
                this.OnPropertyChanged(nameof(AutoApplySLA));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.azureschedulerjobcollectionname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AzureSchedulerJobCollectionName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.azureschedulerjobcollectionname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AzureSchedulerJobCollectionName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.azureschedulerjobcollectionname, value);
                this.OnPropertyChanged(nameof(AzureSchedulerJobCollectionName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the base currency of the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencyid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference BaseCurrencyId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencyid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BaseCurrencyId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencyid, value);
                this.OnPropertyChanged(nameof(BaseCurrencyId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Base Currency Precision
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of decimal places that can be used for the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencyprecision)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> BaseCurrencyPrecision
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencyprecision);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BaseCurrencyPrecision));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencyprecision, value);
                this.OnPropertyChanged(nameof(BaseCurrencyPrecision));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Base Currency Symbol
        /// 
        /// Description:
        ///     (English - United States - 1033): Symbol used for the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencysymbol)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BaseCurrencySymbol
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencysymbol);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BaseCurrencySymbol));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.basecurrencysymbol, value);
                this.OnPropertyChanged(nameof(BaseCurrencySymbol));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Bing Maps API Key
        /// 
        /// Description:
        ///     (English - United States - 1033): Api Key to be used in requests to Bing Maps services.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bingmapsapikey)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BingMapsApiKey
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bingmapsapikey);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BingMapsApiKey));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bingmapsapikey, value);
                this.OnPropertyChanged(nameof(BingMapsApiKey));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Block Attachments
        /// 
        /// Description:
        ///     (English - United States - 1033): Prevent upload or download of certain attachment types that are considered dangerous.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.blockedattachments)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BlockedAttachments
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.blockedattachments);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BlockedAttachments));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.blockedattachments, value);
                this.OnPropertyChanged(nameof(BlockedAttachments));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Display cards in expanded state for Interactive Dashboard
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bounddashboarddefaultcardexpanded)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> BoundDashboardDefaultCardExpanded
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bounddashboarddefaultcardexpanded);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BoundDashboardDefaultCardExpanded));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bounddashboarddefaultcardexpanded, value);
                this.OnPropertyChanged(nameof(BoundDashboardDefaultCardExpanded));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Bulk Operation Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix used for bulk operation numbering.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bulkoperationprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BulkOperationPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bulkoperationprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BulkOperationPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.bulkoperationprefix, value);
                this.OnPropertyChanged(nameof(BulkOperationPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Business Closure Calendar
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the business closure calendar of organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.businessclosurecalendarid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> BusinessClosureCalendarId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.businessclosurecalendarid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BusinessClosureCalendarId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.businessclosurecalendarid, value);
                this.OnPropertyChanged(nameof(BusinessClosureCalendarId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Calendar Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Calendar type for the system. Set to Gregorian US by default.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.calendartype)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CalendarType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.calendartype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CalendarType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.calendartype, value);
                this.OnPropertyChanged(nameof(CalendarType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Campaign Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix used for campaign numbering.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.campaignprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CampaignPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.campaignprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CampaignPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.campaignprefix, value);
                this.OnPropertyChanged(nameof(CampaignPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Cascade Status Update
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag to cascade Update on incident.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.cascadestatusupdate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> CascadeStatusUpdate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.cascadestatusupdate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CascadeStatusUpdate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.cascadestatusupdate, value);
                this.OnPropertyChanged(nameof(CascadeStatusUpdate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Case Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix to use for all cases throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.caseprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CasePrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.caseprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CasePrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.caseprefix, value);
                this.OnPropertyChanged(nameof(CasePrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Category Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the prefix to use for all categories in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.categoryprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CategoryPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.categoryprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CategoryPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.categoryprefix, value);
                this.OnPropertyChanged(nameof(CategoryPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Client Feature Set
        /// 
        /// Description:
        ///     (English - United States - 1033): Client Features to be enabled as an XML BLOB.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.clientfeatureset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientFeatureSet
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.clientfeatureset);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ClientFeatureSet));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.clientfeatureset, value);
                this.OnPropertyChanged(nameof(ClientFeatureSet));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Contract Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix to use for all contracts throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.contractprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContractPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.contractprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ContractPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.contractprefix, value);
                this.OnPropertyChanged(nameof(ContractPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Cortana Proactive Experience Flow processes for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature CortanaProactiveExperience Flow processes should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.cortanaproactiveexperienceenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> CortanaProactiveExperienceEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.cortanaproactiveexperienceenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CortanaProactiveExperienceEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.cortanaproactiveexperienceenabled, value);
                this.OnPropertyChanged(nameof(CortanaProactiveExperienceEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who created the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdby, value);
                this.OnPropertyChanged(nameof(CreatedBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the organization was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdon)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdon, value);
                this.OnPropertyChanged(nameof(CreatedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who created the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdonbehalfby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdonbehalfby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedOnBehalfBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createdonbehalfby, value);
                this.OnPropertyChanged(nameof(CreatedOnBehalfBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Active Initial Product State
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable Initial state of newly created products to be Active instead of Draft
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createproductswithoutparentinactivestate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> CreateProductsWithoutParentInActiveState
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createproductswithoutparentinactivestate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreateProductsWithoutParentInActiveState));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.createproductswithoutparentinactivestate, value);
                this.OnPropertyChanged(nameof(CreateProductsWithoutParentInActiveState));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency Decimal Precision
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of decimal places that can be used for currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencydecimalprecision)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrencyDecimalPrecision
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencydecimalprecision);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrencyDecimalPrecision));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencydecimalprecision, value);
                this.OnPropertyChanged(nameof(CurrencyDecimalPrecision));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Display Currencies Using
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether to display money fields with currency code or currency symbol.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencydisplayoption)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue CurrencyDisplayOption
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencydisplayoption);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrencyDisplayOption));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencydisplayoption, value);
                this.OnPropertyChanged(nameof(CurrencyDisplayOption));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency Format Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about how currency symbols are placed throughout Microsoft Dynamics CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencyformatcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue CurrencyFormatCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencyformatcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrencyFormatCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencyformatcode, value);
                this.OnPropertyChanged(nameof(CurrencyFormatCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency Symbol
        /// 
        /// Description:
        ///     (English - United States - 1033): Symbol used for currency throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencysymbol)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CurrencySymbol
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencysymbol);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrencySymbol));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currencysymbol, value);
                this.OnPropertyChanged(nameof(CurrencySymbol));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Bulk Operation Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Current bulk operation number. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentbulkoperationnumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentBulkOperationNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentbulkoperationnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentBulkOperationNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentbulkoperationnumber, value);
                this.OnPropertyChanged(nameof(CurrentBulkOperationNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Campaign Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Current campaign number. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcampaignnumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentCampaignNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcampaignnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentCampaignNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcampaignnumber, value);
                this.OnPropertyChanged(nameof(CurrentCampaignNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Case Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First case number to use. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcasenumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentCaseNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcasenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentCaseNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcasenumber, value);
                this.OnPropertyChanged(nameof(CurrentCaseNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Category Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Enter the first number to use for Categories. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcategorynumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentCategoryNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcategorynumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentCategoryNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcategorynumber, value);
                this.OnPropertyChanged(nameof(CurrentCategoryNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Contract Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First contract number to use. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcontractnumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentContractNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcontractnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentContractNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentcontractnumber, value);
                this.OnPropertyChanged(nameof(CurrentContractNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Import Sequence Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Import sequence to use.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentimportsequencenumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentImportSequenceNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentimportsequencenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentImportSequenceNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentimportsequencenumber, value);
                this.OnPropertyChanged(nameof(CurrentImportSequenceNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Invoice Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First invoice number to use. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentinvoicenumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentInvoiceNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentinvoicenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentInvoiceNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentinvoicenumber, value);
                this.OnPropertyChanged(nameof(CurrentInvoiceNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Knowledge Article Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Enter the first number to use for knowledge articles. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentkanumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentKaNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentkanumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentKaNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentkanumber, value);
                this.OnPropertyChanged(nameof(CurrentKaNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Article Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First article number to use. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentkbnumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentKbNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentkbnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentKbNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentkbnumber, value);
                this.OnPropertyChanged(nameof(CurrentKbNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Order Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First order number to use. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentordernumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentOrderNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentordernumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentOrderNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentordernumber, value);
                this.OnPropertyChanged(nameof(CurrentOrderNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Parsed Table Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First parsed table number to use.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentparsedtablenumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentParsedTableNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentparsedtablenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentParsedTableNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentparsedtablenumber, value);
                this.OnPropertyChanged(nameof(CurrentParsedTableNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Current Quote Number
        /// 
        /// Description:
        ///     (English - United States - 1033): First quote number to use. Deprecated. Use SetAutoNumberSeed message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentquotenumber)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> CurrentQuoteNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentquotenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CurrentQuoteNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.currentquotenumber, value);
                this.OnPropertyChanged(nameof(CurrentQuoteNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Date Format Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about how the date is displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateformatcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue DateFormatCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateformatcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DateFormatCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateformatcode, value);
                this.OnPropertyChanged(nameof(DateFormatCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Date Format String
        /// 
        /// Description:
        ///     (English - United States - 1033): String showing how the date is displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateformatstring)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DateFormatString
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateformatstring);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DateFormatString));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateformatstring, value);
                this.OnPropertyChanged(nameof(DateFormatString));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Date Separator
        /// 
        /// Description:
        ///     (English - United States - 1033): Character used to separate the month, the day, and the year in dates throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateseparator)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DateSeparator
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateseparator);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DateSeparator));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dateseparator, value);
                this.OnPropertyChanged(nameof(DateSeparator));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max value of Days since record last modified
        /// 
        /// Description:
        ///     (English - United States - 1033): The maximum value for the Mobile Offline setting Days since record last modified
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dayssincerecordlastmodifiedmaxvalue)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> DaysSinceRecordLastModifiedMaxValue
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dayssincerecordlastmodifiedmaxvalue);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DaysSinceRecordLastModifiedMaxValue));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.dayssincerecordlastmodifiedmaxvalue, value);
                this.OnPropertyChanged(nameof(DaysSinceRecordLastModifiedMaxValue));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Decimal Symbol
        /// 
        /// Description:
        ///     (English - United States - 1033): Symbol used for decimal in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.decimalsymbol)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DecimalSymbol
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.decimalsymbol);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DecimalSymbol));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.decimalsymbol, value);
                this.OnPropertyChanged(nameof(DecimalSymbol));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Country Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Text area to enter default country code.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultcountrycode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultCountryCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultcountrycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultCountryCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultcountrycode, value);
                this.OnPropertyChanged(nameof(DefaultCountryCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Name of the default app
        /// 
        /// Description:
        ///     (English - United States - 1033): Name of the default crm custom.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultcrmcustomname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultCrmCustomName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultcrmcustomname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultCrmCustomName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultcrmcustomname, value);
                this.OnPropertyChanged(nameof(DefaultCrmCustomName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email Server Profile
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the default email server profile.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultemailserverprofileid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference DefaultEmailServerProfileId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultemailserverprofileid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultEmailServerProfileId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultemailserverprofileid, value);
                this.OnPropertyChanged(nameof(DefaultEmailServerProfileId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Email Settings
        /// 
        /// Description:
        ///     (English - United States - 1033): XML string containing the default email settings that are applied when a user or queue is created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultemailsettings)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultEmailSettings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultemailsettings);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultEmailSettings));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultemailsettings, value);
                this.OnPropertyChanged(nameof(DefaultEmailSettings));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Mobile Offline Profile
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the default mobile offline profile.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultmobileofflineprofileid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference DefaultMobileOfflineProfileId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultmobileofflineprofileid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultMobileOfflineProfileId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultmobileofflineprofileid, value);
                this.OnPropertyChanged(nameof(DefaultMobileOfflineProfileId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Recurrence End Range Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of default recurrence end range date.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultrecurrenceendrangetype)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue DefaultRecurrenceEndRangeType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultrecurrenceendrangetype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultRecurrenceEndRangeType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultrecurrenceendrangetype, value);
                this.OnPropertyChanged(nameof(DefaultRecurrenceEndRangeType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Theme Data
        /// 
        /// Description:
        ///     (English - United States - 1033): Default theme data for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultthemedata)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultThemeData
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultthemedata);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultThemeData));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.defaultthemedata, value);
                this.OnPropertyChanged(nameof(DefaultThemeData));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Delegated Admin
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegated admin user for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.delegatedadminuserid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> DelegatedAdminUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.delegatedadminuserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DelegatedAdminUserId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.delegatedadminuserid, value);
                this.OnPropertyChanged(nameof(DelegatedAdminUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Disabled Reason
        /// 
        /// Description:
        ///     (English - United States - 1033): Reason for disabling the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.disabledreason)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DisabledReason
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.disabledreason);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DisabledReason));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.disabledreason, value);
                this.OnPropertyChanged(nameof(DisabledReason));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Social Care disabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether Social Care is disabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.disablesocialcare)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DisableSocialCare
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.disablesocialcare);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DisableSocialCare));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.disablesocialcare, value);
                this.OnPropertyChanged(nameof(DisableSocialCare));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Discount calculation method
        /// 
        /// Description:
        ///     (English - United States - 1033): Discount calculation method for the QOOI product.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.discountcalculationmethod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue DiscountCalculationMethod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.discountcalculationmethod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DiscountCalculationMethod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.discountcalculationmethod, value);
                this.OnPropertyChanged(nameof(DiscountCalculationMethod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Display Navigation Tour
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether or not navigation tour is displayed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.displaynavigationtour)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DisplayNavigationTour
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.displaynavigationtour);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DisplayNavigationTour));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.displaynavigationtour, value);
                this.OnPropertyChanged(nameof(DisplayNavigationTour));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email Connection Channel
        /// 
        /// Description:
        ///     (English - United States - 1033): Select if you want to use the Email Router or server-side synchronization for email processing.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailconnectionchannel)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue EmailConnectionChannel
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailconnectionchannel);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EmailConnectionChannel));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailconnectionchannel, value);
                this.OnPropertyChanged(nameof(EmailConnectionChannel));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Use Email Correlation
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag to turn email correlation on or off.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailcorrelationenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EmailCorrelationEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailcorrelationenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EmailCorrelationEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailcorrelationenabled, value);
                this.OnPropertyChanged(nameof(EmailCorrelationEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email Send Polling Frequency
        /// 
        /// Description:
        ///     (English - United States - 1033): Normal polling frequency used for sending email in Microsoft Office Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailsendpollingperiod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> EmailSendPollingPeriod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailsendpollingperiod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EmailSendPollingPeriod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.emailsendpollingperiod, value);
                this.OnPropertyChanged(nameof(EmailSendPollingPeriod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Integration with Bing Maps
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablebingmapsintegration)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnableBingMapsIntegration
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablebingmapsintegration);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnableBingMapsIntegration));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablebingmapsintegration, value);
                this.OnPropertyChanged(nameof(EnableBingMapsIntegration));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Integration with Immersive Skype
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enableimmersiveskypeintegration)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnableImmersiveSkypeIntegration
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enableimmersiveskypeintegration);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnableImmersiveSkypeIntegration));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enableimmersiveskypeintegration, value);
                this.OnPropertyChanged(nameof(EnableImmersiveSkypeIntegration));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Learning Path Authoring
        /// 
        /// Description:
        ///     (English - United States - 1033): Select to enable learning path auhtoring.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablelpauthoring)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnableLPAuthoring
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablelpauthoring);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnableLPAuthoring));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablelpauthoring, value);
                this.OnPropertyChanged(nameof(EnableLPAuthoring));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Integration with Microsoft Flow
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablemicrosoftflowintegration)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnableMicrosoftFlowIntegration
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablemicrosoftflowintegration);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnableMicrosoftFlowIntegration));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablemicrosoftflowintegration, value);
                this.OnPropertyChanged(nameof(EnableMicrosoftFlowIntegration));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Pricing On Create
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable pricing calculations on a Create call.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablepricingoncreate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnablePricingOnCreate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablepricingoncreate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnablePricingOnCreate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablepricingoncreate, value);
                this.OnPropertyChanged(nameof(EnablePricingOnCreate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Smart Matching
        /// 
        /// Description:
        ///     (English - United States - 1033): Use Smart Matching.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablesmartmatching)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnableSmartMatching
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablesmartmatching);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnableSmartMatching));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enablesmartmatching, value);
                this.OnPropertyChanged(nameof(EnableSmartMatching));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization setting to enforce read only plugins.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enforcereadonlyplugins)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> EnforceReadOnlyPlugins
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enforcereadonlyplugins);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EnforceReadOnlyPlugins));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.enforcereadonlyplugins, value);
                this.OnPropertyChanged(nameof(EnforceReadOnlyPlugins));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Entity Image
        /// 
        /// Description:
        ///     (English - United States - 1033): The default image for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] EntityImage
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<byte[]>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage, value);
                this.OnPropertyChanged(nameof(EntityImage));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage_timestamp)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> EntityImage_Timestamp
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage_timestamp);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage_Timestamp));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage_timestamp, value);
                this.OnPropertyChanged(nameof(EntityImage_Timestamp));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage_url)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EntityImage_URL
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage_url);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage_URL));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimage_url, value);
                this.OnPropertyChanged(nameof(EntityImage_URL));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Entity Image Id
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimageid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> EntityImageId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimageid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImageId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.entityimageid, value);
                this.OnPropertyChanged(nameof(EntityImageId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Days to Expire Change Tracking Deleted Records
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of days to keep change tracking deleted records
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.expirechangetrackingindays)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> ExpireChangeTrackingInDays
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.expirechangetrackingindays);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExpireChangeTrackingInDays));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.expirechangetrackingindays, value);
                this.OnPropertyChanged(nameof(ExpireChangeTrackingInDays));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Days to Expire Subscriptions
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of days before deleting inactive subscriptions.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.expiresubscriptionsindays)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> ExpireSubscriptionsInDays
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.expiresubscriptionsindays);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExpireSubscriptionsInDays));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.expiresubscriptionsindays, value);
                this.OnPropertyChanged(nameof(ExpireSubscriptionsInDays));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): External Base URL
        /// 
        /// Description:
        ///     (English - United States - 1033): Specify the base URL to use to look for external document suggestions.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalbaseurl)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExternalBaseUrl
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalbaseurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExternalBaseUrl));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalbaseurl, value);
                this.OnPropertyChanged(nameof(ExternalBaseUrl));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): ExternalPartyEnabled Entities correlation Keys
        /// 
        /// Description:
        ///     (English - United States - 1033): XML string containing the ExternalPartyEnabled entities correlation keys for association of existing External Party instance entities to newly created IsExternalPartyEnabled entities.For internal use only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalpartycorrelationkeys)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExternalPartyCorrelationKeys
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalpartycorrelationkeys);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExternalPartyCorrelationKeys));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalpartycorrelationkeys, value);
                this.OnPropertyChanged(nameof(ExternalPartyCorrelationKeys));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): ExternalPartyEnabled Entities Settings.For internal use only
        /// 
        /// Description:
        ///     (English - United States - 1033): XML string containing the ExternalPartyEnabled entities settings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalpartyentitysettings)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExternalPartyEntitySettings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalpartyentitysettings);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExternalPartyEntitySettings));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.externalpartyentitysettings, value);
                this.OnPropertyChanged(nameof(ExternalPartyEntitySettings));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Feature Set
        /// 
        /// Description:
        ///     (English - United States - 1033): Features to be enabled as an XML BLOB.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.featureset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureSet
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.featureset);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FeatureSet));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.featureset, value);
                this.OnPropertyChanged(nameof(FeatureSet));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Calendar Start
        /// 
        /// Description:
        ///     (English - United States - 1033): Start date for the fiscal period that is to be used throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalcalendarstart)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> FiscalCalendarStart
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalcalendarstart);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalCalendarStart));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalcalendarstart, value);
                this.OnPropertyChanged(nameof(FiscalCalendarStart));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Period Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how the name of the fiscal period is displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodformat)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FiscalPeriodFormat
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodformat);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalPeriodFormat));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodformat, value);
                this.OnPropertyChanged(nameof(FiscalPeriodFormat));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Format for Fiscal Period
        /// 
        /// Description:
        ///     (English - United States - 1033): Format in which the fiscal period will be displayed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodformatperiod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue FiscalPeriodFormatPeriod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodformatperiod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalPeriodFormatPeriod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodformatperiod, value);
                this.OnPropertyChanged(nameof(FiscalPeriodFormatPeriod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Period Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of fiscal period used throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodtype)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> FiscalPeriodType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodtype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalPeriodType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalperiodtype, value);
                this.OnPropertyChanged(nameof(FiscalPeriodType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Fiscal Settings Updated
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether the fiscal settings have been updated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalsettingsupdated)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> FiscalSettingsUpdated
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalsettingsupdated);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalSettingsUpdated));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalsettingsupdated, value);
                this.OnPropertyChanged(nameof(FiscalSettingsUpdated));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Year Display
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether the fiscal year should be displayed based on the start date or the end date of the fiscal year.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyeardisplaycode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> FiscalYearDisplayCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyeardisplaycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalYearDisplayCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyeardisplaycode, value);
                this.OnPropertyChanged(nameof(FiscalYearDisplayCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Year Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how the name of the fiscal year is displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformat)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FiscalYearFormat
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformat);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalYearFormat));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformat, value);
                this.OnPropertyChanged(nameof(FiscalYearFormat));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Prefix for Fiscal Year
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix for the display of the fiscal year.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue FiscalYearFormatPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalYearFormatPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatprefix, value);
                this.OnPropertyChanged(nameof(FiscalYearFormatPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Suffix for Fiscal Year
        /// 
        /// Description:
        ///     (English - United States - 1033): Suffix for the display of the fiscal year.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatsuffix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue FiscalYearFormatSuffix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatsuffix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalYearFormatSuffix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatsuffix, value);
                this.OnPropertyChanged(nameof(FiscalYearFormatSuffix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Year Format Year
        /// 
        /// Description:
        ///     (English - United States - 1033): Format for the year.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatyear)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue FiscalYearFormatYear
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatyear);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalYearFormatYear));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearformatyear, value);
                this.OnPropertyChanged(nameof(FiscalYearFormatYear));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fiscal Year Period Connector
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how the names of the fiscal year and the fiscal period should be connected when displayed together.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearperiodconnect)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FiscalYearPeriodConnect
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearperiodconnect);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FiscalYearPeriodConnect));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fiscalyearperiodconnect, value);
                this.OnPropertyChanged(nameof(FiscalYearPeriodConnect));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Full Name Display Order
        /// 
        /// Description:
        ///     (English - United States - 1033): Order in which names are to be displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fullnameconventioncode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue FullNameConventionCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fullnameconventioncode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FullNameConventionCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.fullnameconventioncode, value);
                this.OnPropertyChanged(nameof(FullNameConventionCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Future Expansion Window
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies the maximum number of months in future for which the recurring activities can be created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.futureexpansionwindow)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> FutureExpansionWindow
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.futureexpansionwindow);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FutureExpansionWindow));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.futureexpansionwindow, value);
                this.OnPropertyChanged(nameof(FutureExpansionWindow));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Generate Alerts For Errors
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether alerts will be generated for errors.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforerrors)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GenerateAlertsForErrors
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforerrors);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GenerateAlertsForErrors));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforerrors, value);
                this.OnPropertyChanged(nameof(GenerateAlertsForErrors));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Generate Alerts For Information
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether alerts will be generated for information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforinformation)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GenerateAlertsForInformation
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforinformation);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GenerateAlertsForInformation));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforinformation, value);
                this.OnPropertyChanged(nameof(GenerateAlertsForInformation));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Generate Alerts For Warnings
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether alerts will be generated for warnings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforwarnings)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GenerateAlertsForWarnings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforwarnings);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GenerateAlertsForWarnings));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.generatealertsforwarnings, value);
                this.OnPropertyChanged(nameof(GenerateAlertsForWarnings));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Get Started Pane Content Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether Get Started content is enabled for this organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.getstartedpanecontentenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GetStartedPaneContentEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.getstartedpanecontentenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GetStartedPaneContentEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.getstartedpanecontentenabled, value);
                this.OnPropertyChanged(nameof(GetStartedPaneContentEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is AppendUrl Parameters enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the append URL parameters is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalappendurlparametersenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GlobalAppendUrlParametersEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalappendurlparametersenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GlobalAppendUrlParametersEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalappendurlparametersenabled, value);
                this.OnPropertyChanged(nameof(GlobalAppendUrlParametersEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Global Help URL.
        /// 
        /// Description:
        ///     (English - United States - 1033): URL for the web page global help.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalhelpurl)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string GlobalHelpUrl
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalhelpurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GlobalHelpUrl));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalhelpurl, value);
                this.OnPropertyChanged(nameof(GlobalHelpUrl));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Customizable Global Help enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the customizable global help is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalhelpurlenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GlobalHelpUrlEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalhelpurlenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GlobalHelpUrlEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.globalhelpurlenabled, value);
                this.OnPropertyChanged(nameof(GlobalHelpUrlEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Rollup Expiration Time for Goal
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of days after the goal's end date after which the rollup of the goal stops automatically.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.goalrollupexpirytime)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> GoalRollupExpiryTime
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.goalrollupexpirytime);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GoalRollupExpiryTime));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.goalrollupexpirytime, value);
                this.OnPropertyChanged(nameof(GoalRollupExpiryTime));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Automatic Rollup Frequency for Goal
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of hours between automatic rollup jobs .
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.goalrollupfrequency)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> GoalRollupFrequency
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.goalrollupfrequency);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GoalRollupFrequency));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.goalrollupfrequency, value);
                this.OnPropertyChanged(nameof(GoalRollupFrequency));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Grant Access To Network Service
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.grantaccesstonetworkservice)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> GrantAccessToNetworkService
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.grantaccesstonetworkservice);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GrantAccessToNetworkService));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.grantaccesstonetworkservice, value);
                this.OnPropertyChanged(nameof(GrantAccessToNetworkService));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Hash Delta Subject Count
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum difference allowed between subject keywords count of the email messaged to be correlated
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashdeltasubjectcount)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> HashDeltaSubjectCount
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashdeltasubjectcount);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(HashDeltaSubjectCount));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashdeltasubjectcount, value);
                this.OnPropertyChanged(nameof(HashDeltaSubjectCount));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Hash Filter Keywords
        /// 
        /// Description:
        ///     (English - United States - 1033): Filter Subject Keywords
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashfilterkeywords)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HashFilterKeywords
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashfilterkeywords);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(HashFilterKeywords));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashfilterkeywords, value);
                this.OnPropertyChanged(nameof(HashFilterKeywords));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Hash Max Count
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of subject keywords or recipients used for correlation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashmaxcount)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> HashMaxCount
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashmaxcount);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(HashMaxCount));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashmaxcount, value);
                this.OnPropertyChanged(nameof(HashMaxCount));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Hash Min Address Count
        /// 
        /// Description:
        ///     (English - United States - 1033): Minimum number of recipients required to match for email messaged to be correlated
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashminaddresscount)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> HashMinAddressCount
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashminaddresscount);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(HashMinAddressCount));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.hashminaddresscount, value);
                this.OnPropertyChanged(nameof(HashMinAddressCount));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): High contrast Theme Data
        /// 
        /// Description:
        ///     (English - United States - 1033): High contrast theme data for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.highcontrastthemedata)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HighContrastThemeData
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.highcontrastthemedata);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(HighContrastThemeData));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.highcontrastthemedata, value);
                this.OnPropertyChanged(nameof(HighContrastThemeData));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Ignore Internal Email
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether incoming email sent by internal Microsoft Dynamics 365 users or queues should be tracked.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ignoreinternalemail)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IgnoreInternalEmail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ignoreinternalemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IgnoreInternalEmail));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ignoreinternalemail, value);
                this.OnPropertyChanged(nameof(IgnoreInternalEmail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Inactivity timeout enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether Inactivity timeout is enabled
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> InactivityTimeoutEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InactivityTimeoutEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutenabled, value);
                this.OnPropertyChanged(nameof(InactivityTimeoutEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Inactivity timeout in minutes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutinmins)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> InactivityTimeoutInMins
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutinmins);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InactivityTimeoutInMins));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutinmins, value);
                this.OnPropertyChanged(nameof(InactivityTimeoutInMins));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Inactivity timeout reminder in minutes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutreminderinmins)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> InactivityTimeoutReminderInMins
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutreminderinmins);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InactivityTimeoutReminderInMins));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.inactivitytimeoutreminderinmins, value);
                this.OnPropertyChanged(nameof(InactivityTimeoutReminderInMins));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Exchange Email Retrieval Batch Size
        /// 
        /// Description:
        ///     (English - United States - 1033): Setting for the Async Service Mailbox Queue. Defines the retrieval batch size of exchange server.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.incomingemailexchangeemailretrievalbatchsize)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> IncomingEmailExchangeEmailRetrievalBatchSize
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.incomingemailexchangeemailretrievalbatchsize);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IncomingEmailExchangeEmailRetrievalBatchSize));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.incomingemailexchangeemailretrievalbatchsize, value);
                this.OnPropertyChanged(nameof(IncomingEmailExchangeEmailRetrievalBatchSize));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Initial Version
        /// 
        /// Description:
        ///     (English - United States - 1033): Initial version of the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.initialversion)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InitialVersion
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.initialversion);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InitialVersion));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.initialversion, value);
                this.OnPropertyChanged(nameof(InitialVersion));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Integration User
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the integration user for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.integrationuserid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> IntegrationUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.integrationuserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IntegrationUserId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.integrationuserid, value);
                this.OnPropertyChanged(nameof(IntegrationUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Invoice Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix to use for all invoice numbers throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.invoiceprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InvoicePrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.invoiceprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InvoicePrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.invoiceprefix, value);
                this.OnPropertyChanged(nameof(InvoicePrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Action Card for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Action Card should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactioncardenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsActionCardEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactioncardenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsActionCardEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactioncardenabled, value);
                this.OnPropertyChanged(nameof(IsActionCardEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Action Support Feature enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether Action Support Feature is enabled
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactionsupportfeatureenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsActionSupportFeatureEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactionsupportfeatureenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsActionSupportFeatureEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactionsupportfeatureenabled, value);
                this.OnPropertyChanged(nameof(IsActionSupportFeatureEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Relationship Analytics for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Relationship Analytics should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactivityanalysisenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsActivityAnalysisEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactivityanalysisenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsActivityAnalysisEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isactivityanalysisenabled, value);
                this.OnPropertyChanged(nameof(IsActivityAnalysisEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Application Mode Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isappmode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAppMode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isappmode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsAppMode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isappmode, value);
                this.OnPropertyChanged(nameof(IsAppMode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Attachment Sync Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable attachments sync for outlook and exchange.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isappointmentattachmentsyncenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAppointmentAttachmentSyncEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isappointmentattachmentsyncenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsAppointmentAttachmentSyncEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isappointmentattachmentsyncenabled, value);
                this.OnPropertyChanged(nameof(IsAppointmentAttachmentSyncEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Assigned Tasks Sync Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable assigned tasks sync for outlook and exchange.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isassignedtaskssyncenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAssignedTasksSyncEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isassignedtaskssyncenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsAssignedTasksSyncEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isassignedtaskssyncenabled, value);
                this.OnPropertyChanged(nameof(IsAssignedTasksSyncEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Auditing Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable auditing of changes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isauditenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAuditEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isauditenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsAuditEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isauditenabled, value);
                this.OnPropertyChanged(nameof(IsAuditEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Auto Capture for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Auto Capture should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isautodatacaptureenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAutoDataCaptureEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isautodatacaptureenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsAutoDataCaptureEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isautodatacaptureenabled, value);
                this.OnPropertyChanged(nameof(IsAutoDataCaptureEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Auto Save Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information on whether auto save is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isautosaveenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAutoSaveEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isautosaveenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsAutoSaveEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isautosaveenabled, value);
                this.OnPropertyChanged(nameof(IsAutoSaveEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): BPF Entity Customization Feature enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether BPF Entity Customization Feature is enabled
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isbpfentitycustomizationfeatureenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsBPFEntityCustomizationFeatureEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isbpfentitycustomizationfeatureenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsBPFEntityCustomizationFeatureEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isbpfentitycustomizationfeatureenabled, value);
                this.OnPropertyChanged(nameof(IsBPFEntityCustomizationFeatureEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Conflict Detection for Mobile Client enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether conflict detection for mobile client is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isconflictdetectionenabledformobileclient)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsConflictDetectionEnabledForMobileClient
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isconflictdetectionenabledformobileclient);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsConflictDetectionEnabledForMobileClient));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isconflictdetectionenabledformobileclient, value);
                this.OnPropertyChanged(nameof(IsConflictDetectionEnabledForMobileClient));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Mailing Address Sync Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable mailing address sync for outlook and exchange.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.iscontactmailingaddresssyncenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsContactMailingAddressSyncEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.iscontactmailingaddresssyncenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsContactMailingAddressSyncEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.iscontactmailingaddresssyncenabled, value);
                this.OnPropertyChanged(nameof(IsContactMailingAddressSyncEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable or disable country code selection
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable country code selection.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdefaultcountrycodecheckenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDefaultCountryCodeCheckEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdefaultcountrycodecheckenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDefaultCountryCodeCheckEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdefaultcountrycodecheckenabled, value);
                this.OnPropertyChanged(nameof(IsDefaultCountryCodeCheckEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Delegation Access Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable Delegation Access content
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdelegateaccessenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDelegateAccessEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdelegateaccessenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDelegateAccessEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdelegateaccessenabled, value);
                this.OnPropertyChanged(nameof(IsDelegateAccessEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Action Hub for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Action Hub should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdelveactionhubintegrationenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDelveActionHubIntegrationEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdelveactionhubintegrationenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDelveActionHubIntegrationEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdelveactionhubintegrationenabled, value);
                this.OnPropertyChanged(nameof(IsDelveActionHubIntegrationEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Organization Disabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether the organization is disabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdisabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDisabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdisabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDisabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isdisabled, value);
                this.OnPropertyChanged(nameof(IsDisabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Duplicate Detection Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether duplicate detection of records is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDuplicateDetectionEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDuplicateDetectionEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabled, value);
                this.OnPropertyChanged(nameof(IsDuplicateDetectionEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Duplicate Detection Enabled For Import
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether duplicate detection of records during import is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforimport)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDuplicateDetectionEnabledForImport
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforimport);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDuplicateDetectionEnabledForImport));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforimport, value);
                this.OnPropertyChanged(nameof(IsDuplicateDetectionEnabledForImport));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Duplicate Detection Enabled For Offline Synchronization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether duplicate detection of records during offline synchronization is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforofflinesync)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDuplicateDetectionEnabledForOfflineSync
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforofflinesync);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDuplicateDetectionEnabledForOfflineSync));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforofflinesync, value);
                this.OnPropertyChanged(nameof(IsDuplicateDetectionEnabledForOfflineSync));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Duplicate Detection Enabled for Online Create/Update
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether duplicate detection during online create or update is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforonlinecreateupdate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDuplicateDetectionEnabledForOnlineCreateUpdate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforonlinecreateupdate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDuplicateDetectionEnabledForOnlineCreateUpdate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isduplicatedetectionenabledforonlinecreateupdate, value);
                this.OnPropertyChanged(nameof(IsDuplicateDetectionEnabledForOnlineCreateUpdate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allow tracking recipient activity on sent emails
        /// 
        /// Description:
        ///     (English - United States - 1033): Allow tracking recipient activity on sent emails.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isemailmonitoringallowed)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsEmailMonitoringAllowed
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isemailmonitoringallowed);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsEmailMonitoringAllowed));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isemailmonitoringallowed, value);
                this.OnPropertyChanged(nameof(IsEmailMonitoringAllowed));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Email Server Profile Content Filtering Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable Email Server Profile content filtering
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isemailserverprofilecontentfilteringenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsEmailServerProfileContentFilteringEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isemailserverprofilecontentfilteringenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsEmailServerProfileContentFilteringEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isemailserverprofilecontentfilteringenabled, value);
                this.OnPropertyChanged(nameof(IsEmailServerProfileContentFilteringEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): option set values for isenabledforallroles
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether appmodule is enabled for all roles
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isenabledforallroles)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsEnabledForAllRoles
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isenabledforallroles);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsEnabledForAllRoles));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isenabledforallroles, value);
                this.OnPropertyChanged(nameof(IsEnabledForAllRoles));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable external file storage
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the organization's files are being stored in Azure.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isexternalfilestorageenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsExternalFileStorageEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isexternalfilestorageenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsExternalFileStorageEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isexternalfilestorageenabled, value);
                this.OnPropertyChanged(nameof(IsExternalFileStorageEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable external search data syncing
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether data can be synchronized with an external search index.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isexternalsearchindexenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsExternalSearchIndexEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isexternalsearchindexenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsExternalSearchIndexEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isexternalsearchindexenabled, value);
                this.OnPropertyChanged(nameof(IsExternalSearchIndexEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Fiscal Period Monthly
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the fiscal period is displayed as the month number.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfiscalperiodmonthbased)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsFiscalPeriodMonthBased
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfiscalperiodmonthbased);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsFiscalPeriodMonthBased));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfiscalperiodmonthbased, value);
                this.OnPropertyChanged(nameof(IsFiscalPeriodMonthBased));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Automatically create folders
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether folders should be automatically created on SharePoint.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfolderautocreatedonsp)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsFolderAutoCreatedonSP
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfolderautocreatedonsp);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsFolderAutoCreatedonSP));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfolderautocreatedonsp, value);
                this.OnPropertyChanged(nameof(IsFolderAutoCreatedonSP));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Folder Based Tracking Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable folder based tracking for Server Side Sync.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfolderbasedtrackingenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsFolderBasedTrackingEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfolderbasedtrackingenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsFolderBasedTrackingEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfolderbasedtrackingenabled, value);
                this.OnPropertyChanged(nameof(IsFolderBasedTrackingEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Full-text search for Quick Find
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether full-text search for Quick Find entities should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfulltextsearchenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsFullTextSearchEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfulltextsearchenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsFullTextSearchEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isfulltextsearchenabled, value);
                this.OnPropertyChanged(nameof(IsFullTextSearchEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Hierarchical Security Model
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ishierarchicalsecuritymodelenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsHierarchicalSecurityModelEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ishierarchicalsecuritymodelenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsHierarchicalSecurityModelEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ishierarchicalsecuritymodelenabled, value);
                this.OnPropertyChanged(nameof(IsHierarchicalSecurityModelEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Mailbox Forced Unlocking Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable forced unlocking for Server Side Sync mailboxes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismailboxforcedunlockingenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsMailboxForcedUnlockingEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismailboxforcedunlockingenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsMailboxForcedUnlockingEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismailboxforcedunlockingenabled, value);
                this.OnPropertyChanged(nameof(IsMailboxForcedUnlockingEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Mailbox Keep Alive Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable mailbox keep alive for Server Side Sync.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismailboxinactivebackoffenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsMailboxInactiveBackoffEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismailboxinactivebackoffenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsMailboxInactiveBackoffEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismailboxinactivebackoffenabled, value);
                this.OnPropertyChanged(nameof(IsMailboxInactiveBackoffEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Mobile Client On Demand Sync enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether mobile client on demand sync is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismobileclientondemandsyncenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsMobileClientOnDemandSyncEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismobileclientondemandsyncenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsMobileClientOnDemandSyncEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismobileclientondemandsyncenabled, value);
                this.OnPropertyChanged(nameof(IsMobileClientOnDemandSyncEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable MobileOffline for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature MobileOffline should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismobileofflineenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsMobileOfflineEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismobileofflineenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsMobileOfflineEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ismobileofflineenabled, value);
                this.OnPropertyChanged(nameof(IsMobileOfflineEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Notes Analysis for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Notes Analysis should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isnotesanalysisenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsNotesAnalysisEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isnotesanalysisenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsNotesAnalysisEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isnotesanalysisenabled, value);
                this.OnPropertyChanged(nameof(IsNotesAnalysisEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable OfficeGraph for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature OfficeGraph should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isofficegraphenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsOfficeGraphEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isofficegraphenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsOfficeGraphEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isofficegraphenabled, value);
                this.OnPropertyChanged(nameof(IsOfficeGraphEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable One Drive for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature One Drive should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isonedriveenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsOneDriveEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isonedriveenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsOneDriveEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isonedriveenabled, value);
                this.OnPropertyChanged(nameof(IsOneDriveEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Presence Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information on whether IM presence is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispresenceenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsPresenceEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispresenceenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsPresenceEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispresenceenabled, value);
                this.OnPropertyChanged(nameof(IsPresenceEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Preview Action Card feature for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the Preview feature for Action Card should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewenabledforactioncard)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsPreviewEnabledForActionCard
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewenabledforactioncard);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsPreviewEnabledForActionCard));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewenabledforactioncard, value);
                this.OnPropertyChanged(nameof(IsPreviewEnabledForActionCard));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Auto Capture for this Organization at Preview Settings
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Auto Capture should be enabled for the organization at Preview Settings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewforautocaptureenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsPreviewForAutoCaptureEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewforautocaptureenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsPreviewForAutoCaptureEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewforautocaptureenabled, value);
                this.OnPropertyChanged(nameof(IsPreviewForAutoCaptureEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Allows Preview For Email Monitoring
        /// 
        /// Description:
        ///     (English - United States - 1033): Is Preview For Email Monitoring Allowed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewforemailmonitoringallowed)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsPreviewForEmailMonitoringAllowed
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewforemailmonitoringallowed);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsPreviewForEmailMonitoringAllowed));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.ispreviewforemailmonitoringallowed, value);
                this.OnPropertyChanged(nameof(IsPreviewForEmailMonitoringAllowed));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Read Auditing Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable auditing of read operations.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isreadauditenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsReadAuditEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isreadauditenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsReadAuditEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isreadauditenabled, value);
                this.OnPropertyChanged(nameof(IsReadAuditEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Relationship Insights for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the feature Relationship Insights should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isrelationshipinsightsenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsRelationshipInsightsEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isrelationshipinsightsenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsRelationshipInsightsEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isrelationshipinsightsenabled, value);
                this.OnPropertyChanged(nameof(IsRelationshipInsightsEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Resource booking synchronization enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates if the synchronization of user resource booking with Exchange is enabled at organization level.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isresourcebookingexchangesyncenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsResourceBookingExchangeSyncEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isresourcebookingexchangesyncenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsResourceBookingExchangeSyncEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isresourcebookingexchangesyncenabled, value);
                this.OnPropertyChanged(nameof(IsResourceBookingExchangeSyncEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Sales Order Integration Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable sales order processing integration.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.issopintegrationenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsSOPIntegrationEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.issopintegrationenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsSOPIntegrationEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.issopintegrationenabled, value);
                this.OnPropertyChanged(nameof(IsSOPIntegrationEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Text Wrap
        /// 
        /// Description:
        ///     (English - United States - 1033): Information on whether text wrap is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.istextwrapenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsTextWrapEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.istextwrapenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsTextWrapEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.istextwrapenabled, value);
                this.OnPropertyChanged(nameof(IsTextWrapEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is User Access Auditing Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable or disable auditing of user access.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isuseraccessauditenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsUserAccessAuditEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isuseraccessauditenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsUserAccessAuditEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isuseraccessauditenabled, value);
                this.OnPropertyChanged(nameof(IsUserAccessAuditEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): ISV Integration Mode
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isvintegrationcode)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue ISVIntegrationCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isvintegrationcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ISVIntegrationCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.isvintegrationcode, value);
                this.OnPropertyChanged(nameof(ISVIntegrationCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Knowledge Article Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the prefix to use for all knowledge articles in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kaprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KaPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kaprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(KaPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kaprefix, value);
                this.OnPropertyChanged(nameof(KaPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Article Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix to use for all articles in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kbprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KbPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kbprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(KbPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kbprefix, value);
                this.OnPropertyChanged(nameof(KbPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Knowledge Management Settings
        /// 
        /// Description:
        ///     (English - United States - 1033): XML string containing the Knowledge Management settings that are applied in Knowledge Management Wizard.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kmsettings)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KMSettings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kmsettings);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(KMSettings));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.kmsettings, value);
                this.OnPropertyChanged(nameof(KMSettings));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Language
        /// 
        /// Description:
        ///     (English - United States - 1033): Preferred language for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.languagecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> LanguageCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.languagecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(LanguageCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.languagecode, value);
                this.OnPropertyChanged(nameof(LanguageCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Locale
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the locale of the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.localeid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> LocaleId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.localeid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(LocaleId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.localeid, value);
                this.OnPropertyChanged(nameof(LocaleId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Long Date Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how the Long Date format is displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.longdateformatcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> LongDateFormatCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.longdateformatcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(LongDateFormatCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.longdateformatcode, value);
                this.OnPropertyChanged(nameof(LongDateFormatCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Lower Threshold For Mailbox Intermittent Issue
        /// 
        /// Description:
        ///     (English - United States - 1033): Lower Threshold For Mailbox Intermittent Issue.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mailboxintermittentissueminrange)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MailboxIntermittentIssueMinRange
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mailboxintermittentissueminrange);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MailboxIntermittentIssueMinRange));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mailboxintermittentissueminrange, value);
                this.OnPropertyChanged(nameof(MailboxIntermittentIssueMinRange));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Lower Threshold For Mailbox Permanent Issue.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mailboxpermanentissueminrange)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MailboxPermanentIssueMinRange
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mailboxpermanentissueminrange);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MailboxPermanentIssueMinRange));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mailboxpermanentissueminrange, value);
                this.OnPropertyChanged(nameof(MailboxPermanentIssueMinRange));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum number of actionsteps allowed in a BPF
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxactionstepsinbpf)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxActionStepsInBPF
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxactionstepsinbpf);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxActionStepsInBPF));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxactionstepsinbpf, value);
                this.OnPropertyChanged(nameof(MaxActionStepsInBPF));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max Appointment Duration
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of days an appointment can last.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxappointmentdurationdays)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxAppointmentDurationDays
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxappointmentdurationdays);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxAppointmentDurationDays));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxappointmentdurationdays, value);
                this.OnPropertyChanged(nameof(MaxAppointmentDurationDays));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum number of conditions allowed for mobile offline filters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxconditionsformobileofflinefilters)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxConditionsForMobileOfflineFilters
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxconditionsformobileofflinefilters);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxConditionsForMobileOfflineFilters));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxconditionsformobileofflinefilters, value);
                this.OnPropertyChanged(nameof(MaxConditionsForMobileOfflineFilters));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum depth for hierarchy security propagation.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxdepthforhierarchicalsecuritymodel)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxDepthForHierarchicalSecurityModel
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxdepthforhierarchicalsecuritymodel);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxDepthForHierarchicalSecurityModel));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxdepthforhierarchicalsecuritymodel, value);
                this.OnPropertyChanged(nameof(MaxDepthForHierarchicalSecurityModel));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max Folder Based Tracking Mappings
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of Folder Based Tracking mappings user can add
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxfolderbasedtrackingmappings)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxFolderBasedTrackingMappings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxfolderbasedtrackingmappings);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxFolderBasedTrackingMappings));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxfolderbasedtrackingmappings, value);
                this.OnPropertyChanged(nameof(MaxFolderBasedTrackingMappings));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum active business process flows per entity
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of active business process flows allowed per entity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumactivebusinessprocessflowsallowedperentity)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaximumActiveBusinessProcessFlowsAllowedPerEntity
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumactivebusinessprocessflowsallowedperentity);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaximumActiveBusinessProcessFlowsAllowedPerEntity));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumactivebusinessprocessflowsallowedperentity, value);
                this.OnPropertyChanged(nameof(MaximumActiveBusinessProcessFlowsAllowedPerEntity));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Product Properties Item Limit
        /// 
        /// Description:
        ///     (English - United States - 1033): Restrict the maximum number of product properties for a product family/bundle
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumdynamicpropertiesallowed)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaximumDynamicPropertiesAllowed
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumdynamicpropertiesallowed);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaximumDynamicPropertiesAllowed));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumdynamicpropertiesallowed, value);
                this.OnPropertyChanged(nameof(MaximumDynamicPropertiesAllowed));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum number of active SLA allowed per entity in online
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumentitieswithactivesla)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaximumEntitiesWithActiveSLA
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumentitieswithactivesla);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaximumEntitiesWithActiveSLA));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumentitieswithactivesla, value);
                this.OnPropertyChanged(nameof(MaximumEntitiesWithActiveSLA));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum number of active SLA KPI allowed per entity in online
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of SLA KPI per active SLA allowed for entity in online
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumslakpiperentitywithactivesla)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaximumSLAKPIPerEntityWithActiveSLA
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumslakpiperentitywithactivesla);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaximumSLAKPIPerEntityWithActiveSLA));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumslakpiperentitywithactivesla, value);
                this.OnPropertyChanged(nameof(MaximumSLAKPIPerEntityWithActiveSLA));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max Tracking Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum tracking number before recycling takes place.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumtrackingnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaximumTrackingNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumtrackingnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaximumTrackingNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maximumtrackingnumber, value);
                this.OnPropertyChanged(nameof(MaximumTrackingNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Bundle Item Limit
        /// 
        /// Description:
        ///     (English - United States - 1033): Restrict the maximum no of items in a bundle
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxproductsinbundle)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxProductsInBundle
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxproductsinbundle);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxProductsInBundle));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxproductsinbundle, value);
                this.OnPropertyChanged(nameof(MaxProductsInBundle));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max Records For Excel Export
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of records that will be exported to a static Microsoft Office Excel worksheet when exporting from the grid.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxrecordsforexporttoexcel)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxRecordsForExportToExcel
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxrecordsforexporttoexcel);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxRecordsForExportToExcel));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxrecordsforexporttoexcel, value);
                this.OnPropertyChanged(nameof(MaxRecordsForExportToExcel));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max Records Filter Selection
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of lookup and picklist records that can be selected by user for filtering.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxrecordsforlookupfilters)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxRecordsForLookupFilters
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxrecordsforlookupfilters);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxRecordsForLookupFilters));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxrecordsforlookupfilters, value);
                this.OnPropertyChanged(nameof(MaxRecordsForLookupFilters));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max supported IE version
        /// 
        /// Description:
        ///     (English - United States - 1033): The maximum version of IE to run browser emulation for in Outlook client
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxsupportedinternetexplorerversion)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxSupportedInternetExplorerVersion
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxsupportedinternetexplorerversion);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxSupportedInternetExplorerVersion));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxsupportedinternetexplorerversion, value);
                this.OnPropertyChanged(nameof(MaxSupportedInternetExplorerVersion));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max Upload File Size
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum allowed size of an attachment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxuploadfilesize)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxUploadFileSize
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxuploadfilesize);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxUploadFileSize));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxuploadfilesize, value);
                this.OnPropertyChanged(nameof(MaxUploadFileSize));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Max No Of Mailboxes To Enable For Verbose Logging
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of mailboxes that can be toggled for verbose logging
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxverboseloggingmailbox)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxVerboseLoggingMailbox
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxverboseloggingmailbox);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxVerboseLoggingMailbox));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxverboseloggingmailbox, value);
                this.OnPropertyChanged(nameof(MaxVerboseLoggingMailbox));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum number of sync cycles for which verbose logging will be enabled by default
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxverboseloggingsynccycles)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxVerboseLoggingSyncCycles
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxverboseloggingsynccycles);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxVerboseLoggingSyncCycles));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.maxverboseloggingsynccycles, value);
                this.OnPropertyChanged(nameof(MaxVerboseLoggingSyncCycles));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Environment selected for Integration with Microsoft Flow
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.microsoftflowenvironment)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MicrosoftFlowEnvironment
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.microsoftflowenvironment);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MicrosoftFlowEnvironment));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.microsoftflowenvironment, value);
                this.OnPropertyChanged(nameof(MicrosoftFlowEnvironment));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Min Address Synchronization Frequency
        /// 
        /// Description:
        ///     (English - United States - 1033): Normal polling frequency used for address book synchronization in Microsoft Office Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minaddressbooksyncinterval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MinAddressBookSyncInterval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minaddressbooksyncinterval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MinAddressBookSyncInterval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minaddressbooksyncinterval, value);
                this.OnPropertyChanged(nameof(MinAddressBookSyncInterval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Min Offline Synchronization Frequency
        /// 
        /// Description:
        ///     (English - United States - 1033): Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minofflinesyncinterval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MinOfflineSyncInterval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minofflinesyncinterval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MinOfflineSyncInterval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minofflinesyncinterval, value);
                this.OnPropertyChanged(nameof(MinOfflineSyncInterval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Min Synchronization Frequency
        /// 
        /// Description:
        ///     (English - United States - 1033): Minimum allowed time between scheduled Outlook synchronizations.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minoutlooksyncinterval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MinOutlookSyncInterval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minoutlooksyncinterval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MinOutlookSyncInterval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.minoutlooksyncinterval, value);
                this.OnPropertyChanged(nameof(MinOutlookSyncInterval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Minimum number of user license required for mobile offline service by production/preview organization
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflineminlicenseprod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MobileOfflineMinLicenseProd
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflineminlicenseprod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MobileOfflineMinLicenseProd));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflineminlicenseprod, value);
                this.OnPropertyChanged(nameof(MobileOfflineMinLicenseProd));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Minimum number of user license required for mobile offline service by trial organization
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflineminlicensetrial)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MobileOfflineMinLicenseTrial
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflineminlicensetrial);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MobileOfflineMinLicenseTrial));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflineminlicensetrial, value);
                this.OnPropertyChanged(nameof(MobileOfflineMinLicenseTrial));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Sync interval for mobile offline.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflinesyncinterval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MobileOfflineSyncInterval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflinesyncinterval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MobileOfflineSyncInterval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.mobileofflinesyncinterval, value);
                this.OnPropertyChanged(nameof(MobileOfflineSyncInterval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who last modified the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ModifiedBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedby, value);
                this.OnPropertyChanged(nameof(ModifiedBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the organization was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedon)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ModifiedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedon, value);
                this.OnPropertyChanged(nameof(ModifiedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who last modified the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedonbehalfby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedonbehalfby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ModifiedOnBehalfBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.modifiedonbehalfby, value);
                this.OnPropertyChanged(nameof(ModifiedOnBehalfBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Negative Currency Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how negative currency numbers are displayed throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.negativecurrencyformatcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> NegativeCurrencyFormatCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.negativecurrencyformatcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NegativeCurrencyFormatCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.negativecurrencyformatcode, value);
                this.OnPropertyChanged(nameof(NegativeCurrencyFormatCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Negative Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how negative numbers are displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.negativeformatcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue NegativeFormatCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.negativeformatcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NegativeFormatCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.negativeformatcode, value);
                this.OnPropertyChanged(nameof(NegativeFormatCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Next Tracking Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Next token to be placed on the subject line of an email message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.nexttrackingnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> NextTrackingNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.nexttrackingnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NextTrackingNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.nexttrackingnumber, value);
                this.OnPropertyChanged(nameof(NextTrackingNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Notify Mailbox Owner Of Email Server Level Alerts
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether mailbox owners will be notified of email server profile level alerts.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.notifymailboxownerofemailserverlevelalerts)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> NotifyMailboxOwnerOfEmailServerLevelAlerts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.notifymailboxownerofemailserverlevelalerts);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NotifyMailboxOwnerOfEmailServerLevelAlerts));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.notifymailboxownerofemailserverlevelalerts, value);
                this.OnPropertyChanged(nameof(NotifyMailboxOwnerOfEmailServerLevelAlerts));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Number Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Specification of how numbers are displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numberformat)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NumberFormat
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numberformat);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NumberFormat));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numberformat, value);
                this.OnPropertyChanged(nameof(NumberFormat));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Number Grouping Format
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies how numbers are grouped in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numbergroupformat)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NumberGroupFormat
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numbergroupformat);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NumberGroupFormat));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numbergroupformat, value);
                this.OnPropertyChanged(nameof(NumberGroupFormat));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Number Separator
        /// 
        /// Description:
        ///     (English - United States - 1033): Symbol used for number separation in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numberseparator)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NumberSeparator
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numberseparator);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NumberSeparator));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.numberseparator, value);
                this.OnPropertyChanged(nameof(NumberSeparator));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Office Apps Auto Deployment for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the Office Apps auto deployment is enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.officeappsautodeploymentenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> OfficeAppsAutoDeploymentEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.officeappsautodeploymentenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OfficeAppsAutoDeploymentEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.officeappsautodeploymentenabled, value);
                this.OnPropertyChanged(nameof(OfficeAppsAutoDeploymentEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): The url to open the Delve
        /// 
        /// Description:
        ///     (English - United States - 1033): The url to open the Delve for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.officegraphdelveurl)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OfficeGraphDelveUrl
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.officegraphdelveurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OfficeGraphDelveUrl));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.officegraphdelveurl, value);
                this.OnPropertyChanged(nameof(OfficeGraphDelveUrl));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable OOB Price calculation
        /// 
        /// Description:
        ///     (English - United States - 1033): Enable OOB pricing calculation logic for Opportunity, Quote, Order and Invoice entities.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.oobpricecalculationenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> OOBPriceCalculationEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.oobpricecalculationenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OOBPriceCalculationEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.oobpricecalculationenabled, value);
                this.OnPropertyChanged(nameof(OOBPriceCalculationEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Order Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix to use for all orders throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orderprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrderPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orderprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OrderPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orderprefix, value);
                this.OnPropertyChanged(nameof(OrderPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization State
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates the organization lifecycle state
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.organizationstate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue OrganizationState
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.organizationstate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OrganizationState));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.organizationstate, value);
                this.OnPropertyChanged(nameof(OrganizationState));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization Database Organization Settings
        /// 
        /// Description:
        ///     (English - United States - 1033): Organization settings stored in Organization Database.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orgdborgsettings)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrgDbOrgSettings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orgdborgsettings);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OrgDbOrgSettings));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orgdborgsettings, value);
                this.OnPropertyChanged(nameof(OrgDbOrgSettings));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable OrgInsights for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to turn on OrgInsights for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orginsightsenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> OrgInsightsEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orginsightsenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OrgInsightsEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.orginsightsenabled, value);
                this.OnPropertyChanged(nameof(OrgInsightsEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Parsed Table Column Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix used for parsed table columns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.parsedtablecolumnprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParsedTableColumnPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.parsedtablecolumnprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ParsedTableColumnPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.parsedtablecolumnprefix, value);
                this.OnPropertyChanged(nameof(ParsedTableColumnPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Parsed Table Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix used for parsed tables.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.parsedtableprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParsedTablePrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.parsedtableprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ParsedTablePrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.parsedtableprefix, value);
                this.OnPropertyChanged(nameof(ParsedTablePrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Past Expansion Window
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies the maximum number of months in past for which the recurring activities can be created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pastexpansionwindow)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> PastExpansionWindow
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pastexpansionwindow);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PastExpansionWindow));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pastexpansionwindow, value);
                this.OnPropertyChanged(nameof(PastExpansionWindow));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Picture
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.picture)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Picture
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.picture);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Picture));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.picture, value);
                this.OnPropertyChanged(nameof(Picture));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pinpointlanguagecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> PinpointLanguageCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pinpointlanguagecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PinpointLanguageCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pinpointlanguagecode, value);
                this.OnPropertyChanged(nameof(PinpointLanguageCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Plug-in Trace Log Setting
        /// 
        /// Description:
        ///     (English - United States - 1033): Plug-in Trace Log Setting for the Organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.plugintracelogsetting)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PluginTraceLogSetting
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.plugintracelogsetting);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PluginTraceLogSetting));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.plugintracelogsetting, value);
                this.OnPropertyChanged(nameof(PluginTraceLogSetting));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): PM Designator
        /// 
        /// Description:
        ///     (English - United States - 1033): PM designator to use throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pmdesignator)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PMDesignator
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pmdesignator);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PMDesignator));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pmdesignator, value);
                this.OnPropertyChanged(nameof(PMDesignator));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.postmessagewhitelistdomains)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PostMessageWhitelistDomains
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.postmessagewhitelistdomains);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PostMessageWhitelistDomains));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.postmessagewhitelistdomains, value);
                this.OnPropertyChanged(nameof(PostMessageWhitelistDomains));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Power BI feature for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the Power BI feature should be enabled for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.powerbifeatureenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> PowerBiFeatureEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.powerbifeatureenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PowerBiFeatureEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.powerbifeatureenabled, value);
                this.OnPropertyChanged(nameof(PowerBiFeatureEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Pricing Decimal Precision
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of decimal places that can be used for prices.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pricingdecimalprecision)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> PricingDecimalPrecision
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pricingdecimalprecision);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PricingDecimalPrecision));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.pricingdecimalprecision, value);
                this.OnPropertyChanged(nameof(PricingDecimalPrecision));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Privacy Statement URL
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privacystatementurl)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrivacyStatementUrl
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privacystatementurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrivacyStatementUrl));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privacystatementurl, value);
                this.OnPropertyChanged(nameof(PrivacyStatementUrl));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Privilege User Group
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the default privilege for users in the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privilegeusergroupid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> PrivilegeUserGroupId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privilegeusergroupid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrivilegeUserGroupId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privilegeusergroupid, value);
                this.OnPropertyChanged(nameof(PrivilegeUserGroupId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Privilege Reporting Group
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privreportinggroupid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> PrivReportingGroupId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privreportinggroupid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrivReportingGroupId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privreportinggroupid, value);
                this.OnPropertyChanged(nameof(PrivReportingGroupId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Privilege Reporting Group Name
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privreportinggroupname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrivReportingGroupName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privreportinggroupname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrivReportingGroupName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.privreportinggroupname, value);
                this.OnPropertyChanged(nameof(PrivReportingGroupName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Product Recommendations for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to turn on product recommendations for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.productrecommendationsenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ProductRecommendationsEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.productrecommendationsenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ProductRecommendationsEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.productrecommendationsenabled, value);
                this.OnPropertyChanged(nameof(ProductRecommendationsEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Quick Find Record Limit Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether a quick find record limit should be enabled for this organization (allows for faster Quick Find queries but prevents overly broad searches).
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.quickfindrecordlimitenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> QuickFindRecordLimitEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.quickfindrecordlimitenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(QuickFindRecordLimitEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.quickfindrecordlimitenabled, value);
                this.OnPropertyChanged(nameof(QuickFindRecordLimitEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Quote Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix to use for all quotes throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.quoteprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QuotePrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.quoteprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(QuotePrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.quoteprefix, value);
                this.OnPropertyChanged(nameof(QuotePrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Recurrence Default Number of Occurrences
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies the default value for number of occurrences field in the recurrence dialog.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrencedefaultnumberofoccurrences)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> RecurrenceDefaultNumberOfOccurrences
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrencedefaultnumberofoccurrences);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RecurrenceDefaultNumberOfOccurrences));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrencedefaultnumberofoccurrences, value);
                this.OnPropertyChanged(nameof(RecurrenceDefaultNumberOfOccurrences));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Recurrence Expansion Job Batch Interval
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies the interval (in seconds) for pausing expansion job.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionjobbatchinterval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> RecurrenceExpansionJobBatchInterval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionjobbatchinterval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RecurrenceExpansionJobBatchInterval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionjobbatchinterval, value);
                this.OnPropertyChanged(nameof(RecurrenceExpansionJobBatchInterval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Recurrence Expansion On Demand Job Batch Size
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies the value for number of instances created in on demand job in one shot.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionjobbatchsize)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> RecurrenceExpansionJobBatchSize
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionjobbatchsize);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RecurrenceExpansionJobBatchSize));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionjobbatchsize, value);
                this.OnPropertyChanged(nameof(RecurrenceExpansionJobBatchSize));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Recurrence Expansion Synchronization Create Maximum
        /// 
        /// Description:
        ///     (English - United States - 1033): Specifies the maximum number of instances to be created synchronously after creating a recurring appointment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionsynchcreatemax)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> RecurrenceExpansionSynchCreateMax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionsynchcreatemax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RecurrenceExpansionSynchCreateMax));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.recurrenceexpansionsynchcreatemax, value);
                this.OnPropertyChanged(nameof(RecurrenceExpansionSynchCreateMax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Reference SiteMap XML
        /// 
        /// Description:
        ///     (English - United States - 1033): XML string that defines the navigation structure for the application. This is the site map from the previously upgraded build and is used in a 3-way merge during upgrade.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.referencesitemapxml)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReferenceSiteMapXml
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.referencesitemapxml);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ReferenceSiteMapXml));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.referencesitemapxml, value);
                this.OnPropertyChanged(nameof(ReferenceSiteMapXml));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Render Secure Frame For Email
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag to render the body of email in the Web form in an IFRAME with the security='restricted' attribute set. This is additional security but can cause a credentials prompt.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.rendersecureiframeforemail)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> RenderSecureIFrameForEmail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.rendersecureiframeforemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RenderSecureIFrameForEmail));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.rendersecureiframeforemail, value);
                this.OnPropertyChanged(nameof(RenderSecureIFrameForEmail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Reporting Group
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportinggroupid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ReportingGroupId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportinggroupid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ReportingGroupId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportinggroupid, value);
                this.OnPropertyChanged(nameof(ReportingGroupId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Reporting Group Name
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportinggroupname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReportingGroupName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportinggroupname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ReportingGroupName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportinggroupname, value);
                this.OnPropertyChanged(nameof(ReportingGroupName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Report Script Errors
        /// 
        /// Description:
        ///     (English - United States - 1033): Picklist for selecting the organization preference for reporting scripting errors.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportscripterrors)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue ReportScriptErrors
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportscripterrors);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ReportScriptErrors));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.reportscripterrors, value);
                this.OnPropertyChanged(nameof(ReportScriptErrors));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Approval For Queue Email Required
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether Send As Other User privilege is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.requireapprovalforqueueemail)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> RequireApprovalForQueueEmail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.requireapprovalforqueueemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RequireApprovalForQueueEmail));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.requireapprovalforqueueemail, value);
                this.OnPropertyChanged(nameof(RequireApprovalForQueueEmail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Approval For User Email Required
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether Send As Other User privilege is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.requireapprovalforuseremail)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> RequireApprovalForUserEmail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.requireapprovalforuseremail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RequireApprovalForUserEmail));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.requireapprovalforuseremail, value);
                this.OnPropertyChanged(nameof(RequireApprovalForUserEmail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Apply same email address to all unresolved matches when you manually resolve it for one
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.resolvesimilarunresolvedemailaddress)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ResolveSimilarUnresolvedEmailAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.resolvesimilarunresolvedemailaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ResolveSimilarUnresolvedEmailAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.resolvesimilarunresolvedemailaddress, value);
                this.OnPropertyChanged(nameof(ResolveSimilarUnresolvedEmailAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Restrict Status Update
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag to restrict Update on incident.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.restrictstatusupdate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> RestrictStatusUpdate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.restrictstatusupdate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RestrictStatusUpdate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.restrictstatusupdate, value);
                this.OnPropertyChanged(nameof(RestrictStatusUpdate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Error status of Relationship Insights provisioning.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.rierrorstatus)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> RiErrorStatus
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.rierrorstatus);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RiErrorStatus));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.rierrorstatus, value);
                this.OnPropertyChanged(nameof(RiErrorStatus));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Sample Data Import
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the sample data import job.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sampledataimportid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SampleDataImportId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sampledataimportid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SampleDataImportId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sampledataimportid, value);
                this.OnPropertyChanged(nameof(SampleDataImportId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Scheduling engine for Appointments and Service Activities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.schedulingengine)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue SchedulingEngine
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.schedulingengine);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SchedulingEngine));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.schedulingengine, value);
                this.OnPropertyChanged(nameof(SchedulingEngine));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Customization Name Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): Prefix used for custom entities and attributes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.schemanameprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SchemaNamePrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.schemanameprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SchemaNamePrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.schemanameprefix, value);
                this.OnPropertyChanged(nameof(SchemaNamePrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Serve Static Content From CDN
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.servestaticresourcesfromazurecdn)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ServeStaticResourcesFromAzureCDN
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.servestaticresourcesfromazurecdn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ServeStaticResourcesFromAzureCDN));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.servestaticresourcesfromazurecdn, value);
                this.OnPropertyChanged(nameof(ServeStaticResourcesFromAzureCDN));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Session timeout enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether session timeout is enabled
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SessionTimeoutEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SessionTimeoutEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutenabled, value);
                this.OnPropertyChanged(nameof(SessionTimeoutEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Session timeout in minutes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutinmins)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> SessionTimeoutInMins
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutinmins);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SessionTimeoutInMins));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutinmins, value);
                this.OnPropertyChanged(nameof(SessionTimeoutInMins));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Session timeout reminder in minutes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutreminderinmins)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> SessionTimeoutReminderInMins
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutreminderinmins);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SessionTimeoutReminderInMins));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sessiontimeoutreminderinmins, value);
                this.OnPropertyChanged(nameof(SessionTimeoutReminderInMins));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Choose SharePoint Deployment Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates which SharePoint deployment type is configured for Server to Server. (Online or On-Premises)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sharepointdeploymenttype)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue SharePointDeploymentType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sharepointdeploymenttype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SharePointDeploymentType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sharepointdeploymenttype, value);
                this.OnPropertyChanged(nameof(SharePointDeploymentType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Share To Previous Owner On Assign
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether to share to previous owner on assign.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sharetopreviousowneronassign)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ShareToPreviousOwnerOnAssign
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sharetopreviousowneronassign);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ShareToPreviousOwnerOnAssign));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sharetopreviousowneronassign, value);
                this.OnPropertyChanged(nameof(ShareToPreviousOwnerOnAssign));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Show KBArticle deprecation message to user
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to display a KB article deprecation notification to the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.showkbarticledeprecationnotification)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ShowKBArticleDeprecationNotification
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.showkbarticledeprecationnotification);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ShowKBArticleDeprecationNotification));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.showkbarticledeprecationnotification, value);
                this.OnPropertyChanged(nameof(ShowKBArticleDeprecationNotification));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Show Week Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether to display the week number in calendar displays throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.showweeknumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ShowWeekNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.showweeknumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ShowWeekNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.showweeknumber, value);
                this.OnPropertyChanged(nameof(ShowWeekNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): CRMForOutlookDownloadURL
        /// 
        /// Description:
        ///     (English - United States - 1033): CRM for Outlook Download URL
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.signupoutlookdownloadfwlink)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SignupOutlookDownloadFWLink
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.signupoutlookdownloadfwlink);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SignupOutlookDownloadFWLink));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.signupoutlookdownloadfwlink, value);
                this.OnPropertyChanged(nameof(SignupOutlookDownloadFWLink));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SiteMap XML
        /// 
        /// Description:
        ///     (English - United States - 1033): XML string that defines the navigation structure for the application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sitemapxml)]
        [System.ObsoleteAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SiteMapXml
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sitemapxml);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SiteMapXml));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sitemapxml, value);
                this.OnPropertyChanged(nameof(SiteMapXml));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SLA pause states
        /// 
        /// Description:
        ///     (English - United States - 1033): Contains the on hold case status values.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.slapausestates)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SlaPauseStates
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.slapausestates);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SlaPauseStates));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.slapausestates, value);
                this.OnPropertyChanged(nameof(SlaPauseStates));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Social Insights Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag for whether the organization is using Social Insights.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightsenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SocialInsightsEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightsenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SocialInsightsEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightsenabled, value);
                this.OnPropertyChanged(nameof(SocialInsightsEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Social Insights instance identifier
        /// 
        /// Description:
        ///     (English - United States - 1033): Identifier for the Social Insights instance for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightsinstance)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SocialInsightsInstance
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightsinstance);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SocialInsightsInstance));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightsinstance, value);
                this.OnPropertyChanged(nameof(SocialInsightsInstance));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Social Insights Terms of Use
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag for whether the organization has accepted the Social Insights terms of use.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightstermsaccepted)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SocialInsightsTermsAccepted
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightstermsaccepted);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SocialInsightsTermsAccepted));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.socialinsightstermsaccepted, value);
                this.OnPropertyChanged(nameof(SocialInsightsTermsAccepted));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Sort
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sortid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> SortId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sortid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SortId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sortid, value);
                this.OnPropertyChanged(nameof(SortId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SQL Access Group
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqlaccessgroupid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SqlAccessGroupId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqlaccessgroupid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SqlAccessGroupId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqlaccessgroupid, value);
                this.OnPropertyChanged(nameof(SqlAccessGroupId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SQL Access Group Name
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqlaccessgroupname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SqlAccessGroupName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqlaccessgroupname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SqlAccessGroupName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqlaccessgroupname, value);
                this.OnPropertyChanged(nameof(SqlAccessGroupName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is SQM Enabled
        /// 
        /// Description:
        ///     (English - United States - 1033): Setting for SQM data collection, 0 no, 1 yes enabled
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqmenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SQMEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqmenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SQMEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.sqmenabled, value);
                this.OnPropertyChanged(nameof(SQMEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Support User
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the support user for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.supportuserid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SupportUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.supportuserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SupportUserId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.supportuserid, value);
                this.OnPropertyChanged(nameof(SupportUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is SLA suppressed
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether SLA is suppressed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.suppresssla)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SuppressSLA
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.suppresssla);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SuppressSLA));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.suppresssla, value);
                this.OnPropertyChanged(nameof(SuppressSLA));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable dynamics 365 azure sync framework for this organization.
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates the selection to use the dynamics 365 azure sync framework or server side sync.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.syncoptinselection)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SyncOptInSelection
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.syncoptinselection);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SyncOptInSelection));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.syncoptinselection, value);
                this.OnPropertyChanged(nameof(SyncOptInSelection));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status of opt-in or opt-out operation for dynamics 365 azure sync.
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates the status of the opt-in or opt-out operation for dynamics 365 azure sync.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.syncoptinselectionstatus)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue SyncOptInSelectionStatus
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.syncoptinselectionstatus);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SyncOptInSelectionStatus));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.syncoptinselectionstatus, value);
                this.OnPropertyChanged(nameof(SyncOptInSelectionStatus));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): System User
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the system user for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.systemuserid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SystemUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.systemuserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SystemUserId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.systemuserid, value);
                this.OnPropertyChanged(nameof(SystemUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Auto-Tag Max Cycles
        /// 
        /// Description:
        ///     (English - United States - 1033): Maximum number of aggressive polling cycles executed for email auto-tagging when a new email is received.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tagmaxaggressivecycles)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TagMaxAggressiveCycles
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tagmaxaggressivecycles);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TagMaxAggressiveCycles));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tagmaxaggressivecycles, value);
                this.OnPropertyChanged(nameof(TagMaxAggressiveCycles));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Auto-Tag Interval
        /// 
        /// Description:
        ///     (English - United States - 1033): Normal polling frequency used for email receive auto-tagging in outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tagpollingperiod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TagPollingPeriod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tagpollingperiod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TagPollingPeriod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tagpollingperiod, value);
                this.OnPropertyChanged(nameof(TagPollingPeriod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Task Flow processes for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to turn on task flows for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.taskbasedflowenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> TaskBasedFlowEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.taskbasedflowenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TaskBasedFlowEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.taskbasedflowenabled, value);
                this.OnPropertyChanged(nameof(TaskBasedFlowEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Enable Text Analytics for this Organization
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to turn on text analytics for the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.textanalyticsenabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> TextAnalyticsEnabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.textanalyticsenabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TextAnalyticsEnabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.textanalyticsenabled, value);
                this.OnPropertyChanged(nameof(TextAnalyticsEnabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Format Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how the time is displayed throughout Microsoft CRM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeformatcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue TimeFormatCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeformatcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeFormatCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeformatcode, value);
                this.OnPropertyChanged(nameof(TimeFormatCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Format String
        /// 
        /// Description:
        ///     (English - United States - 1033): Text for how time is displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeformatstring)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TimeFormatString
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeformatstring);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeFormatString));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeformatstring, value);
                this.OnPropertyChanged(nameof(TimeFormatString));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Separator
        /// 
        /// Description:
        ///     (English - United States - 1033): Text for how the time separator is displayed throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeseparator)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TimeSeparator
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeseparator);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeSeparator));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timeseparator, value);
                this.OnPropertyChanged(nameof(TimeSeparator));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Zone Rule Version Number
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timezoneruleversionnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timezoneruleversionnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeZoneRuleVersionNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.timezoneruleversionnumber, value);
                this.OnPropertyChanged(nameof(TimeZoneRuleVersionNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Token Expiration Duration
        /// 
        /// Description:
        ///     (English - United States - 1033): Duration used for token expiration.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tokenexpiry)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TokenExpiry
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tokenexpiry);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TokenExpiry));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tokenexpiry, value);
                this.OnPropertyChanged(nameof(TokenExpiry));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Token Key
        /// 
        /// Description:
        ///     (English - United States - 1033): Token key.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tokenkey)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TokenKey
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tokenkey);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TokenKey));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.tokenkey, value);
                this.OnPropertyChanged(nameof(TokenKey));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Tracking Prefix
        /// 
        /// Description:
        ///     (English - United States - 1033): History list of tracking token prefixes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingprefix)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TrackingPrefix
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingprefix);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TrackingPrefix));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingprefix, value);
                this.OnPropertyChanged(nameof(TrackingPrefix));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Tracking Token Base
        /// 
        /// Description:
        ///     (English - United States - 1033): Base number used to provide separate tracking token identifiers to users belonging to different deployments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingtokenidbase)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TrackingTokenIdBase
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingtokenidbase);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TrackingTokenIdBase));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingtokenidbase, value);
                this.OnPropertyChanged(nameof(TrackingTokenIdBase));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Tracking Token Digits
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of digits used to represent a tracking token identifier.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingtokeniddigits)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TrackingTokenIdDigits
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingtokeniddigits);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TrackingTokenIdDigits));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.trackingtokeniddigits, value);
                this.OnPropertyChanged(nameof(TrackingTokenIdDigits));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Unique String Length
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of characters appended to invoice, quote, and order numbers.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.uniquespecifierlength)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UniqueSpecifierLength
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.uniquespecifierlength);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UniqueSpecifierLength));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.uniquespecifierlength, value);
                this.OnPropertyChanged(nameof(UniqueSpecifierLength));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Set To,cc,bcc fields as unresolved if multiple matches are found
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether email address should be unresolved if multiple matches are found
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.unresolveemailaddressifmultiplematch)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> UnresolveEmailAddressIfMultipleMatch
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.unresolveemailaddressifmultiplematch);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UnresolveEmailAddressIfMultipleMatch));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.unresolveemailaddressifmultiplematch, value);
                this.OnPropertyChanged(nameof(UnresolveEmailAddressIfMultipleMatch));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Use Inbuilt Rule For Default Pricelist Selection
        /// 
        /// Description:
        ///     (English - United States - 1033): Flag indicates whether to Use Inbuilt Rule For DefaultPricelist.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useinbuiltrulefordefaultpricelistselection)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> UseInbuiltRuleForDefaultPricelistSelection
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useinbuiltrulefordefaultpricelistselection);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UseInbuiltRuleForDefaultPricelistSelection));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useinbuiltrulefordefaultpricelistselection, value);
                this.OnPropertyChanged(nameof(UseInbuiltRuleForDefaultPricelistSelection));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Legacy Form Rendering
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether to use legacy form rendering.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.uselegacyrendering)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> UseLegacyRendering
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.uselegacyrendering);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UseLegacyRendering));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.uselegacyrendering, value);
                this.OnPropertyChanged(nameof(UseLegacyRendering));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Use position hierarchy
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usepositionhierarchy)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> UsePositionHierarchy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usepositionhierarchy);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UsePositionHierarchy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usepositionhierarchy, value);
                this.OnPropertyChanged(nameof(UsePositionHierarchy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Authentication Auditing Interval
        /// 
        /// Description:
        ///     (English - United States - 1033): The interval at which user access is checked for auditing.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useraccessauditinginterval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UserAccessAuditingInterval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useraccessauditinginterval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UserAccessAuditingInterval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useraccessauditinginterval, value);
                this.OnPropertyChanged(nameof(UserAccessAuditingInterval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Use Read-Optimized Form
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates whether the read-optimized form should be enabled for this organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usereadform)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> UseReadForm
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usereadform);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UseReadForm));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usereadform, value);
                this.OnPropertyChanged(nameof(UseReadForm));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Group
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the default group of users in the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usergroupid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> UserGroupId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usergroupid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UserGroupId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.usergroupid, value);
                this.OnPropertyChanged(nameof(UserGroupId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Skype Protocol
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates default protocol selected for organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useskypeprotocol)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> UseSkypeProtocol
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useskypeprotocol);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UseSkypeProtocol));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.useskypeprotocol, value);
                this.OnPropertyChanged(nameof(UseSkypeProtocol));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): UTC Conversion Time Zone Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.utcconversiontimezonecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.utcconversiontimezonecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UTCConversionTimeZoneCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.utcconversiontimezonecode, value);
                this.OnPropertyChanged(nameof(UTCConversionTimeZoneCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): V3 Callout Hash
        /// 
        /// Description:
        ///     (English - United States - 1033): Hash of the V3 callout configuration file.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.v3calloutconfighash)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string V3CalloutConfigHash
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.v3calloutconfighash);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(V3CalloutConfigHash));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.v3calloutconfighash, value);
                this.OnPropertyChanged(nameof(V3CalloutConfigHash));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Version Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Version number of the organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.versionnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> VersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.versionnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(VersionNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.versionnumber, value);
                this.OnPropertyChanged(nameof(VersionNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Web resource hash
        /// 
        /// Description:
        ///     (English - United States - 1033): Hash value of web resources.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.webresourcehash)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WebResourceHash
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.webresourcehash);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(WebResourceHash));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.webresourcehash, value);
                this.OnPropertyChanged(nameof(WebResourceHash));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Week Start Day Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Designated first day of the week throughout Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.weekstartdaycode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue WeekStartDayCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.weekstartdaycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(WeekStartDayCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.weekstartdaycode, value);
                this.OnPropertyChanged(nameof(WeekStartDayCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): For Internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.widgetproperties)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WidgetProperties
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.widgetproperties);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(WidgetProperties));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.widgetproperties, value);
                this.OnPropertyChanged(nameof(WidgetProperties));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yammer Group Id
        /// 
        /// Description:
        ///     (English - United States - 1033): Denotes the Yammer group ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammergroupid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> YammerGroupId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammergroupid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YammerGroupId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammergroupid, value);
                this.OnPropertyChanged(nameof(YammerGroupId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yammer Network Permalink
        /// 
        /// Description:
        ///     (English - United States - 1033): Denotes the Yammer network permalink
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammernetworkpermalink)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YammerNetworkPermalink
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammernetworkpermalink);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YammerNetworkPermalink));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammernetworkpermalink, value);
                this.OnPropertyChanged(nameof(YammerNetworkPermalink));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yammer OAuth Access Token Expired
        /// 
        /// Description:
        ///     (English - United States - 1033): Denotes whether the OAuth access token for Yammer network has expired
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammeroauthaccesstokenexpired)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> YammerOAuthAccessTokenExpired
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammeroauthaccesstokenexpired);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YammerOAuthAccessTokenExpired));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammeroauthaccesstokenexpired, value);
                this.OnPropertyChanged(nameof(YammerOAuthAccessTokenExpired));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Internal Use Only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammerpostmethod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue YammerPostMethod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammerpostmethod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YammerPostMethod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yammerpostmethod, value);
                this.OnPropertyChanged(nameof(YammerPostMethod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Year Start Week Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies how the first week of the year is specified in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yearstartweekcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> YearStartWeekCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yearstartweekcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YearStartWeekCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Organization.Schema.Attributes.yearstartweekcode, value);
                this.OnPropertyChanged(nameof(YearStartWeekCode));
            }
        }
        #endregion
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.Common.VSPackages.CrmDeveloperHelper.Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): User
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Users
    /// 
    /// Description:
    ///     (English - United States - 1033): Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(SystemUser.EntityLogicalName)]
    public partial class SystemUser : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "systemuser";
        
        public const string EntitySchemaName = "SystemUser";
        
        public const int EntityTypeCode = 8;
        
        public const string EntityPrimaryIdAttribute = "systemuserid";
        
        public const string EntityPrimaryNameAttribute = "fullname";
        
        public const string EntityPrimaryImageAttribute = "entityimage";
        
        /// <summary>
        /// Default Constructor systemuser
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SystemUser() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor systemuser for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SystemUser(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        #endregion
        
        #region Primary Attributes
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.SystemUserId = value;
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SystemUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SystemUserId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(SystemUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Full Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Full name of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryNameAttribute)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FullName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(EntityPrimaryNameAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FullName));
                this.SetAttributeValue(EntityPrimaryNameAttribute, value);
                this.OnPropertyChanged(nameof(FullName));
            }
        }
        #endregion
        
        #region Attributes
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Access Mode
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.accessmode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue AccessMode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.accessmode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccessMode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.accessmode, value);
                this.OnPropertyChanged(nameof(AccessMode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_addressid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> Address1_AddressId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_addressid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_AddressId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_addressid, value);
                this.OnPropertyChanged(nameof(Address1_AddressId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Address Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of address for address 1, such as billing, shipping, or primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_addresstypecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_addresstypecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_AddressTypeCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_addresstypecode, value);
                this.OnPropertyChanged(nameof(Address1_AddressTypeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): City
        /// 
        /// Description:
        ///     (English - United States - 1033): City name for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_city)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_City
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_city);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_City));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_city, value);
                this.OnPropertyChanged(nameof(Address1_City));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the complete primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_composite)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Composite
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_composite);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Composite));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_composite, value);
                this.OnPropertyChanged(nameof(Address1_Composite));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Country/Region
        /// 
        /// Description:
        ///     (English - United States - 1033): Country/region name in address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_country)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Country
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_country);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Country));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_country, value);
                this.OnPropertyChanged(nameof(Address1_Country));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: County
        /// 
        /// Description:
        ///     (English - United States - 1033): County name for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_county)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_County
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_county);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_County));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_county, value);
                this.OnPropertyChanged(nameof(Address1_County));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Fax
        /// 
        /// Description:
        ///     (English - United States - 1033): Fax number for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_fax)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Fax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_fax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Fax));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_fax, value);
                this.OnPropertyChanged(nameof(Address1_Fax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Latitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Latitude for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_latitude)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address1_Latitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_latitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Latitude));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_latitude, value);
                this.OnPropertyChanged(nameof(Address1_Latitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Street 1
        /// 
        /// Description:
        ///     (English - United States - 1033): First line for entering address 1 information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line1)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Line1));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line1, value);
                this.OnPropertyChanged(nameof(Address1_Line1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Street 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Second line for entering address 1 information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line2)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Line2));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line2, value);
                this.OnPropertyChanged(nameof(Address1_Line2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Street 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Third line for entering address 1 information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line3)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Line3));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_line3, value);
                this.OnPropertyChanged(nameof(Address1_Line3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Longitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Longitude for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_longitude)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address1_Longitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_longitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Longitude));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_longitude, value);
                this.OnPropertyChanged(nameof(Address1_Longitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Name to enter for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_name)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_name);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Name));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_name, value);
                this.OnPropertyChanged(nameof(Address1_Name));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): ZIP/Postal Code
        /// 
        /// Description:
        ///     (English - United States - 1033): ZIP Code or postal code for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_postalcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PostalCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_postalcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_PostalCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_postalcode, value);
                this.OnPropertyChanged(nameof(Address1_PostalCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Post Office Box
        /// 
        /// Description:
        ///     (English - United States - 1033): Post office box number for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_postofficebox)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PostOfficeBox
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_postofficebox);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_PostOfficeBox));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_postofficebox, value);
                this.OnPropertyChanged(nameof(Address1_PostOfficeBox));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Method of shipment for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_shippingmethodcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_shippingmethodcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_ShippingMethodCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_shippingmethodcode, value);
                this.OnPropertyChanged(nameof(Address1_ShippingMethodCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): State/Province
        /// 
        /// Description:
        ///     (English - United States - 1033): State or province for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_stateorprovince)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_StateOrProvince
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_stateorprovince);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_StateOrProvince));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_stateorprovince, value);
                this.OnPropertyChanged(nameof(Address1_StateOrProvince));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Main Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): First telephone number associated with address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone1)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Telephone1));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone1, value);
                this.OnPropertyChanged(nameof(Address1_Telephone1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Second telephone number associated with address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone2)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Telephone2));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone2, value);
                this.OnPropertyChanged(nameof(Address1_Telephone2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Pager
        /// 
        /// Description:
        ///     (English - United States - 1033): Third telephone number associated with address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone3)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Telephone3));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_telephone3, value);
                this.OnPropertyChanged(nameof(Address1_Telephone3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: UPS Zone
        /// 
        /// Description:
        ///     (English - United States - 1033): United Parcel Service (UPS) zone for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_upszone)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_UPSZone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_upszone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_UPSZone));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_upszone, value);
                this.OnPropertyChanged(nameof(Address1_UPSZone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: UTC Offset
        /// 
        /// Description:
        ///     (English - United States - 1033): UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_utcoffset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> Address1_UTCOffset
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_utcoffset);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_UTCOffset));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address1_utcoffset, value);
                this.OnPropertyChanged(nameof(Address1_UTCOffset));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_addressid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> Address2_AddressId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_addressid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_AddressId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_addressid, value);
                this.OnPropertyChanged(nameof(Address2_AddressId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Address Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of address for address 2, such as billing, shipping, or primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_addresstypecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_addresstypecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_AddressTypeCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_addresstypecode, value);
                this.OnPropertyChanged(nameof(Address2_AddressTypeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other City
        /// 
        /// Description:
        ///     (English - United States - 1033): City name for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_city)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_City
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_city);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_City));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_city, value);
                this.OnPropertyChanged(nameof(Address2_City));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Address
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the complete secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_composite)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Composite
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_composite);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Composite));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_composite, value);
                this.OnPropertyChanged(nameof(Address2_Composite));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Country/Region
        /// 
        /// Description:
        ///     (English - United States - 1033): Country/region name in address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_country)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Country
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_country);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Country));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_country, value);
                this.OnPropertyChanged(nameof(Address2_Country));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: County
        /// 
        /// Description:
        ///     (English - United States - 1033): County name for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_county)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_County
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_county);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_County));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_county, value);
                this.OnPropertyChanged(nameof(Address2_County));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Fax
        /// 
        /// Description:
        ///     (English - United States - 1033): Fax number for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_fax)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Fax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_fax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Fax));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_fax, value);
                this.OnPropertyChanged(nameof(Address2_Fax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Latitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Latitude for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_latitude)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address2_Latitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_latitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Latitude));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_latitude, value);
                this.OnPropertyChanged(nameof(Address2_Latitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Street 1
        /// 
        /// Description:
        ///     (English - United States - 1033): First line for entering address 2 information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line1)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Line1));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line1, value);
                this.OnPropertyChanged(nameof(Address2_Line1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Street 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Second line for entering address 2 information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line2)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Line2));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line2, value);
                this.OnPropertyChanged(nameof(Address2_Line2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Street 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Third line for entering address 2 information.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line3)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Line3));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_line3, value);
                this.OnPropertyChanged(nameof(Address2_Line3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Longitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Longitude for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_longitude)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address2_Longitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_longitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Longitude));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_longitude, value);
                this.OnPropertyChanged(nameof(Address2_Longitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Name to enter for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_name)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_name);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Name));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_name, value);
                this.OnPropertyChanged(nameof(Address2_Name));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other ZIP/Postal Code
        /// 
        /// Description:
        ///     (English - United States - 1033): ZIP Code or postal code for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_postalcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PostalCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_postalcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_PostalCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_postalcode, value);
                this.OnPropertyChanged(nameof(Address2_PostalCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Post Office Box
        /// 
        /// Description:
        ///     (English - United States - 1033): Post office box number for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_postofficebox)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PostOfficeBox
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_postofficebox);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_PostOfficeBox));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_postofficebox, value);
                this.OnPropertyChanged(nameof(Address2_PostOfficeBox));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Method of shipment for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_shippingmethodcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_shippingmethodcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_ShippingMethodCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_shippingmethodcode, value);
                this.OnPropertyChanged(nameof(Address2_ShippingMethodCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other State/Province
        /// 
        /// Description:
        ///     (English - United States - 1033): State or province for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_stateorprovince)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_StateOrProvince
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_stateorprovince);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_StateOrProvince));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_stateorprovince, value);
                this.OnPropertyChanged(nameof(Address2_StateOrProvince));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Telephone 1
        /// 
        /// Description:
        ///     (English - United States - 1033): First telephone number associated with address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone1)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Telephone1));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone1, value);
                this.OnPropertyChanged(nameof(Address2_Telephone1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Telephone 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Second telephone number associated with address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone2)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Telephone2));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone2, value);
                this.OnPropertyChanged(nameof(Address2_Telephone2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Telephone 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Third telephone number associated with address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone3)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Telephone3));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_telephone3, value);
                this.OnPropertyChanged(nameof(Address2_Telephone3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: UPS Zone
        /// 
        /// Description:
        ///     (English - United States - 1033): United Parcel Service (UPS) zone for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_upszone)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_UPSZone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_upszone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_UPSZone));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_upszone, value);
                this.OnPropertyChanged(nameof(Address2_UPSZone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: UTC Offset
        /// 
        /// Description:
        ///     (English - United States - 1033): UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_utcoffset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> Address2_UTCOffset
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_utcoffset);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_UTCOffset));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.address2_utcoffset, value);
                this.OnPropertyChanged(nameof(Address2_UTCOffset));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Application ID
        /// 
        /// Description:
        ///     (English - United States - 1033): The identifier for the application. This is used to access data in another application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.applicationid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ApplicationId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.applicationid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ApplicationId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.applicationid, value);
                this.OnPropertyChanged(nameof(ApplicationId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Application ID URI
        /// 
        /// Description:
        ///     (English - United States - 1033): The URI used as a unique logical identifier for the external app. This can be used to validate the application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.applicationiduri)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ApplicationIdUri
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.applicationiduri);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ApplicationIdUri));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.applicationiduri, value);
                this.OnPropertyChanged(nameof(ApplicationIdUri));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Azure AD Object ID
        /// 
        /// Description:
        ///     (English - United States - 1033): This is the application directory object Id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.azureactivedirectoryobjectid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> AzureActiveDirectoryObjectId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.azureactivedirectoryobjectid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AzureActiveDirectoryObjectId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.azureactivedirectoryobjectid, value);
                this.OnPropertyChanged(nameof(AzureActiveDirectoryObjectId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Business Unit
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the business unit with which the user is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.businessunitid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.businessunitid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BusinessUnitId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.businessunitid, value);
                this.OnPropertyChanged(nameof(BusinessUnitId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Calendar
        /// 
        /// Description:
        ///     (English - United States - 1033): Fiscal calendar associated with the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.calendarid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CalendarId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.calendarid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CalendarId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.calendarid, value);
                this.OnPropertyChanged(nameof(CalendarId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): License Type
        /// 
        /// Description:
        ///     (English - United States - 1033): License type of user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.caltype)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue CALType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.caltype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CALType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.caltype, value);
                this.OnPropertyChanged(nameof(CALType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who created the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdby, value);
                this.OnPropertyChanged(nameof(CreatedBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the user was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdon)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdon, value);
                this.OnPropertyChanged(nameof(CreatedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who created the systemuser.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdonbehalfby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdonbehalfby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedOnBehalfBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.createdonbehalfby, value);
                this.OnPropertyChanged(nameof(CreatedOnBehalfBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Filters Populated
        /// 
        /// Description:
        ///     (English - United States - 1033): Indicates if default outlook filters have been populated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultfilterspopulated)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DefaultFiltersPopulated
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultfilterspopulated);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultFiltersPopulated));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultfilterspopulated, value);
                this.OnPropertyChanged(nameof(DefaultFiltersPopulated));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Mailbox
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the mailbox associated with this user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultmailbox)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference DefaultMailbox
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultmailbox);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultMailbox));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultmailbox, value);
                this.OnPropertyChanged(nameof(DefaultMailbox));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default OneDrive for Business Folder Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a default folder name for the user's OneDrive For Business location.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultodbfoldername)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultOdbFolderName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultodbfoldername);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultOdbFolderName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.defaultodbfoldername, value);
                this.OnPropertyChanged(nameof(DefaultOdbFolderName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Disabled Reason
        /// 
        /// Description:
        ///     (English - United States - 1033): Reason for disabling the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.disabledreason)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DisabledReason
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.disabledreason);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DisabledReason));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.disabledreason, value);
                this.OnPropertyChanged(nameof(DisabledReason));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Display in Service Views
        /// 
        /// Description:
        ///     (English - United States - 1033): Whether to display the user in service views.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.displayinserviceviews)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DisplayInServiceViews
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.displayinserviceviews);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DisplayInServiceViews));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.displayinserviceviews, value);
                this.OnPropertyChanged(nameof(DisplayInServiceViews));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Active Directory domain of which the user is a member.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.domainname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DomainName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.domainname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DomainName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.domainname, value);
                this.OnPropertyChanged(nameof(DomainName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Primary Email Status
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the status of the primary email address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.emailrouteraccessapproval)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue EmailRouterAccessApproval
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.emailrouteraccessapproval);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EmailRouterAccessApproval));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.emailrouteraccessapproval, value);
                this.OnPropertyChanged(nameof(EmailRouterAccessApproval));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Employee
        /// 
        /// Description:
        ///     (English - United States - 1033): Employee identifier for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.employeeid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmployeeId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.employeeid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EmployeeId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.employeeid, value);
                this.OnPropertyChanged(nameof(EmployeeId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Entity Image
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the default image for the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] EntityImage
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<byte[]>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage, value);
                this.OnPropertyChanged(nameof(EntityImage));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage_timestamp)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> EntityImage_Timestamp
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage_timestamp);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage_Timestamp));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage_timestamp, value);
                this.OnPropertyChanged(nameof(EntityImage_Timestamp));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage_url)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EntityImage_URL
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage_url);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage_URL));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimage_url, value);
                this.OnPropertyChanged(nameof(EntityImage_URL));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Entity Image Id
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimageid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> EntityImageId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimageid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImageId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.entityimageid, value);
                this.OnPropertyChanged(nameof(EntityImageId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Exchange Rate
        /// 
        /// Description:
        ///     (English - United States - 1033): Exchange rate for the currency associated with the systemuser with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.exchangerate)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<decimal> ExchangeRate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.exchangerate);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExchangeRate));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.exchangerate, value);
                this.OnPropertyChanged(nameof(ExchangeRate));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): First Name
        /// 
        /// Description:
        ///     (English - United States - 1033): First name of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.firstname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirstName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.firstname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FirstName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.firstname, value);
                this.OnPropertyChanged(nameof(FirstName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Government
        /// 
        /// Description:
        ///     (English - United States - 1033): Government identifier for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.governmentid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string GovernmentId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.governmentid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(GovernmentId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.governmentid, value);
                this.OnPropertyChanged(nameof(GovernmentId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Home Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Home phone number for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.homephone)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HomePhone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.homephone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(HomePhone));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.homephone, value);
                this.OnPropertyChanged(nameof(HomePhone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Unique user identity id
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.identityid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> IdentityId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.identityid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IdentityId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.identityid, value);
                this.OnPropertyChanged(nameof(IdentityId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Import Sequence Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.importsequencenumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> ImportSequenceNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.importsequencenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ImportSequenceNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.importsequencenumber, value);
                this.OnPropertyChanged(nameof(ImportSequenceNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Incoming Email Delivery Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Incoming email delivery method for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.incomingemaildeliverymethod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue IncomingEmailDeliveryMethod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.incomingemaildeliverymethod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IncomingEmailDeliveryMethod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.incomingemaildeliverymethod, value);
                this.OnPropertyChanged(nameof(IncomingEmailDeliveryMethod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Primary Email
        /// 
        /// Description:
        ///     (English - United States - 1033): Internal email address for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.internalemailaddress)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InternalEMailAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.internalemailaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InternalEMailAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.internalemailaddress, value);
                this.OnPropertyChanged(nameof(InternalEMailAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Invitation Status
        /// 
        /// Description:
        ///     (English - United States - 1033): User invitation status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.invitestatuscode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue InviteStatusCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.invitestatuscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(InviteStatusCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.invitestatuscode, value);
                this.OnPropertyChanged(nameof(InviteStatusCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about whether the user is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isdisabled)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDisabled
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isdisabled);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsDisabled));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isdisabled, value);
                this.OnPropertyChanged(nameof(IsDisabled));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email Address O365 Admin Approval Status
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the status of approval of the email address by O365 Admin.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isemailaddressapprovedbyo365admin)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsEmailAddressApprovedByO365Admin
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isemailaddressapprovedbyo365admin);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsEmailAddressApprovedByO365Admin));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isemailaddressapprovedbyo365admin, value);
                this.OnPropertyChanged(nameof(IsEmailAddressApprovedByO365Admin));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Integration user mode
        /// 
        /// Description:
        ///     (English - United States - 1033): Check if user is an integration user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isintegrationuser)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsIntegrationUser
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isintegrationuser);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsIntegrationUser));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.isintegrationuser, value);
                this.OnPropertyChanged(nameof(IsIntegrationUser));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Licensed
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about whether the user is licensed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.islicensed)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsLicensed
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.islicensed);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsLicensed));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.islicensed, value);
                this.OnPropertyChanged(nameof(IsLicensed));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Synced
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about whether the user is synced with the directory.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.issyncwithdirectory)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsSyncWithDirectory
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.issyncwithdirectory);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsSyncWithDirectory));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.issyncwithdirectory, value);
                this.OnPropertyChanged(nameof(IsSyncWithDirectory));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Job Title
        /// 
        /// Description:
        ///     (English - United States - 1033): Job title of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.jobtitle)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string JobTitle
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.jobtitle);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(JobTitle));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.jobtitle, value);
                this.OnPropertyChanged(nameof(JobTitle));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Last Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Last name of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.lastname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LastName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.lastname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(LastName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.lastname, value);
                this.OnPropertyChanged(nameof(LastName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Middle Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Middle name of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.middlename)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MiddleName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.middlename);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MiddleName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.middlename, value);
                this.OnPropertyChanged(nameof(MiddleName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Mobile Alert Email
        /// 
        /// Description:
        ///     (English - United States - 1033): Mobile alert email address for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobilealertemail)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MobileAlertEMail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobilealertemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MobileAlertEMail));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobilealertemail, value);
                this.OnPropertyChanged(nameof(MobileAlertEMail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Mobile Offline Profile
        /// 
        /// Description:
        ///     (English - United States - 1033): Items contained with a particular SystemUser.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobileofflineprofileid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference MobileOfflineProfileId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobileofflineprofileid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MobileOfflineProfileId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobileofflineprofileid, value);
                this.OnPropertyChanged(nameof(MobileOfflineProfileId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Mobile Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Mobile phone number for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobilephone)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MobilePhone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobilephone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MobilePhone));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.mobilephone, value);
                this.OnPropertyChanged(nameof(MobilePhone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who last modified the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ModifiedBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedby, value);
                this.OnPropertyChanged(nameof(ModifiedBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the user was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedon)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ModifiedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedon, value);
                this.OnPropertyChanged(nameof(ModifiedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who last modified the systemuser.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedonbehalfby)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedonbehalfby);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ModifiedOnBehalfBy));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.modifiedonbehalfby, value);
                this.OnPropertyChanged(nameof(ModifiedOnBehalfBy));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): GDPR Optout
        /// 
        /// Description:
        ///     (English - United States - 1033): Describes whether user is opted out or not
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.msdyn_gdproptout)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> msdyn_gdproptout
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.msdyn_gdproptout);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(msdyn_gdproptout));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.msdyn_gdproptout, value);
                this.OnPropertyChanged(nameof(msdyn_gdproptout));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Nickname
        /// 
        /// Description:
        ///     (English - United States - 1033): Nickname of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.nickname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NickName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.nickname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NickName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.nickname, value);
                this.OnPropertyChanged(nameof(NickName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization 
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the organization associated with the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.organizationid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> OrganizationId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.organizationid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OrganizationId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.organizationid, value);
                this.OnPropertyChanged(nameof(OrganizationId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Outgoing Email Delivery Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Outgoing email delivery method for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.outgoingemaildeliverymethod)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue OutgoingEmailDeliveryMethod
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.outgoingemaildeliverymethod);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OutgoingEmailDeliveryMethod));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.outgoingemaildeliverymethod, value);
                this.OnPropertyChanged(nameof(OutgoingEmailDeliveryMethod));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Record Created On
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.overriddencreatedon)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.overriddencreatedon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OverriddenCreatedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.overriddencreatedon, value);
                this.OnPropertyChanged(nameof(OverriddenCreatedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Manager
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the manager of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.parentsystemuserid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ParentSystemUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.parentsystemuserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ParentSystemUserId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.parentsystemuserid, value);
                this.OnPropertyChanged(nameof(ParentSystemUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Passport Hi
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.passporthi)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> PassportHi
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.passporthi);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PassportHi));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.passporthi, value);
                this.OnPropertyChanged(nameof(PassportHi));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Passport Lo
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.passportlo)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> PassportLo
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.passportlo);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PassportLo));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.passportlo, value);
                this.OnPropertyChanged(nameof(PassportLo));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Personal email address of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.personalemailaddress)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PersonalEMailAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.personalemailaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PersonalEMailAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.personalemailaddress, value);
                this.OnPropertyChanged(nameof(PersonalEMailAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Photo URL
        /// 
        /// Description:
        ///     (English - United States - 1033): URL for the Website on which a photo of the user is located.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.photourl)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PhotoUrl
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.photourl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PhotoUrl));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.photourl, value);
                this.OnPropertyChanged(nameof(PhotoUrl));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Position
        /// 
        /// Description:
        ///     (English - United States - 1033): User's position in hierarchical security model.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.positionid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference PositionId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.positionid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PositionId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.positionid, value);
                this.OnPropertyChanged(nameof(PositionId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Address
        /// 
        /// Description:
        ///     (English - United States - 1033): Preferred address for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredaddresscode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PreferredAddressCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredaddresscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredAddressCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredaddresscode, value);
                this.OnPropertyChanged(nameof(PreferredAddressCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Email
        /// 
        /// Description:
        ///     (English - United States - 1033): Preferred email address for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredemailcode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PreferredEmailCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredemailcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredEmailCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredemailcode, value);
                this.OnPropertyChanged(nameof(PreferredEmailCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Preferred phone number for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredphonecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PreferredPhoneCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredphonecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredPhoneCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.preferredphonecode, value);
                this.OnPropertyChanged(nameof(PreferredPhoneCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Process
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.processid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ProcessId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.processid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ProcessId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.processid, value);
                this.OnPropertyChanged(nameof(ProcessId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Queue
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the default queue for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.queueid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference QueueId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.queueid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(QueueId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.queueid, value);
                this.OnPropertyChanged(nameof(QueueId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Salutation
        /// 
        /// Description:
        ///     (English - United States - 1033): Salutation for correspondence with the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.salutation)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Salutation
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.salutation);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Salutation));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.salutation, value);
                this.OnPropertyChanged(nameof(Salutation));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Restricted Access Mode
        /// 
        /// Description:
        ///     (English - United States - 1033): Check if user is a setup user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.setupuser)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SetupUser
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.setupuser);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SetupUser));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.setupuser, value);
                this.OnPropertyChanged(nameof(SetupUser));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SharePoint Email Address
        /// 
        /// Description:
        ///     (English - United States - 1033): SharePoint Work Email Address
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.sharepointemailaddress)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SharePointEmailAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.sharepointemailaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SharePointEmailAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.sharepointemailaddress, value);
                this.OnPropertyChanged(nameof(SharePointEmailAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Site
        /// 
        /// Description:
        ///     (English - United States - 1033): Site at which the user is located.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.siteid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference SiteId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.siteid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SiteId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.siteid, value);
                this.OnPropertyChanged(nameof(SiteId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Skills
        /// 
        /// Description:
        ///     (English - United States - 1033): Skill set of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.skills)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Skills
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.skills);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Skills));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.skills, value);
                this.OnPropertyChanged(nameof(Skills));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Process Stage
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.stageid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> StageId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.stageid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StageId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.stageid, value);
                this.OnPropertyChanged(nameof(StageId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Territory
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the territory to which the user is assigned.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.territoryid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TerritoryId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.territoryid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TerritoryId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.territoryid, value);
                this.OnPropertyChanged(nameof(TerritoryId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Zone Rule Version Number
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.timezoneruleversionnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.timezoneruleversionnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeZoneRuleVersionNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.timezoneruleversionnumber, value);
                this.OnPropertyChanged(nameof(TimeZoneRuleVersionNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Title
        /// 
        /// Description:
        ///     (English - United States - 1033): Title of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.title)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.title);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Title));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.title, value);
                this.OnPropertyChanged(nameof(Title));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the currency associated with the systemuser.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.transactioncurrencyid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.transactioncurrencyid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TransactionCurrencyId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.transactioncurrencyid, value);
                this.OnPropertyChanged(nameof(TransactionCurrencyId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Traversed Path
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.traversedpath)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TraversedPath
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.traversedpath);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TraversedPath));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.traversedpath, value);
                this.OnPropertyChanged(nameof(TraversedPath));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User License Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the type of user license.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.userlicensetype)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UserLicenseType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.userlicensetype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UserLicenseType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.userlicensetype, value);
                this.OnPropertyChanged(nameof(UserLicenseType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): UTC Conversion Time Zone Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.utcconversiontimezonecode)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.utcconversiontimezonecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UTCConversionTimeZoneCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.utcconversiontimezonecode, value);
                this.OnPropertyChanged(nameof(UTCConversionTimeZoneCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Version number
        /// 
        /// Description:
        ///     (English - United States - 1033): Version number of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.versionnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> VersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.versionnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(VersionNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.versionnumber, value);
                this.OnPropertyChanged(nameof(VersionNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Windows Live ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.windowsliveid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WindowsLiveID
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.windowsliveid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(WindowsLiveID));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.windowsliveid, value);
                this.OnPropertyChanged(nameof(WindowsLiveID));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yammer Email
        /// 
        /// Description:
        ///     (English - United States - 1033): User's Yammer login email address
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yammeremailaddress)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YammerEmailAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yammeremailaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YammerEmailAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yammeremailaddress, value);
                this.OnPropertyChanged(nameof(YammerEmailAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yammer User ID
        /// 
        /// Description:
        ///     (English - United States - 1033): User's Yammer ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yammeruserid)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YammerUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yammeruserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YammerUserId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yammeruserid, value);
                this.OnPropertyChanged(nameof(YammerUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yomi First Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomifirstname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiFirstName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomifirstname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YomiFirstName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomifirstname, value);
                this.OnPropertyChanged(nameof(YomiFirstName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yomi Full Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomifullname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiFullName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomifullname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YomiFullName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomifullname, value);
                this.OnPropertyChanged(nameof(YomiFullName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yomi Last Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomilastname)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiLastName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomilastname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YomiLastName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomilastname, value);
                this.OnPropertyChanged(nameof(YomiLastName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yomi Middle Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomimiddlename)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiMiddleName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomimiddlename);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YomiMiddleName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SystemUser.Schema.Attributes.yomimiddlename, value);
                this.OnPropertyChanged(nameof(YomiMiddleName));
            }
        }
        #endregion
    }
}

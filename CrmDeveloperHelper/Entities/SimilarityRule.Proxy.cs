//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.Common.VSPackages.CrmDeveloperHelper.Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): Similarity Rule
    ///     (Russian - 1049): Правило подобия
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Similarity Rules
    ///     (Russian - 1049): Правила подобия
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(SimilarityRule.EntityLogicalName)]
    [System.ComponentModel.DescriptionAttribute("Similarity Rule")]
    public partial class SimilarityRule : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "similarityrule";
        
        public const string EntitySchemaName = "SimilarityRule";
        
        public const int EntityTypeCode = 9951;
        
        public const string EntityPrimaryIdAttribute = "similarityruleid";
        
        public const string EntityPrimaryNameAttribute = "name";
        
        /// <summary>
        /// Default Constructor similarityrule
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SimilarityRule() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor similarityrule for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SimilarityRule(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events

        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        

        #endregion
        
        #region Primary Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Similarity Rule
        ///     (Russian - 1049): Правило подобия
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for entity instances
        ///     (Russian - 1049): Уникальный идентификатор экземпляров сущности
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Similarity Rule")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.SimilarityRuleId = value;
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Similarity Rule
        ///     (Russian - 1049): Правило подобия
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for entity instances
        ///     (Russian - 1049): Уникальный идентификатор экземпляров сущности
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Similarity Rule")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SimilarityRuleId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SimilarityRuleId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(SimilarityRuleId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Name
        ///     (Russian - 1049): Название
        /// 
        /// Description:
        ///     (English - United States - 1033): The name of the custom entity.
        ///     (Russian - 1049): Имя настраиваемой сущности.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryNameAttribute)]
        [System.ComponentModel.DescriptionAttribute("Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(EntityPrimaryNameAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Name));
                this.SetAttributeValue(EntityPrimaryNameAttribute, value);
                this.OnPropertyChanged(nameof(Name));
            }
        }
        

        #endregion
        
        #region Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Active Rule Fetch Xml
        ///     (Russian - 1049): Активное правило Fetch XML
        /// 
        /// Description:
        ///     (English - United States - 1033): Generated Fetch xml from Active rule and rule conditions.
        ///     (Russian - 1049): Созданный Fetch XML на основе активного правила и условий правила.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.activerulefetchxml)]
        [System.ComponentModel.DescriptionAttribute("Active Rule Fetch Xml")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActiveRuleFetchXML
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.activerulefetchxml);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ActiveRuleFetchXML));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.activerulefetchxml, value);
                this.OnPropertyChanged(nameof(ActiveRuleFetchXML));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Base Record Type
        ///     (Russian - 1049): Тип базовой записи
        /// 
        /// Description:
        ///     (English - United States - 1033): Record type of the record being evaluated for potential similarities.
        ///     (Russian - 1049): Тип записи, оцениваемой с точки зрения возможного сходства.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.baseentityname)]
        [System.ComponentModel.DescriptionAttribute("Base Record Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BaseEntityName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.baseentityname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BaseEntityName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.baseentityname, value);
                this.OnPropertyChanged(nameof(BaseEntityName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Base Record Type
        ///     (Russian - 1049): Тип базовой записи
        /// 
        /// Description:
        ///     (English - United States - 1033): Record type of the record being evaluated for potential similarities.
        ///     (Russian - 1049): Тип записи, оцениваемой с точки зрения возможного сходства.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.baseentitytypecode)]
        [System.ComponentModel.DescriptionAttribute("Base Record Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue BaseEntityTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.baseentitytypecode);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Component State
        ///     (Russian - 1049): Состояние компонента
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.componentstate)]
        [System.ComponentModel.DescriptionAttribute("Component State")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.componentstate);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Component State
        ///     (Russian - 1049): Состояние компонента
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.componentstate)]
        [System.ComponentModel.DescriptionAttribute("Component State")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate> ComponentStateEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.componentstate);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        ///     (Russian - 1049): Дата создания
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        ///     (Russian - 1049): Показывает дату и время, в которые была создана запись. Дата и время отображаются для часового пояса, выбранного в параметрах Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.createdon)]
        [System.ComponentModel.DescriptionAttribute("Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.createdon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        ///     (Russian - 1049): Кем создано (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who created the record.
        ///     (Russian - 1049): Уникальный идентификатор пользователя-делегата, создавшего запись.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.createdonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Created By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.createdonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Description
        ///     (Russian - 1049): Описание
        /// 
        /// Description:
        ///     (English - United States - 1033): Description of the similarity detection rule.
        ///     (Russian - 1049): Описание правила обнаружения подобия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.description)]
        [System.ComponentModel.DescriptionAttribute("Description")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.description);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Description));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.description, value);
                this.OnPropertyChanged(nameof(Description));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): ExchangeRate
        ///     (Russian - 1049): Курс валюты
        /// 
        /// Description:
        ///     (English - United States - 1033): Exchange rate for the currency associated with the SimilarityRule with respect to the base currency.
        ///     (Russian - 1049): Обменный курс валюты, связанной с правилом подобия, по отношению к базовой валюте.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.exchangerate)]
        [System.ComponentModel.DescriptionAttribute("ExchangeRate")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<decimal> ExchangeRate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.exchangerate);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Exclude Inactive Records
        ///     (Russian - 1049): Исключение неактивных записей
        /// 
        /// Description:
        ///     (English - United States - 1033): Determines whether to flag inactive records as similarities
        ///     (Russian - 1049): Определяет, помечать ли неактивные записи как подобные
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.excludeinactiverecords)]
        [System.ComponentModel.DescriptionAttribute("Exclude Inactive Records")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ExcludeInactiveRecords
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.excludeinactiverecords);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ExcludeInactiveRecords));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.excludeinactiverecords, value);
                this.OnPropertyChanged(nameof(ExcludeInactiveRecords));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fetch Xml
        ///     (Russian - 1049): Язык FetchXML
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.fetchxmllist)]
        [System.ComponentModel.DescriptionAttribute("Fetch Xml")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FetchXmlList
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.fetchxmllist);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FetchXmlList));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.fetchxmllist, value);
                this.OnPropertyChanged(nameof(FetchXmlList));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Import Sequence Number
        ///     (Russian - 1049): Порядковый номер импорта
        /// 
        /// Description:
        ///     (English - United States - 1033): Sequence number of the import that created this record.
        ///     (Russian - 1049): Порядковый номер импорта, в результате которого была создана эта запись.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.importsequencenumber)]
        [System.ComponentModel.DescriptionAttribute("Import Sequence Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> ImportSequenceNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.importsequencenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ImportSequenceNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.importsequencenumber, value);
                this.OnPropertyChanged(nameof(ImportSequenceNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Introduced Version
        ///     (Russian - 1049): Версия введения
        /// 
        /// Description:
        ///     (English - United States - 1033): Version in which the similarity rule is introduced.
        ///     (Russian - 1049): Версия, в которой было введено правило подобия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.introducedversion)]
        [System.ComponentModel.DescriptionAttribute("Introduced Version")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IntroducedVersion
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.introducedversion);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IntroducedVersion));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.introducedversion, value);
                this.OnPropertyChanged(nameof(IntroducedVersion));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): State
        ///     (Russian - 1049): Состояние
        /// 
        /// Description:
        ///     (English - United States - 1033): Is Managed
        ///     (Russian - 1049): Управляется
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ismanaged)]
        [System.ComponentModel.DescriptionAttribute("State")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsManaged
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ismanaged);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Matching Record Type
        ///     (Russian - 1049): Соответствующий тип записи
        /// 
        /// Description:
        ///     (English - United States - 1033): Record type of the records being evaluated as potential similarities.
        ///     (Russian - 1049): Тип записей, оцениваемых с точки зрения возможного сходства.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.matchingentityname)]
        [System.ComponentModel.DescriptionAttribute("Matching Record Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MatchingEntityName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.matchingentityname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MatchingEntityName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.matchingentityname, value);
                this.OnPropertyChanged(nameof(MatchingEntityName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Matching Record Type
        ///     (Russian - 1049): Соответствующий тип записи
        /// 
        /// Description:
        ///     (English - United States - 1033): Record type of the records being evaluated as potential similarities.
        ///     (Russian - 1049): Тип записей, оцениваемых с точки зрения возможного сходства.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.matchingentitytypecode)]
        [System.ComponentModel.DescriptionAttribute("Matching Record Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue MatchingEntityTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.matchingentitytypecode);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum Number of Key Phrases
        ///     (Russian - 1049): Максимальное количество ключевых фраз
        /// 
        /// Description:
        ///     (English - United States - 1033): Enter the maximum number of keywords and key phrases to use with text analytics.
        ///     (Russian - 1049): Введите максимальное количество ключевых слов и ключевых фраз для использования применительно к текстовой аналитике.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.maxkeywords)]
        [System.ComponentModel.DescriptionAttribute("Maximum Number of Key Phrases")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> MaxKeyWords
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.maxkeywords);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MaxKeyWords));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.maxkeywords, value);
                this.OnPropertyChanged(nameof(MaxKeyWords));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        ///     (Russian - 1049): Дата изменения
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        ///     (Russian - 1049): Показывает дату и время последнего обновления записи. Дата и время отображаются для часового пояса, выбранного в параметрах Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.modifiedon)]
        [System.ComponentModel.DescriptionAttribute("Modified On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.modifiedon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        ///     (Russian - 1049): Кем изменено (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who modified the record.
        ///     (Russian - 1049): Уникальный идентификатор пользователя-делегата, изменившего запись.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.modifiedonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Modified By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.modifiedonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Maximum Key Phrase Words
        ///     (Russian - 1049): Максимальное количество ключевых слов (фраз)
        /// 
        /// Description:
        ///     (English - United States - 1033): Enter the maximum number of words in a key phrase to use with text analytics.
        ///     (Russian - 1049): Введите максимальное количество слов в ключевой фразе для использования применительно к текстовой аналитике.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ngramsize)]
        [System.ComponentModel.DescriptionAttribute("Maximum Key Phrase Words")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> NgramSize
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ngramsize);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NgramSize));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ngramsize, value);
                this.OnPropertyChanged(nameof(NgramSize));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization Id
        ///     (Russian - 1049): Идентификатор организации
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for the organization
        ///     (Russian - 1049): Уникальный идентификатор организации
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.organizationid)]
        [System.ComponentModel.DescriptionAttribute("Organization Id")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OrganizationId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.organizationid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Record Created On
        ///     (Russian - 1049): Дата создания записи
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time that the record was migrated.
        ///     (Russian - 1049): Дата и время переноса записи.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.overriddencreatedon)]
        [System.ComponentModel.DescriptionAttribute("Record Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.overriddencreatedon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OverriddenCreatedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.overriddencreatedon, value);
                this.OnPropertyChanged(nameof(OverriddenCreatedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        ///     (Russian - 1049): Дата создания
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the record was created.
        ///     (Russian - 1049): Дата и время создания записи.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.overwritetime)]
        [System.ComponentModel.DescriptionAttribute("Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OverwriteTime
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.overwritetime);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Rule Conditions Xml
        ///     (Russian - 1049): XML условий правила
        /// 
        /// Description:
        ///     (English - United States - 1033): ConditionXml for similarity rule conditions.
        ///     (Russian - 1049): XML-условия для условий правила подобия.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ruleconditionxml)]
        [System.ComponentModel.DescriptionAttribute("Rule Conditions Xml")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RuleConditionXml
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ruleconditionxml);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RuleConditionXml));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.ruleconditionxml, value);
                this.OnPropertyChanged(nameof(RuleConditionXml));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SimilarityRule
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the Similarity Rule used when synchronizing customizations for the Microsoft Dynamics 365 client for Outlook
        ///     (Russian - 1049): Уникальный идентификатор правила подобия, используемого при синхронизации настроек для клиента Microsoft Dynamics 365 для Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.similarityruleidunique)]
        [System.ComponentModel.DescriptionAttribute("SimilarityRule")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SimilarityRuleIdUnique
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.similarityruleidunique);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Solution
        ///     (Russian - 1049): Решение
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the associated solution.
        ///     (Russian - 1049): Уникальный идентификатор связанного решения.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.solutionid)]
        [System.ComponentModel.DescriptionAttribute("Solution")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SolutionId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.solutionid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status
        ///     (Russian - 1049): Состояние
        /// 
        /// Description:
        ///     (English - United States - 1033): Status of the Similarity Rule
        ///     (Russian - 1049): Состояние правила подобия
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode)]
        [System.ComponentModel.DescriptionAttribute("Status")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue statecode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(statecode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode, value);
                this.OnPropertyChanged(nameof(statecode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status
        ///     (Russian - 1049): Состояние
        /// 
        /// Description:
        ///     (English - United States - 1033): Status of the Similarity Rule
        ///     (Russian - 1049): Состояние правила подобия
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode)]
        [System.ComponentModel.DescriptionAttribute("Status")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statecode> statecodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statecode), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statecode)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statecode), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(statecodeEnum));
                this.OnPropertyChanging(nameof(statecode));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(statecode));
                this.OnPropertyChanged(nameof(statecodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status Reason
        ///     (Russian - 1049): Причина состояния
        /// 
        /// Description:
        ///     (English - United States - 1033): Reason for the status of the Similarity Rule
        ///     (Russian - 1049): Причина состояния правила подобия
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode)]
        [System.ComponentModel.DescriptionAttribute("Status Reason")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue statuscode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(statuscode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode, value);
                this.OnPropertyChanged(nameof(statuscode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status Reason
        ///     (Russian - 1049): Причина состояния
        /// 
        /// Description:
        ///     (English - United States - 1033): Reason for the status of the Similarity Rule
        ///     (Russian - 1049): Причина состояния правила подобия
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode)]
        [System.ComponentModel.DescriptionAttribute("Status Reason")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statuscode> statuscodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statuscode), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statuscode)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.OptionSets.statuscode), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(statuscodeEnum));
                this.OnPropertyChanging(nameof(statuscode));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.statuscode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(statuscode));
                this.OnPropertyChanged(nameof(statuscodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Zone Rule Version Number
        ///     (Russian - 1049): Номер версии правила часового пояса
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.timezoneruleversionnumber)]
        [System.ComponentModel.DescriptionAttribute("Time Zone Rule Version Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.timezoneruleversionnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeZoneRuleVersionNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.timezoneruleversionnumber, value);
                this.OnPropertyChanged(nameof(TimeZoneRuleVersionNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency
        ///     (Russian - 1049): Валюта
        /// 
        /// Description:
        ///     (English - United States - 1033): Exchange rate for the currency associated with the SimilarityRule with respect to the base currency.
        ///     (Russian - 1049): Обменный курс валюты, связанной с правилом подобия, по отношению к базовой валюте.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.transactioncurrencyid)]
        [System.ComponentModel.DescriptionAttribute("Currency")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.transactioncurrencyid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TransactionCurrencyId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.transactioncurrencyid, value);
                this.OnPropertyChanged(nameof(TransactionCurrencyId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): UTC Conversion Time Zone Code
        ///     (Russian - 1049): Код часового пояса (в формате UTC)
        /// 
        /// Description:
        ///     (English - United States - 1033): Time zone code that was in use when the record was created.
        ///     (Russian - 1049): Код часового пояса, использовавшийся при создании записи.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.utcconversiontimezonecode)]
        [System.ComponentModel.DescriptionAttribute("UTC Conversion Time Zone Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.utcconversiontimezonecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UTCConversionTimeZoneCode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.utcconversiontimezonecode, value);
                this.OnPropertyChanged(nameof(UTCConversionTimeZoneCode));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.versionnumber)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> VersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.SimilarityRule.Schema.Attributes.versionnumber);
            }
        }
        

        #endregion
    }
}

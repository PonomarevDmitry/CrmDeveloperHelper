//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.Common.VSPackages.CrmDeveloperHelper.Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): Team
    ///     (Russian - 1049): Рабочая группа
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Teams
    ///     (Russian - 1049): Рабочие группы
    /// 
    /// Description:
    ///     (English - United States - 1033): Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.
    ///     (Russian - 1049): Набор системных пользователей, которые обычно участвуют в совместной работе. Рабочие группы можно использовать для упрощения предоставления участникам группы общего доступа к записям и данным организации, если участники принадлежат к разным бизнес-единицам.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(Team.EntityLogicalName)]
    [System.ComponentModel.DescriptionAttribute("Team")]
    public partial class Team : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "team";
        
        public const string EntitySchemaName = "Team";
        
        public const int EntityTypeCode = 9;
        
        public const string EntityPrimaryIdAttribute = "teamid";
        
        public const string EntityPrimaryNameAttribute = "name";
        
        /// <summary>
        /// Default Constructor team
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Team() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor team for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Team(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events

        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        

        #endregion
        
        #region Primary Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Team
        ///     (Russian - 1049): Рабочая группа
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for the team.
        ///     (Russian - 1049): Уникальный идентификатор рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Team")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.TeamId = value;
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Team
        ///     (Russian - 1049): Рабочая группа
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for the team.
        ///     (Russian - 1049): Уникальный идентификатор рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Team")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> TeamId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TeamId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(TeamId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Team Name
        ///     (Russian - 1049): Название группы
        /// 
        /// Description:
        ///     (English - United States - 1033): Name of the team.
        ///     (Russian - 1049): Название рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryNameAttribute)]
        [System.ComponentModel.DescriptionAttribute("Team Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(EntityPrimaryNameAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Name));
                this.SetAttributeValue(EntityPrimaryNameAttribute, value);
                this.OnPropertyChanged(nameof(Name));
            }
        }
        

        #endregion
        
        #region Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Administrator
        ///     (Russian - 1049): Администратор
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user primary responsible for the team.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, несущего основную ответственность за рабочую группу.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.administratorid)]
        [System.ComponentModel.DescriptionAttribute("Administrator")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference AdministratorId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.administratorid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AdministratorId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.administratorid, value);
                this.OnPropertyChanged(nameof(AdministratorId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Business Unit
        ///     (Russian - 1049): Бизнес-единица
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the business unit with which the team is associated.
        ///     (Russian - 1049): Уникальный идентификатор бизнес-единицы, с которой связана рабочая группа.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.businessunitid)]
        [System.ComponentModel.DescriptionAttribute("Business Unit")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.businessunitid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BusinessUnitId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.businessunitid, value);
                this.OnPropertyChanged(nameof(BusinessUnitId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By
        ///     (Russian - 1049): Создано
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who created the team.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, создавшего рабочую группу.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.createdby)]
        [System.ComponentModel.DescriptionAttribute("Created By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.createdby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        ///     (Russian - 1049): Дата создания
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the team was created.
        ///     (Russian - 1049): Дата и время создания рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.createdon)]
        [System.ComponentModel.DescriptionAttribute("Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.createdon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        ///     (Russian - 1049): Кем создано (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who created the team.
        ///     (Russian - 1049): Уникальный идентификатор делегата, создавшего рабочую группу.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.createdonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Created By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.createdonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Description
        ///     (Russian - 1049): Описание
        /// 
        /// Description:
        ///     (English - United States - 1033): Description of the team.
        ///     (Russian - 1049): Описание рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.description)]
        [System.ComponentModel.DescriptionAttribute("Description")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.description);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Description));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.description, value);
                this.OnPropertyChanged(nameof(Description));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email
        ///     (Russian - 1049): Электронная почта
        /// 
        /// Description:
        ///     (English - United States - 1033): Email address for the team.
        ///     (Russian - 1049): Адрес электронной почты группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.emailaddress)]
        [System.ComponentModel.DescriptionAttribute("Email")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EMailAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.emailaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EMailAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.emailaddress, value);
                this.OnPropertyChanged(nameof(EMailAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Exchange Rate
        ///     (Russian - 1049): Валютный курс
        /// 
        /// Description:
        ///     (English - United States - 1033): Exchange rate for the currency associated with the team with respect to the base currency.
        ///     (Russian - 1049): Курс обмена валюты, связанной с рабочей группой, по отношению к базовой валюте.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.exchangerate)]
        [System.ComponentModel.DescriptionAttribute("Exchange Rate")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<decimal> ExchangeRate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.exchangerate);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Import Sequence Number
        ///     (Russian - 1049): Порядковый номер импорта
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the data import or data migration that created this record.
        ///     (Russian - 1049): Уникальный идентификатор импорта или переноса данных, создавшего эту запись.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.importsequencenumber)]
        [System.ComponentModel.DescriptionAttribute("Import Sequence Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> ImportSequenceNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.importsequencenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ImportSequenceNumber));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.importsequencenumber, value);
                this.OnPropertyChanged(nameof(ImportSequenceNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is Default
        ///     (Russian - 1049): По умолчанию
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about whether the team is a default business unit team.
        ///     (Russian - 1049): Сведения о том, является ли рабочая группа группой бизнес-единицы по умолчанию.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.isdefault)]
        [System.ComponentModel.DescriptionAttribute("Is Default")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsDefault
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.isdefault);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By
        ///     (Russian - 1049): Изменено
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who last modified the team.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, внесшего последнее изменение в рабочую группу.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.modifiedby)]
        [System.ComponentModel.DescriptionAttribute("Modified By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.modifiedby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        ///     (Russian - 1049): Дата изменения
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the team was last modified.
        ///     (Russian - 1049): Дата и время последнего изменения рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.modifiedon)]
        [System.ComponentModel.DescriptionAttribute("Modified On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.modifiedon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        ///     (Russian - 1049): Кем изменено (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who last modified the team.
        ///     (Russian - 1049): Уникальный идентификатор делегата, внесшего последнее изменение в рабочую группу.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.modifiedonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Modified By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.modifiedonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Organization 
        ///     (Russian - 1049): Предприятие 
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the organization associated with the team.
        ///     (Russian - 1049): Уникальный идентификатор организации, связанной с рабочей группой.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.organizationid)]
        [System.ComponentModel.DescriptionAttribute("Organization ")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> OrganizationId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.organizationid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Record Created On
        ///     (Russian - 1049): Дата создания записи
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time that the record was migrated.
        ///     (Russian - 1049): Дата и время переноса записи.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.overriddencreatedon)]
        [System.ComponentModel.DescriptionAttribute("Record Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.overriddencreatedon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OverriddenCreatedOn));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.overriddencreatedon, value);
                this.OnPropertyChanged(nameof(OverriddenCreatedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Process
        ///     (Russian - 1049): Процесс
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the ID of the process.
        ///     (Russian - 1049): Показывает идентификатор процесса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.processid)]
        [System.ComponentModel.DescriptionAttribute("Process")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ProcessId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.processid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ProcessId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.processid, value);
                this.OnPropertyChanged(nameof(ProcessId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Queue
        ///     (Russian - 1049): Очередь по умолчанию
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the default queue for the team.
        ///     (Russian - 1049): Уникальный идентификатор очереди по умолчанию для рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.queueid)]
        [System.ComponentModel.DescriptionAttribute("Default Queue")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference QueueId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.queueid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(QueueId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.queueid, value);
                this.OnPropertyChanged(nameof(QueueId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Regarding Object Id
        ///     (Russian - 1049): Идентификатор связанного объекта
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the record that the team relates to.
        ///     (Russian - 1049): Выберите запись, к которой относится рабочая группа.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.regardingobjectid)]
        [System.ComponentModel.DescriptionAttribute("Regarding Object Id")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.regardingobjectid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(RegardingObjectId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.regardingobjectid, value);
                this.OnPropertyChanged(nameof(RegardingObjectId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Process Stage
        ///     (Russian - 1049): Стадия процесса
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the ID of the stage.
        ///     (Russian - 1049): Показывает идентификатор стадии.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.stageid)]
        [System.ComponentModel.DescriptionAttribute("Process Stage")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> StageId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.stageid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StageId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.stageid, value);
                this.OnPropertyChanged(nameof(StageId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Is System Managed
        ///     (Russian - 1049): Управляется системой
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the team will be managed by the system.
        ///     (Russian - 1049): Укажите, управляется ли рабочая группа системой.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.systemmanaged)]
        [System.ComponentModel.DescriptionAttribute("Is System Managed")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> SystemManaged
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.systemmanaged);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Team Template Identifier
        ///     (Russian - 1049): Идентификатор шаблона рабочей группы
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the team template that is associated with the team.
        ///     (Russian - 1049): Показывает шаблон группы, связанный с данной рабочей группой.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtemplateid)]
        [System.ComponentModel.DescriptionAttribute("Team Template Identifier")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TeamTemplateId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtemplateid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TeamTemplateId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtemplateid, value);
                this.OnPropertyChanged(nameof(TeamTemplateId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Team Type
        ///     (Russian - 1049): Тип рабочей группы
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the team type.
        ///     (Russian - 1049): Выберите тип рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype)]
        [System.ComponentModel.DescriptionAttribute("Team Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue TeamType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TeamType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype, value);
                this.OnPropertyChanged(nameof(TeamType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Team Type
        ///     (Russian - 1049): Тип рабочей группы
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the team type.
        ///     (Russian - 1049): Выберите тип рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype)]
        [System.ComponentModel.DescriptionAttribute("Team Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.OptionSets.teamtype> TeamTypeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.OptionSets.teamtype), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.OptionSets.teamtype)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.OptionSets.teamtype), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TeamTypeEnum));
                this.OnPropertyChanging(nameof(TeamType));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.teamtype, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(TeamType));
                this.OnPropertyChanged(nameof(TeamTypeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency
        ///     (Russian - 1049): Валюта
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the currency associated with the team.
        ///     (Russian - 1049): Уникальный идентификатор валюты, связанной с рабочей группой.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.transactioncurrencyid)]
        [System.ComponentModel.DescriptionAttribute("Currency")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.transactioncurrencyid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TransactionCurrencyId));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.transactioncurrencyid, value);
                this.OnPropertyChanged(nameof(TransactionCurrencyId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Traversed Path
        ///     (Russian - 1049): Пройденный путь
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.traversedpath)]
        [System.ComponentModel.DescriptionAttribute("Traversed Path")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TraversedPath
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.traversedpath);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TraversedPath));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.traversedpath, value);
                this.OnPropertyChanged(nameof(TraversedPath));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Version number
        ///     (Russian - 1049): Номер версии
        /// 
        /// Description:
        ///     (English - United States - 1033): Version number of the team.
        ///     (Russian - 1049): Номер версии рабочей группы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.versionnumber)]
        [System.ComponentModel.DescriptionAttribute("Version number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> VersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.versionnumber);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yomi Name
        ///     (Russian - 1049): Имя Yomi
        /// 
        /// Description:
        ///     (English - United States - 1033): Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.
        ///     (Russian - 1049): Фонетическая транскрипция имени рабочей группы, написанная символами хираганы или катаканы.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.yominame)]
        [System.ComponentModel.DescriptionAttribute("Yomi Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.yominame);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YomiName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.Team.Schema.Attributes.yominame, value);
                this.OnPropertyChanged(nameof(YomiName));
            }
        }
        

        #endregion
    }
}

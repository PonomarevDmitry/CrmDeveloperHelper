//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.Common.VSPackages.CrmDeveloperHelper.Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): Service Endpoint
    ///     (Russian - 1049): Конечная точка сервиса
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Service Endpoints
    ///     (Russian - 1049): Конечные точки сервиса
    /// 
    /// Description:
    ///     (English - United States - 1033): Service endpoint that can be contacted.
    ///     (Russian - 1049): Конечная точка сервиса, к которой можно обратиться.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(ServiceEndpoint.EntityLogicalName)]
    [System.ComponentModel.DescriptionAttribute("Service Endpoint")]
    public partial class ServiceEndpoint : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "serviceendpoint";
        
        public const string EntitySchemaName = "ServiceEndpoint";
        
        public const int EntityTypeCode = 4618;
        
        public const string EntityPrimaryIdAttribute = "serviceendpointid";
        
        public const string EntityPrimaryNameAttribute = "name";
        
        /// <summary>
        /// Default Constructor serviceendpoint
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServiceEndpoint() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor serviceendpoint for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServiceEndpoint(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events

        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        

        #endregion
        
        #region Primary Attributes

        
        /// <summary>
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier of the service endpoint.")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.ServiceEndpointId = value;
            }
        }
        
        /// <summary>
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier of the service endpoint.")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ServiceEndpointId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ServiceEndpointId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(ServiceEndpointId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Name
        ///     (Russian - 1049): Название
        /// 
        /// Description:
        ///     (English - United States - 1033): Name of Service end point.
        ///     (Russian - 1049): Название конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryNameAttribute)]
        [System.ComponentModel.DescriptionAttribute("Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(EntityPrimaryNameAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Name));
                this.SetAttributeValue(EntityPrimaryNameAttribute, value);
                this.OnPropertyChanged(nameof(Name));
            }
        }
        

        #endregion
        
        #region Attributes

        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Specifies mode of authentication with SB
        ///     (Russian - 1049): Задает режим проверки подлинности со служебной шиной
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype)]
        [System.ComponentModel.DescriptionAttribute("Specifies mode of authentication with SB")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue AuthType
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AuthType));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype, value);
                this.OnPropertyChanged(nameof(AuthType));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Specifies mode of authentication with SB
        ///     (Russian - 1049): Задает режим проверки подлинности со служебной шиной
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype)]
        [System.ComponentModel.DescriptionAttribute("Specifies mode of authentication with SB")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.authtype> AuthTypeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.authtype), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.authtype)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.authtype), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AuthTypeEnum));
                this.OnPropertyChanging(nameof(AuthType));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authtype, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(AuthType));
                this.OnPropertyChanged(nameof(AuthTypeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Authentication Value
        ///     (Russian - 1049): Значение проверки подлинности
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authvalue)]
        [System.ComponentModel.DescriptionAttribute("Authentication Value")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AuthValue
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authvalue);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AuthValue));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.authvalue, value);
                this.OnPropertyChanged(nameof(AuthValue));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Component State
        ///     (Russian - 1049): Состояние компонента
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.componentstate)]
        [System.ComponentModel.DescriptionAttribute("Component State")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.componentstate);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Component State
        ///     (Russian - 1049): Состояние компонента
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.componentstate)]
        [System.ComponentModel.DescriptionAttribute("Component State")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate> ComponentStateEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.componentstate);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.GlobalOptionSets.componentstate), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Connection Mode
        ///     (Russian - 1049): Режим подключения
        /// 
        /// Description:
        ///     (English - United States - 1033): Connection mode to contact the service endpoint.
        ///     (Russian - 1049): Режим подключения для связи с конечной точкой сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode)]
        [System.ComponentModel.DescriptionAttribute("Connection Mode")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue ConnectionMode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ConnectionMode));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode, value);
                this.OnPropertyChanged(nameof(ConnectionMode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Connection Mode
        ///     (Russian - 1049): Режим подключения
        /// 
        /// Description:
        ///     (English - United States - 1033): Connection mode to contact the service endpoint.
        ///     (Russian - 1049): Режим подключения для связи с конечной точкой сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode)]
        [System.ComponentModel.DescriptionAttribute("Connection Mode")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.connectionmode> ConnectionModeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.connectionmode), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.connectionmode)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.connectionmode), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ConnectionModeEnum));
                this.OnPropertyChanging(nameof(ConnectionMode));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.connectionmode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(ConnectionMode));
                this.OnPropertyChanged(nameof(ConnectionModeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Contract
        ///     (Russian - 1049): Контракт
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of the endpoint contract.
        ///     (Russian - 1049): Тип контракта конечной точки.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract)]
        [System.ComponentModel.DescriptionAttribute("Contract")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Contract
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Contract));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract, value);
                this.OnPropertyChanged(nameof(Contract));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Contract
        ///     (Russian - 1049): Контракт
        /// 
        /// Description:
        ///     (English - United States - 1033): Type of the endpoint contract.
        ///     (Russian - 1049): Тип контракта конечной точки.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract)]
        [System.ComponentModel.DescriptionAttribute("Contract")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.contract> ContractEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.contract), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.contract)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.contract), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ContractEnum));
                this.OnPropertyChanging(nameof(Contract));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.contract, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Contract));
                this.OnPropertyChanged(nameof(ContractEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By
        ///     (Russian - 1049): Создано
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who created the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, создавшего конечную точку сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.createdby)]
        [System.ComponentModel.DescriptionAttribute("Created By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.createdby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        ///     (Russian - 1049): Дата создания
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the service endpoint was created.
        ///     (Russian - 1049): Дата и время создания конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.createdon)]
        [System.ComponentModel.DescriptionAttribute("Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.createdon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        ///     (Russian - 1049): Кем создано (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who created the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор делегата, создавшего конечную точку сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.createdonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Created By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.createdonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Description
        ///     (Russian - 1049): Описание
        /// 
        /// Description:
        ///     (English - United States - 1033): Description of the service endpoint.
        ///     (Russian - 1049): Описание конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.description)]
        [System.ComponentModel.DescriptionAttribute("Description")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.description);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Description));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.description, value);
                this.OnPropertyChanged(nameof(Description));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Introduced Version
        ///     (Russian - 1049): Версия введения
        /// 
        /// Description:
        ///     (English - United States - 1033): Version in which the form is introduced.
        ///     (Russian - 1049): Версия, в которой была введена форма.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.introducedversion)]
        [System.ComponentModel.DescriptionAttribute("Introduced Version")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IntroducedVersion
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.introducedversion);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IntroducedVersion));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.introducedversion, value);
                this.OnPropertyChanged(nameof(IntroducedVersion));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.isauthvalueset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsAuthValueSet
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.isauthvalueset);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Customizable
        ///     (Russian - 1049): Настраиваемый
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether this component can be customized.
        ///     (Russian - 1049): Сведения, указывающие на возможность настройки этого компонента.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.iscustomizable)]
        [System.ComponentModel.DescriptionAttribute("Customizable")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.iscustomizable);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IsCustomizable));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.iscustomizable, value);
                this.OnPropertyChanged(nameof(IsCustomizable));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): State
        ///     (Russian - 1049): Область
        /// 
        /// Description:
        ///     (English - United States - 1033): Information that specifies whether this component is managed.
        ///     (Russian - 1049): Сведения о том, является ли компонент управляемым.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.ismanaged)]
        [System.ComponentModel.DescriptionAttribute("State")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsManaged
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.ismanaged);
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.issaskeyset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsSASKeySet
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.issaskeyset);
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.issastokenset)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> IsSASTokenSet
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.issastokenset);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Content type of the message
        ///     (Russian - 1049): Тип контента сообщения
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat)]
        [System.ComponentModel.DescriptionAttribute("Content type of the message")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue MessageFormat
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MessageFormat));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat, value);
                this.OnPropertyChanged(nameof(MessageFormat));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Content type of the message
        ///     (Russian - 1049): Тип контента сообщения
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat)]
        [System.ComponentModel.DescriptionAttribute("Content type of the message")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.messageformat> MessageFormatEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.messageformat), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.messageformat)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.messageformat), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MessageFormatEnum));
                this.OnPropertyChanging(nameof(MessageFormat));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.messageformat, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(MessageFormat));
                this.OnPropertyChanged(nameof(MessageFormatEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By
        ///     (Russian - 1049): Изменено
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who last modified the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор пользователя, внесшего последнее изменение в конечную точку сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.modifiedby)]
        [System.ComponentModel.DescriptionAttribute("Modified By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.modifiedby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        ///     (Russian - 1049): Дата изменения
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time when the service endpoint was last modified.
        ///     (Russian - 1049): Дата и время последнего изменения конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.modifiedon)]
        [System.ComponentModel.DescriptionAttribute("Modified On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.modifiedon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        ///     (Russian - 1049): Кем изменено (делегат)
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the delegate user who modified the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор делегата, внесшего последнее изменение в конечную точку сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.modifiedonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Modified By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.modifiedonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Namespace Address
        ///     (Russian - 1049): Адрес пространства имен
        /// 
        /// Description:
        ///     (English - United States - 1033): Full service endpoint address.
        ///     (Russian - 1049): Полный путь к конечной точке сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceaddress)]
        [System.ComponentModel.DescriptionAttribute("Namespace Address")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NamespaceAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceaddress);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NamespaceAddress));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceaddress, value);
                this.OnPropertyChanged(nameof(NamespaceAddress));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Format of Service Bus Namespace
        ///     (Russian - 1049): Формат пространства имен шины обслуживания
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat)]
        [System.ComponentModel.DescriptionAttribute("Format of Service Bus Namespace")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue NamespaceFormat
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NamespaceFormat));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat, value);
                this.OnPropertyChanged(nameof(NamespaceFormat));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Format of Service Bus Namespace
        ///     (Russian - 1049): Формат пространства имен шины обслуживания
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat)]
        [System.ComponentModel.DescriptionAttribute("Format of Service Bus Namespace")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.namespaceformat> NamespaceFormatEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.namespaceformat), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.namespaceformat)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.namespaceformat), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NamespaceFormatEnum));
                this.OnPropertyChanging(nameof(NamespaceFormat));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.namespaceformat, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(NamespaceFormat));
                this.OnPropertyChanged(nameof(NamespaceFormatEnum));
            }
        }
        
        /// <summary>
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the organization with which the service endpoint is associated.
        ///     (Russian - 1049): Уникальный идентификатор организации, с которой связана конечная точка сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.organizationid)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier of the organization with which the service endpoint is associat" +
            "ed.")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OrganizationId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.organizationid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Record Overwrite Time
        ///     (Russian - 1049): Время замены записи
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        ///     (Russian - 1049): Только для внутреннего использования.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.overwritetime)]
        [System.ComponentModel.DescriptionAttribute("Record Overwrite Time")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OverwriteTime
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.overwritetime);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Path
        ///     (Russian - 1049): Путь
        /// 
        /// Description:
        ///     (English - United States - 1033): Path to the service endpoint.
        ///     (Russian - 1049): Путь к конечной точке сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.path)]
        [System.ComponentModel.DescriptionAttribute("Path")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Path
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.path);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Path));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.path, value);
                this.OnPropertyChanged(nameof(Path));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Shared Access Key
        ///     (Russian - 1049): Общий ключ доступа
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.saskey)]
        [System.ComponentModel.DescriptionAttribute("Shared Access Key")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SASKey
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.saskey);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SASKey));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.saskey, value);
                this.OnPropertyChanged(nameof(SASKey));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Shared Access Key Name
        ///     (Russian - 1049): Имя общего ключа доступа
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.saskeyname)]
        [System.ComponentModel.DescriptionAttribute("Shared Access Key Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SASKeyName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.saskeyname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SASKeyName));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.saskeyname, value);
                this.OnPropertyChanged(nameof(SASKeyName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Shared Access Token
        ///     (Russian - 1049): Общий токен доступа
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.sastoken)]
        [System.ComponentModel.DescriptionAttribute("Shared Access Token")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SASToken
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.sastoken);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SASToken));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.sastoken, value);
                this.OnPropertyChanged(nameof(SASToken));
            }
        }
        
        /// <summary>
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the service endpoint.
        ///     (Russian - 1049): Уникальный идентификатор конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.serviceendpointidunique)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier of the service endpoint.")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ServiceEndpointIdUnique
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.serviceendpointidunique);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Solution
        ///     (Russian - 1049): Решение
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the associated solution.
        ///     (Russian - 1049): Уникальный идентификатор связанного решения.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.solutionid)]
        [System.ComponentModel.DescriptionAttribute("Solution")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> SolutionId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.solutionid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Service Namespace
        ///     (Russian - 1049): Пространство имен сервиса
        /// 
        /// Description:
        ///     (English - United States - 1033): Namespace of the App Fabric solution.
        ///     (Russian - 1049): Пространство имен решения App Fabric.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.solutionnamespace)]
        [System.ComponentModel.DescriptionAttribute("Service Namespace")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SolutionNamespace
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.solutionnamespace);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SolutionNamespace));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.solutionnamespace, value);
                this.OnPropertyChanged(nameof(SolutionNamespace));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Url Address
        ///     (Russian - 1049): URL-адрес
        /// 
        /// Description:
        ///     (English - United States - 1033): Full service endpoint Url.
        ///     (Russian - 1049): Полный URL-адрес конечной точки сервиса.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.url)]
        [System.ComponentModel.DescriptionAttribute("Url Address")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Url
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.url);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Url));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.url, value);
                this.OnPropertyChanged(nameof(Url));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Claim
        ///     (Russian - 1049): Требование пользователя
        /// 
        /// Description:
        ///     (English - United States - 1033): Additional user claim value type.
        ///     (Russian - 1049): Дополнительный тип значения требования пользователя.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim)]
        [System.ComponentModel.DescriptionAttribute("User Claim")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue UserClaim
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UserClaim));
                this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim, value);
                this.OnPropertyChanged(nameof(UserClaim));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): User Claim
        ///     (Russian - 1049): Требование пользователя
        /// 
        /// Description:
        ///     (English - United States - 1033): Additional user claim value type.
        ///     (Russian - 1049): Дополнительный тип значения требования пользователя.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim)]
        [System.ComponentModel.DescriptionAttribute("User Claim")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.userclaim> UserClaimEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSetValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim);
                if (((optionSetValue != null) 
                            && System.Enum.IsDefined(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.userclaim), optionSetValue.Value)))
                {
                    return ((Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.userclaim)(System.Enum.ToObject(typeof(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.OptionSets.userclaim), optionSetValue.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UserClaimEnum));
                this.OnPropertyChanging(nameof(UserClaim));
                if ((value == null))
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim, null);
                }
                else
                {
                    this.SetAttributeValue(Nav.Common.VSPackages.CrmDeveloperHelper.Entities.ServiceEndpoint.Schema.Attributes.userclaim, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(UserClaim));
                this.OnPropertyChanged(nameof(UserClaimEnum));
            }
        }
        

        #endregion
    }
}

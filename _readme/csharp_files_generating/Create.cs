//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RFB.Core.Requests
{
    
    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace=CreateRequest<Microsoft.Xrm.Sdk.Entity>.SdkMessageRequestName)]
    [Microsoft.Xrm.Sdk.Client.RequestProxyAttribute(CreateRequest<Microsoft.Xrm.Sdk.Entity>.SdkMessageNamespace)]
    public partial class CreateRequest<T> : Microsoft.Xrm.Sdk.OrganizationRequest
        where T : Microsoft.Xrm.Sdk.Entity, new ()
    {
        
        public const string SdkMessageNamespace = "http://schemas.microsoft.com/xrm/2011/Contracts";
        
        public const string SdkMessageRequestName = "Create";
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool MaintainLegacyAppServerBehavior
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Parameters.Contains(nameof(MaintainLegacyAppServerBehavior)))
                {
                    return ((bool)(this.Parameters[nameof(MaintainLegacyAppServerBehavior)]));
                }
                else
                {
                    return default(bool);
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.Parameters[nameof(MaintainLegacyAppServerBehavior)] = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool SuppressDuplicateDetection
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Parameters.Contains(nameof(SuppressDuplicateDetection)))
                {
                    return ((bool)(this.Parameters[nameof(SuppressDuplicateDetection)]));
                }
                else
                {
                    return default(bool);
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.Parameters[nameof(SuppressDuplicateDetection)] = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ReturnRowVersion
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Parameters.Contains(nameof(ReturnRowVersion)))
                {
                    return ((bool)(this.Parameters[nameof(ReturnRowVersion)]));
                }
                else
                {
                    return default(bool);
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.Parameters[nameof(ReturnRowVersion)] = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T Target
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Parameters.Contains(nameof(Target)))
                {
                    return ((T)(this.Parameters[nameof(Target)]));
                }
                else
                {
                    return default(T);
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.Parameters[nameof(Target)] = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SolutionUniqueName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Parameters.Contains(nameof(SolutionUniqueName)))
                {
                    return ((string)(this.Parameters[nameof(SolutionUniqueName)]));
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.Parameters[nameof(SolutionUniqueName)] = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool CalculateMatchCodeSynchronously
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Parameters.Contains(nameof(CalculateMatchCodeSynchronously)))
                {
                    return ((bool)(this.Parameters[nameof(CalculateMatchCodeSynchronously)]));
                }
                else
                {
                    return default(bool);
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.Parameters[nameof(CalculateMatchCodeSynchronously)] = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CreateRequest() : 
                this(new T())
        {
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CreateRequest(T target)
        {
            this.RequestName = CreateRequest<Microsoft.Xrm.Sdk.Entity>.SdkMessageRequestName;

            this.Target = default(T);

            this.Target = target;
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Namespace=CreateRequest<Microsoft.Xrm.Sdk.Entity>.SdkMessageNamespace)]
    [Microsoft.Xrm.Sdk.Client.ResponseProxyAttribute(CreateRequest<Microsoft.Xrm.Sdk.Entity>.SdkMessageRequestName)]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class CreateResponse : Microsoft.Xrm.Sdk.OrganizationResponse
    {
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CreateResponse()
        {
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Guid id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                if (this.Results.Contains(nameof(id)))
                {
                    return ((System.Guid)(this.Results[nameof(id)]));
                }
                else
                {
                    return default(System.Guid);
                }
            }
        }
    }
}

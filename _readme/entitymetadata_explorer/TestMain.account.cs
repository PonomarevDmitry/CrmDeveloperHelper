//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entities
{
    
    
    /// <summary>
    /// DisplayName:
    ///     (English - United States - 1033): Account
    /// 
    /// DisplayCollectionName:
    ///     (English - United States - 1033): Accounts
    /// 
    /// Description:
    ///     (English - United States - 1033): Business that represents a customer or potential customer. The company that is billed in business transactions.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute(Account.EntityLogicalName)]
    [System.ComponentModel.DescriptionAttribute("Account")]
    public partial class Account : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        
        public const string EntityLogicalName = "account";
        
        public const string EntitySchemaName = "Account";
        
        public const int EntityTypeCode = 1;
        
        public const string EntityPrimaryIdAttribute = "accountid";
        
        public const string EntityPrimaryNameAttribute = "name";
        
        public const string EntityPrimaryImageAttribute = "entityimage";
        
        /// <summary>
        /// Default Constructor account
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Account() : 
                base(EntityLogicalName)
        {
        }
        
        /// <summary>
        /// Constructor account for populating via LINQ queries given a LINQ anonymous type object
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Account(object anonymousObject) : 
                this()
        {
            if (anonymousObject == null)
            {
                return;
            }

            System.Type anonymousObjectType = anonymousObject.GetType();

            if (!anonymousObjectType.Name.StartsWith("<>")
                || anonymousObjectType.Name.IndexOf("AnonymousType", System.StringComparison.InvariantCultureIgnoreCase) == -1
            )
            {
                return;
            }

            foreach (var prop in anonymousObjectType.GetProperties())
            {
                var value = prop.GetValue(anonymousObject, null);
                var name = prop.Name.ToLower();

                switch (name)
                {
                    case "id":
                    case EntityPrimaryIdAttribute:
                        if (value is System.Guid idValue)
                        {
                            Attributes[EntityPrimaryIdAttribute] = base.Id = idValue;
                        }
                        break;

                    default:
                        if (value is Microsoft.Xrm.Sdk.FormattedValueCollection formattedValueCollection)
                        {
                            FormattedValues.AddRange(formattedValueCollection);
                        }
                        else
                        {
                            Attributes[name] = value;
                        }
                        break;
                }
            }
        }
        
        #region NotifyProperty Events
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
        #endregion
        
        #region Primary Attributes
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Account
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.AccountId = value;
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Account
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryIdAttribute)]
        [System.ComponentModel.DescriptionAttribute("Account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> AccountId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(EntityPrimaryIdAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountId));
                this.SetAttributeValue(EntityPrimaryIdAttribute, value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged(nameof(AccountId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Account Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the company or business name.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(EntityPrimaryNameAttribute)]
        [System.ComponentModel.DescriptionAttribute("Account Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(EntityPrimaryNameAttribute);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Name));
                this.SetAttributeValue(EntityPrimaryNameAttribute, value);
                this.OnPropertyChanged(nameof(Name));
            }
        }
        #endregion
        
        #region Attributes
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Category
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a category to indicate whether the customer account is standard or preferred.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountcategorycode)]
        [System.ComponentModel.DescriptionAttribute("Category")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue AccountCategoryCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.accountcategorycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountCategoryCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.accountcategorycode, value);
                this.OnPropertyChanged(nameof(AccountCategoryCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Category
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a category to indicate whether the customer account is standard or preferred.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountcategorycode)]
        [System.ComponentModel.DescriptionAttribute("Category")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.accountcategorycode> AccountCategoryCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.accountcategorycode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.accountcategorycode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.accountcategorycode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.accountcategorycode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountCategoryCodeEnum));
                this.OnPropertyChanging(nameof(AccountCategoryCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.accountcategorycode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.accountcategorycode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(AccountCategoryCode));
                this.OnPropertyChanged(nameof(AccountCategoryCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Classification
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountclassificationcode)]
        [System.ComponentModel.DescriptionAttribute("Classification")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue AccountClassificationCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.accountclassificationcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountClassificationCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.accountclassificationcode, value);
                this.OnPropertyChanged(nameof(AccountClassificationCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Classification
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountclassificationcode)]
        [System.ComponentModel.DescriptionAttribute("Classification")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.accountclassificationcode> AccountClassificationCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.accountclassificationcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.accountclassificationcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.accountclassificationcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.accountclassificationcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountClassificationCodeEnum));
                this.OnPropertyChanging(nameof(AccountClassificationCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.accountclassificationcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.accountclassificationcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(AccountClassificationCode));
                this.OnPropertyChanged(nameof(AccountClassificationCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Account Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Type an ID number or code for the account to quickly search and identify the account in system views.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountnumber)]
        [System.ComponentModel.DescriptionAttribute("Account Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AccountNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.accountnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountNumber));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.accountnumber, value);
                this.OnPropertyChanged(nameof(AccountNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Account Rating
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a rating to indicate the value of the customer account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountratingcode)]
        [System.ComponentModel.DescriptionAttribute("Account Rating")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue AccountRatingCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.accountratingcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountRatingCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.accountratingcode, value);
                this.OnPropertyChanged(nameof(AccountRatingCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Account Rating
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a rating to indicate the value of the customer account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.accountratingcode)]
        [System.ComponentModel.DescriptionAttribute("Account Rating")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.accountratingcode> AccountRatingCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.accountratingcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.accountratingcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.accountratingcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.accountratingcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(AccountRatingCodeEnum));
                this.OnPropertyChanging(nameof(AccountRatingCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.accountratingcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.accountratingcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(AccountRatingCode));
                this.OnPropertyChanged(nameof(AccountRatingCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_addressid)]
        [System.ComponentModel.DescriptionAttribute("Address 1: ID")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> Address1_AddressId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Entities.Account.Schema.Attributes.address1_addressid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_AddressId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_addressid, value);
                this.OnPropertyChanged(nameof(Address1_AddressId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Address Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the primary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_addresstypecode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Address Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address1_addresstypecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_AddressTypeCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_addresstypecode, value);
                this.OnPropertyChanged(nameof(Address1_AddressTypeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Address Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the primary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_addresstypecode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Address Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.address1_addresstypecode> Address1_AddressTypeCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address1_addresstypecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.address1_addresstypecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.address1_addresstypecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.address1_addresstypecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_AddressTypeCodeEnum));
                this.OnPropertyChanging(nameof(Address1_AddressTypeCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_addresstypecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_addresstypecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Address1_AddressTypeCode));
                this.OnPropertyChanged(nameof(Address1_AddressTypeCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: City
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the city for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_city)]
        [System.ComponentModel.DescriptionAttribute("Address 1: City")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_City
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_city);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_City));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_city, value);
                this.OnPropertyChanged(nameof(Address1_City));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the complete primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_composite)]
        [System.ComponentModel.DescriptionAttribute("Address 1")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Composite
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_composite);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Country/Region
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the country or region for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_country)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Country/Region")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Country
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_country);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Country));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_country, value);
                this.OnPropertyChanged(nameof(Address1_Country));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: County
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the county for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_county)]
        [System.ComponentModel.DescriptionAttribute("Address 1: County")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_County
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_county);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_County));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_county, value);
                this.OnPropertyChanged(nameof(Address1_County));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Fax
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the fax number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_fax)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Fax")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Fax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_fax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Fax));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_fax, value);
                this.OnPropertyChanged(nameof(Address1_Fax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Freight Terms
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the freight terms for the primary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_freighttermscode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Freight Terms")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address1_FreightTermsCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address1_freighttermscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_FreightTermsCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_freighttermscode, value);
                this.OnPropertyChanged(nameof(Address1_FreightTermsCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Freight Terms
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the freight terms for the primary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_freighttermscode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Freight Terms")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.address1_freighttermscode> Address1_FreightTermsCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address1_freighttermscode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.address1_freighttermscode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.address1_freighttermscode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.address1_freighttermscode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_FreightTermsCodeEnum));
                this.OnPropertyChanging(nameof(Address1_FreightTermsCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_freighttermscode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_freighttermscode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Address1_FreightTermsCode));
                this.OnPropertyChanged(nameof(Address1_FreightTermsCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Latitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the latitude value for the primary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_latitude)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Latitude")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address1_Latitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Entities.Account.Schema.Attributes.address1_latitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Latitude));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_latitude, value);
                this.OnPropertyChanged(nameof(Address1_Latitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Street 1
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the first line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_line1)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Street 1")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_line1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Line1));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_line1, value);
                this.OnPropertyChanged(nameof(Address1_Line1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Street 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the second line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_line2)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Street 2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_line2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Line2));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_line2, value);
                this.OnPropertyChanged(nameof(Address1_Line2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Street 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the third line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_line3)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Street 3")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_line3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Line3));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_line3, value);
                this.OnPropertyChanged(nameof(Address1_Line3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Longitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the longitude value for the primary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_longitude)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Longitude")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address1_Longitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Entities.Account.Schema.Attributes.address1_longitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Longitude));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_longitude, value);
                this.OnPropertyChanged(nameof(Address1_Longitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a descriptive name for the primary address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_name)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_name);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Name));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_name, value);
                this.OnPropertyChanged(nameof(Address1_Name));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: ZIP/Postal Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the ZIP Code or postal code for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_postalcode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: ZIP/Postal Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PostalCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_postalcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_PostalCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_postalcode, value);
                this.OnPropertyChanged(nameof(Address1_PostalCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Post Office Box
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the post office box number of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_postofficebox)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Post Office Box")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PostOfficeBox
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_postofficebox);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_PostOfficeBox));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_postofficebox, value);
                this.OnPropertyChanged(nameof(Address1_PostOfficeBox));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Primary Contact Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the name of the main contact at the account's primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_primarycontactname)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Primary Contact Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PrimaryContactName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_primarycontactname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_PrimaryContactName));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_primarycontactname, value);
                this.OnPropertyChanged(nameof(Address1_PrimaryContactName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_shippingmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Shipping Method")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address1_shippingmethodcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_ShippingMethodCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_shippingmethodcode, value);
                this.OnPropertyChanged(nameof(Address1_ShippingMethodCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_shippingmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Shipping Method")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.address1_shippingmethodcode> Address1_ShippingMethodCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address1_shippingmethodcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.address1_shippingmethodcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.address1_shippingmethodcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.address1_shippingmethodcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_ShippingMethodCodeEnum));
                this.OnPropertyChanging(nameof(Address1_ShippingMethodCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_shippingmethodcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_shippingmethodcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Address1_ShippingMethodCode));
                this.OnPropertyChanged(nameof(Address1_ShippingMethodCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: State/Province
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the state or province of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_stateorprovince)]
        [System.ComponentModel.DescriptionAttribute("Address 1: State/Province")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_StateOrProvince
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_stateorprovince);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_StateOrProvince));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_stateorprovince, value);
                this.OnPropertyChanged(nameof(Address1_StateOrProvince));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the main phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_telephone1)]
        [System.ComponentModel.DescriptionAttribute("Address Phone")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_telephone1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Telephone1));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_telephone1, value);
                this.OnPropertyChanged(nameof(Address1_Telephone1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Telephone 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a second phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_telephone2)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Telephone 2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_telephone2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Telephone2));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_telephone2, value);
                this.OnPropertyChanged(nameof(Address1_Telephone2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: Telephone 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a third phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_telephone3)]
        [System.ComponentModel.DescriptionAttribute("Address 1: Telephone 3")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_telephone3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_Telephone3));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_telephone3, value);
                this.OnPropertyChanged(nameof(Address1_Telephone3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: UPS Zone
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_upszone)]
        [System.ComponentModel.DescriptionAttribute("Address 1: UPS Zone")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_UPSZone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address1_upszone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_UPSZone));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_upszone, value);
                this.OnPropertyChanged(nameof(Address1_UPSZone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 1: UTC Offset
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address1_utcoffset)]
        [System.ComponentModel.DescriptionAttribute("Address 1: UTC Offset")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> Address1_UTCOffset
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.address1_utcoffset);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address1_UTCOffset));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address1_utcoffset, value);
                this.OnPropertyChanged(nameof(Address1_UTCOffset));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_addressid)]
        [System.ComponentModel.DescriptionAttribute("Address 2: ID")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> Address2_AddressId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Entities.Account.Schema.Attributes.address2_addressid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_AddressId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_addressid, value);
                this.OnPropertyChanged(nameof(Address2_AddressId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Address Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the secondary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_addresstypecode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Address Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address2_addresstypecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_AddressTypeCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_addresstypecode, value);
                this.OnPropertyChanged(nameof(Address2_AddressTypeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Address Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the secondary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_addresstypecode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Address Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.address2_addresstypecode> Address2_AddressTypeCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address2_addresstypecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.address2_addresstypecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.address2_addresstypecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.address2_addresstypecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_AddressTypeCodeEnum));
                this.OnPropertyChanging(nameof(Address2_AddressTypeCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_addresstypecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_addresstypecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Address2_AddressTypeCode));
                this.OnPropertyChanged(nameof(Address2_AddressTypeCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: City
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the city for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_city)]
        [System.ComponentModel.DescriptionAttribute("Address 2: City")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_City
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_city);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_City));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_city, value);
                this.OnPropertyChanged(nameof(Address2_City));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the complete secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_composite)]
        [System.ComponentModel.DescriptionAttribute("Address 2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Composite
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_composite);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Country/Region
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the country or region for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_country)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Country/Region")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Country
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_country);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Country));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_country, value);
                this.OnPropertyChanged(nameof(Address2_Country));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: County
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the county for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_county)]
        [System.ComponentModel.DescriptionAttribute("Address 2: County")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_County
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_county);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_County));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_county, value);
                this.OnPropertyChanged(nameof(Address2_County));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Fax
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the fax number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_fax)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Fax")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Fax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_fax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Fax));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_fax, value);
                this.OnPropertyChanged(nameof(Address2_Fax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Freight Terms
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_freighttermscode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Freight Terms")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address2_FreightTermsCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address2_freighttermscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_FreightTermsCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_freighttermscode, value);
                this.OnPropertyChanged(nameof(Address2_FreightTermsCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Freight Terms
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_freighttermscode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Freight Terms")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.address2_freighttermscode> Address2_FreightTermsCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address2_freighttermscode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.address2_freighttermscode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.address2_freighttermscode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.address2_freighttermscode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_FreightTermsCodeEnum));
                this.OnPropertyChanging(nameof(Address2_FreightTermsCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_freighttermscode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_freighttermscode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Address2_FreightTermsCode));
                this.OnPropertyChanged(nameof(Address2_FreightTermsCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Latitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the latitude value for the secondary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_latitude)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Latitude")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address2_Latitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Entities.Account.Schema.Attributes.address2_latitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Latitude));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_latitude, value);
                this.OnPropertyChanged(nameof(Address2_Latitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Street 1
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the first line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_line1)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Street 1")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_line1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Line1));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_line1, value);
                this.OnPropertyChanged(nameof(Address2_Line1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Street 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the second line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_line2)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Street 2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_line2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Line2));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_line2, value);
                this.OnPropertyChanged(nameof(Address2_Line2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Street 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the third line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_line3)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Street 3")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_line3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Line3));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_line3, value);
                this.OnPropertyChanged(nameof(Address2_Line3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Longitude
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the longitude value for the secondary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_longitude)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Longitude")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<double> Address2_Longitude
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>(Entities.Account.Schema.Attributes.address2_longitude);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Longitude));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_longitude, value);
                this.OnPropertyChanged(nameof(Address2_Longitude));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a descriptive name for the secondary address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_name)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Name
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_name);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Name));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_name, value);
                this.OnPropertyChanged(nameof(Address2_Name));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: ZIP/Postal Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the ZIP Code or postal code for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_postalcode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: ZIP/Postal Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PostalCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_postalcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_PostalCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_postalcode, value);
                this.OnPropertyChanged(nameof(Address2_PostalCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Post Office Box
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the post office box number of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_postofficebox)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Post Office Box")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PostOfficeBox
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_postofficebox);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_PostOfficeBox));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_postofficebox, value);
                this.OnPropertyChanged(nameof(Address2_PostOfficeBox));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Primary Contact Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the name of the main contact at the account's secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_primarycontactname)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Primary Contact Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PrimaryContactName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_primarycontactname);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_PrimaryContactName));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_primarycontactname, value);
                this.OnPropertyChanged(nameof(Address2_PrimaryContactName));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_shippingmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Shipping Method")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address2_shippingmethodcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_ShippingMethodCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_shippingmethodcode, value);
                this.OnPropertyChanged(nameof(Address2_ShippingMethodCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_shippingmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Shipping Method")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.address2_shippingmethodcode> Address2_ShippingMethodCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.address2_shippingmethodcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.address2_shippingmethodcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.address2_shippingmethodcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.address2_shippingmethodcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_ShippingMethodCodeEnum));
                this.OnPropertyChanging(nameof(Address2_ShippingMethodCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_shippingmethodcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_shippingmethodcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(Address2_ShippingMethodCode));
                this.OnPropertyChanged(nameof(Address2_ShippingMethodCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: State/Province
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the state or province of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_stateorprovince)]
        [System.ComponentModel.DescriptionAttribute("Address 2: State/Province")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_StateOrProvince
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_stateorprovince);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_StateOrProvince));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_stateorprovince, value);
                this.OnPropertyChanged(nameof(Address2_StateOrProvince));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Telephone 1
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the main phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_telephone1)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Telephone 1")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_telephone1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Telephone1));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_telephone1, value);
                this.OnPropertyChanged(nameof(Address2_Telephone1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Telephone 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a second phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_telephone2)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Telephone 2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_telephone2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Telephone2));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_telephone2, value);
                this.OnPropertyChanged(nameof(Address2_Telephone2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: Telephone 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a third phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_telephone3)]
        [System.ComponentModel.DescriptionAttribute("Address 2: Telephone 3")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_telephone3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_Telephone3));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_telephone3, value);
                this.OnPropertyChanged(nameof(Address2_Telephone3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: UPS Zone
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_upszone)]
        [System.ComponentModel.DescriptionAttribute("Address 2: UPS Zone")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_UPSZone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.address2_upszone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_UPSZone));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_upszone, value);
                this.OnPropertyChanged(nameof(Address2_UPSZone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Address 2: UTC Offset
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.address2_utcoffset)]
        [System.ComponentModel.DescriptionAttribute("Address 2: UTC Offset")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> Address2_UTCOffset
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.address2_utcoffset);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Address2_UTCOffset));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.address2_utcoffset, value);
                this.OnPropertyChanged(nameof(Address2_UTCOffset));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Aging 30
        /// 
        /// Description:
        ///     (English - United States - 1033): For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.aging30)]
        [System.ComponentModel.DescriptionAttribute("Aging 30")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Aging30
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.aging30);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Aging 30 (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): The base currency equivalent of the aging 30 field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.aging30_base)]
        [System.ComponentModel.DescriptionAttribute("Aging 30 (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Aging30_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.aging30_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Aging 60
        /// 
        /// Description:
        ///     (English - United States - 1033): For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.aging60)]
        [System.ComponentModel.DescriptionAttribute("Aging 60")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Aging60
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.aging60);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Aging 60 (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): The base currency equivalent of the aging 60 field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.aging60_base)]
        [System.ComponentModel.DescriptionAttribute("Aging 60 (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Aging60_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.aging60_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Aging 90
        /// 
        /// Description:
        ///     (English - United States - 1033): For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.aging90)]
        [System.ComponentModel.DescriptionAttribute("Aging 90")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Aging90
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.aging90);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Aging 90 (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): The base currency equivalent of the aging 90 field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.aging90_base)]
        [System.ComponentModel.DescriptionAttribute("Aging 90 (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Aging90_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.aging90_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Business Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the legal designation or other business type of the account for contracts or reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.businesstypecode)]
        [System.ComponentModel.DescriptionAttribute("Business Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue BusinessTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.businesstypecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BusinessTypeCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.businesstypecode, value);
                this.OnPropertyChanged(nameof(BusinessTypeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Business Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the legal designation or other business type of the account for contracts or reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.businesstypecode)]
        [System.ComponentModel.DescriptionAttribute("Business Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.businesstypecode> BusinessTypeCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.businesstypecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.businesstypecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.businesstypecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.businesstypecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(BusinessTypeCodeEnum));
                this.OnPropertyChanging(nameof(BusinessTypeCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.businesstypecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.businesstypecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(BusinessTypeCode));
                this.OnPropertyChanged(nameof(BusinessTypeCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdby)]
        [System.ComponentModel.DescriptionAttribute("Created By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.createdby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (External Party)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the external party who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdbyexternalparty)]
        [System.ComponentModel.DescriptionAttribute("Created By (External Party)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.createdbyexternalparty);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created On
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdon)]
        [System.ComponentModel.DescriptionAttribute("Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> CreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.createdon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Created By (Delegate)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Created By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.createdonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Credit Limit
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.creditlimit)]
        [System.ComponentModel.DescriptionAttribute("Credit Limit")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money CreditLimit
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.creditlimit);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreditLimit));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.creditlimit, value);
                this.OnPropertyChanged(nameof(CreditLimit));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Credit Limit (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the credit limit converted to the system's default base currency for reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.creditlimit_base)]
        [System.ComponentModel.DescriptionAttribute("Credit Limit (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money CreditLimit_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.creditlimit_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Credit Hold
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.creditonhold)]
        [System.ComponentModel.DescriptionAttribute("Credit Hold")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> CreditOnHold
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.creditonhold);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreditOnHold));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.creditonhold, value);
                this.OnPropertyChanged(nameof(CreditOnHold));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Customer Size
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the size category or range of the account for segmentation and reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.customersizecode)]
        [System.ComponentModel.DescriptionAttribute("Customer Size")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue CustomerSizeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.customersizecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CustomerSizeCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.customersizecode, value);
                this.OnPropertyChanged(nameof(CustomerSizeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Customer Size
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the size category or range of the account for segmentation and reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.customersizecode)]
        [System.ComponentModel.DescriptionAttribute("Customer Size")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.customersizecode> CustomerSizeCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.customersizecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.customersizecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.customersizecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.customersizecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CustomerSizeCodeEnum));
                this.OnPropertyChanging(nameof(CustomerSizeCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.customersizecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.customersizecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(CustomerSizeCode));
                this.OnPropertyChanged(nameof(CustomerSizeCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Relationship Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the category that best describes the relationship between the account and your organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.customertypecode)]
        [System.ComponentModel.DescriptionAttribute("Relationship Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue CustomerTypeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.customertypecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CustomerTypeCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.customertypecode, value);
                this.OnPropertyChanged(nameof(CustomerTypeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Relationship Type
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the category that best describes the relationship between the account and your organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.customertypecode)]
        [System.ComponentModel.DescriptionAttribute("Relationship Type")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.customertypecode> CustomerTypeCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.customertypecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.customertypecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.customertypecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.customertypecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CustomerTypeCodeEnum));
                this.OnPropertyChanging(nameof(CustomerTypeCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.customertypecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.customertypecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(CustomerTypeCode));
                this.OnPropertyChanged(nameof(CustomerTypeCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Price List
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.defaultpricelevelid)]
        [System.ComponentModel.DescriptionAttribute("Price List")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference DefaultPriceLevelId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.defaultpricelevelid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DefaultPriceLevelId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.defaultpricelevelid, value);
                this.OnPropertyChanged(nameof(DefaultPriceLevelId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Description
        /// 
        /// Description:
        ///     (English - United States - 1033): Type additional information to describe the account, such as an excerpt from the company's website.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.description)]
        [System.ComponentModel.DescriptionAttribute("Description")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.description);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Description));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.description, value);
                this.OnPropertyChanged(nameof(Description));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Do not allow Bulk Emails
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotbulkemail)]
        [System.ComponentModel.DescriptionAttribute("Do not allow Bulk Emails")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotBulkEMail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotbulkemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotBulkEMail));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotbulkemail, value);
                this.OnPropertyChanged(nameof(DoNotBulkEMail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Do not allow Bulk Mails
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotbulkpostalmail)]
        [System.ComponentModel.DescriptionAttribute("Do not allow Bulk Mails")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotBulkPostalMail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotbulkpostalmail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotBulkPostalMail));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotbulkpostalmail, value);
                this.OnPropertyChanged(nameof(DoNotBulkPostalMail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Do not allow Emails
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account allows direct email sent from Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotemail)]
        [System.ComponentModel.DescriptionAttribute("Do not allow Emails")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotEMail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotEMail));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotemail, value);
                this.OnPropertyChanged(nameof(DoNotEMail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Do not allow Faxes
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotfax)]
        [System.ComponentModel.DescriptionAttribute("Do not allow Faxes")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotFax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotfax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotFax));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotfax, value);
                this.OnPropertyChanged(nameof(DoNotFax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Do not allow Phone Calls
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotphone)]
        [System.ComponentModel.DescriptionAttribute("Do not allow Phone Calls")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotPhone
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotphone);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotPhone));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotphone, value);
                this.OnPropertyChanged(nameof(DoNotPhone));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Do not allow Mails
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotpostalmail)]
        [System.ComponentModel.DescriptionAttribute("Do not allow Mails")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotPostalMail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotpostalmail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotPostalMail));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotpostalmail, value);
                this.OnPropertyChanged(nameof(DoNotPostalMail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Send Marketing Materials
        /// 
        /// Description:
        ///     (English - United States - 1033): Select whether the account accepts marketing materials, such as brochures or catalogs.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.donotsendmm)]
        [System.ComponentModel.DescriptionAttribute("Send Marketing Materials")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> DoNotSendMM
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.donotsendmm);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(DoNotSendMM));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.donotsendmm, value);
                this.OnPropertyChanged(nameof(DoNotSendMM));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the primary email address for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.emailaddress1)]
        [System.ComponentModel.DescriptionAttribute("Email")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EMailAddress1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.emailaddress1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EMailAddress1));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.emailaddress1, value);
                this.OnPropertyChanged(nameof(EMailAddress1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email Address 2
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the secondary email address for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.emailaddress2)]
        [System.ComponentModel.DescriptionAttribute("Email Address 2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EMailAddress2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.emailaddress2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EMailAddress2));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.emailaddress2, value);
                this.OnPropertyChanged(nameof(EMailAddress2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Email Address 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Type an alternate email address for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.emailaddress3)]
        [System.ComponentModel.DescriptionAttribute("Email Address 3")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EMailAddress3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.emailaddress3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EMailAddress3));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.emailaddress3, value);
                this.OnPropertyChanged(nameof(EMailAddress3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Default Image
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the default image for the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.entityimage)]
        [System.ComponentModel.DescriptionAttribute("Default Image")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] EntityImage
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<byte[]>(Entities.Account.Schema.Attributes.entityimage);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(EntityImage));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.entityimage, value);
                this.OnPropertyChanged(nameof(EntityImage));
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.entityimage_timestamp)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> EntityImage_Timestamp
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Entities.Account.Schema.Attributes.entityimage_timestamp);
            }
        }
        
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.entityimage_url)]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EntityImage_URL
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.entityimage_url);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Entity Image Id
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.entityimageid)]
        [System.ComponentModel.DescriptionAttribute("Entity Image Id")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> EntityImageId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Entities.Account.Schema.Attributes.entityimageid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Exchange Rate
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.exchangerate)]
        [System.ComponentModel.DescriptionAttribute("Exchange Rate")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<decimal> ExchangeRate
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>(Entities.Account.Schema.Attributes.exchangerate);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Fax
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the fax number for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.fax)]
        [System.ComponentModel.DescriptionAttribute("Fax")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.fax);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Fax));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.fax, value);
                this.OnPropertyChanged(nameof(Fax));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Follow Email Activity
        /// 
        /// Description:
        ///     (English - United States - 1033): Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.followemail)]
        [System.ComponentModel.DescriptionAttribute("Follow Email Activity")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> FollowEmail
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.followemail);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FollowEmail));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.followemail, value);
                this.OnPropertyChanged(nameof(FollowEmail));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): FTP Site
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the URL for the account's FTP site to enable users to access data and share documents.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.ftpsiteurl)]
        [System.ComponentModel.DescriptionAttribute("FTP Site")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FtpSiteURL
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.ftpsiteurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(FtpSiteURL));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.ftpsiteurl, value);
                this.OnPropertyChanged(nameof(FtpSiteURL));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Import Sequence Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.importsequencenumber)]
        [System.ComponentModel.DescriptionAttribute("Import Sequence Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> ImportSequenceNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.importsequencenumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ImportSequenceNumber));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.importsequencenumber, value);
                this.OnPropertyChanged(nameof(ImportSequenceNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Industry
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the account's primary industry for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.industrycode)]
        [System.ComponentModel.DescriptionAttribute("Industry")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue IndustryCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.industrycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IndustryCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.industrycode, value);
                this.OnPropertyChanged(nameof(IndustryCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Industry
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the account's primary industry for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.industrycode)]
        [System.ComponentModel.DescriptionAttribute("Industry")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.industrycode> IndustryCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.industrycode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.industrycode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.industrycode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.industrycode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(IndustryCodeEnum));
                this.OnPropertyChanging(nameof(IndustryCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.industrycode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.industrycode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(IndustryCode));
                this.OnPropertyChanged(nameof(IndustryCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Last On Hold Time
        /// 
        /// Description:
        ///     (English - United States - 1033): Contains the date and time stamp of the last on hold time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.lastonholdtime)]
        [System.ComponentModel.DescriptionAttribute("Last On Hold Time")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> LastOnHoldTime
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.lastonholdtime);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(LastOnHoldTime));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.lastonholdtime, value);
                this.OnPropertyChanged(nameof(LastOnHoldTime));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Last Date Included in Campaign
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the date when the account was last included in a marketing campaign or quick campaign.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.lastusedincampaign)]
        [System.ComponentModel.DescriptionAttribute("Last Date Included in Campaign")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> LastUsedInCampaign
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.lastusedincampaign);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(LastUsedInCampaign));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.lastusedincampaign, value);
                this.OnPropertyChanged(nameof(LastUsedInCampaign));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Market Capitalization
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.marketcap)]
        [System.ComponentModel.DescriptionAttribute("Market Capitalization")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money MarketCap
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.marketcap);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MarketCap));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.marketcap, value);
                this.OnPropertyChanged(nameof(MarketCap));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Market Capitalization (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the market capitalization converted to the system's default base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.marketcap_base)]
        [System.ComponentModel.DescriptionAttribute("Market Capitalization (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money MarketCap_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.marketcap_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Marketing Only
        /// 
        /// Description:
        ///     (English - United States - 1033): Whether is only for marketing
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.marketingonly)]
        [System.ComponentModel.DescriptionAttribute("Marketing Only")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> MarketingOnly
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.marketingonly);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(MarketingOnly));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.marketingonly, value);
                this.OnPropertyChanged(nameof(MarketingOnly));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Master ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the master account that the account was merged with.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.masterid)]
        [System.ComponentModel.DescriptionAttribute("Master ID")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference MasterId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.masterid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Merged
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows whether the account has been merged with another account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.merged)]
        [System.ComponentModel.DescriptionAttribute("Merged")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> Merged
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.merged);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedby)]
        [System.ComponentModel.DescriptionAttribute("Modified By")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.modifiedby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (External Party)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the external party who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedbyexternalparty)]
        [System.ComponentModel.DescriptionAttribute("Modified By (External Party)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.modifiedbyexternalparty);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified On
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedon)]
        [System.ComponentModel.DescriptionAttribute("Modified On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.modifiedon);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Modified By (Delegate)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedonbehalfby)]
        [System.ComponentModel.DescriptionAttribute("Modified By (Delegate)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.modifiedonbehalfby);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Number of Employees
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.numberofemployees)]
        [System.ComponentModel.DescriptionAttribute("Number of Employees")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> NumberOfEmployees
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.numberofemployees);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(NumberOfEmployees));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.numberofemployees, value);
                this.OnPropertyChanged(nameof(NumberOfEmployees));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): On Hold Time (Minutes)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows how long, in minutes, that the record was on hold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.onholdtime)]
        [System.ComponentModel.DescriptionAttribute("On Hold Time (Minutes)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> OnHoldTime
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.onholdtime);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Deals
        /// 
        /// Description:
        ///     (English - United States - 1033): Number of open opportunities against an account and its child accounts.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.opendeals)]
        [System.ComponentModel.DescriptionAttribute("Open Deals")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> OpenDeals
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.opendeals);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Deals (Last Updated On)
        /// 
        /// Description:
        ///     (English - United States - 1033): Last Updated time of rollup field Open Deals.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.opendeals_date)]
        [System.ComponentModel.DescriptionAttribute("Open Deals (Last Updated On)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OpenDeals_Date
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.opendeals_date);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Deals (State)
        /// 
        /// Description:
        ///     (English - United States - 1033): State of rollup field Open Deals.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.opendeals_state)]
        [System.ComponentModel.DescriptionAttribute("Open Deals (State)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> OpenDeals_State
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.opendeals_state);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Revenue
        /// 
        /// Description:
        ///     (English - United States - 1033): Sum of open revenue against an account and its child accounts.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.openrevenue)]
        [System.ComponentModel.DescriptionAttribute("Open Revenue")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money OpenRevenue
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.openrevenue);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Revenue (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): Value of the Open Revenue in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.openrevenue_base)]
        [System.ComponentModel.DescriptionAttribute("Open Revenue (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money OpenRevenue_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.openrevenue_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Revenue (Last Updated On)
        /// 
        /// Description:
        ///     (English - United States - 1033): Last Updated time of rollup field Open Revenue.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.openrevenue_date)]
        [System.ComponentModel.DescriptionAttribute("Open Revenue (Last Updated On)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OpenRevenue_Date
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.openrevenue_date);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Open Revenue (State)
        /// 
        /// Description:
        ///     (English - United States - 1033): State of rollup field Open Revenue.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.openrevenue_state)]
        [System.ComponentModel.DescriptionAttribute("Open Revenue (State)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> OpenRevenue_State
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.openrevenue_state);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Originating Lead
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.originatingleadid)]
        [System.ComponentModel.DescriptionAttribute("Originating Lead")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OriginatingLeadId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.originatingleadid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OriginatingLeadId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.originatingleadid, value);
                this.OnPropertyChanged(nameof(OriginatingLeadId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Record Created On
        /// 
        /// Description:
        ///     (English - United States - 1033): Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.overriddencreatedon)]
        [System.ComponentModel.DescriptionAttribute("Record Created On")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>(Entities.Account.Schema.Attributes.overriddencreatedon);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OverriddenCreatedOn));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.overriddencreatedon, value);
                this.OnPropertyChanged(nameof(OverriddenCreatedOn));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owner
        /// 
        /// Description:
        ///     (English - United States - 1033): Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.ownerid)]
        [System.ComponentModel.DescriptionAttribute("Owner")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OwnerId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.ownerid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OwnerId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.ownerid, value);
                this.OnPropertyChanged(nameof(OwnerId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Ownership
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the account's ownership structure, such as public or private.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.ownershipcode)]
        [System.ComponentModel.DescriptionAttribute("Ownership")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue OwnershipCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.ownershipcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OwnershipCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.ownershipcode, value);
                this.OnPropertyChanged(nameof(OwnershipCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Ownership
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the account's ownership structure, such as public or private.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.ownershipcode)]
        [System.ComponentModel.DescriptionAttribute("Ownership")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.ownershipcode> OwnershipCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.ownershipcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.ownershipcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.ownershipcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.ownershipcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(OwnershipCodeEnum));
                this.OnPropertyChanging(nameof(OwnershipCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.ownershipcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.ownershipcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(OwnershipCode));
                this.OnPropertyChanged(nameof(OwnershipCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owning Business Unit
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the business unit that the record owner belongs to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.owningbusinessunit)]
        [System.ComponentModel.DescriptionAttribute("Owning Business Unit")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.owningbusinessunit);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owning Team
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the team who owns the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.owningteam)]
        [System.ComponentModel.DescriptionAttribute("Owning Team")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.owningteam);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Owning User
        /// 
        /// Description:
        ///     (English - United States - 1033): Unique identifier of the user who owns the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.owninguser)]
        [System.ComponentModel.DescriptionAttribute("Owning User")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.owninguser);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Parent Account
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.parentaccountid)]
        [System.ComponentModel.DescriptionAttribute("Parent Account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ParentAccountId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.parentaccountid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ParentAccountId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.parentaccountid, value);
                this.OnPropertyChanged(nameof(ParentAccountId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Participates in Workflow
        /// 
        /// Description:
        ///     (English - United States - 1033): For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.participatesinworkflow)]
        [System.ComponentModel.DescriptionAttribute("Participates in Workflow")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<bool> ParticipatesInWorkflow
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>(Entities.Account.Schema.Attributes.participatesinworkflow);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ParticipatesInWorkflow));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.participatesinworkflow, value);
                this.OnPropertyChanged(nameof(ParticipatesInWorkflow));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Payment Terms
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the payment terms to indicate when the customer needs to pay the total amount.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.paymenttermscode)]
        [System.ComponentModel.DescriptionAttribute("Payment Terms")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PaymentTermsCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.paymenttermscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PaymentTermsCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.paymenttermscode, value);
                this.OnPropertyChanged(nameof(PaymentTermsCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Payment Terms
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the payment terms to indicate when the customer needs to pay the total amount.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.paymenttermscode)]
        [System.ComponentModel.DescriptionAttribute("Payment Terms")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.paymenttermscode> PaymentTermsCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.paymenttermscode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.paymenttermscode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.paymenttermscode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.paymenttermscode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PaymentTermsCodeEnum));
                this.OnPropertyChanging(nameof(PaymentTermsCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.paymenttermscode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.paymenttermscode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(PaymentTermsCode));
                this.OnPropertyChanged(nameof(PaymentTermsCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Day
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the preferred day of the week for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredappointmentdaycode)]
        [System.ComponentModel.DescriptionAttribute("Preferred Day")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PreferredAppointmentDayCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.preferredappointmentdaycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredAppointmentDayCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredappointmentdaycode, value);
                this.OnPropertyChanged(nameof(PreferredAppointmentDayCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Day
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the preferred day of the week for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredappointmentdaycode)]
        [System.ComponentModel.DescriptionAttribute("Preferred Day")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.preferredappointmentdaycode> PreferredAppointmentDayCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.preferredappointmentdaycode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.preferredappointmentdaycode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.preferredappointmentdaycode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.preferredappointmentdaycode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredAppointmentDayCodeEnum));
                this.OnPropertyChanging(nameof(PreferredAppointmentDayCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredappointmentdaycode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredappointmentdaycode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(PreferredAppointmentDayCode));
                this.OnPropertyChanged(nameof(PreferredAppointmentDayCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Time
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the preferred time of day for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredappointmenttimecode)]
        [System.ComponentModel.DescriptionAttribute("Preferred Time")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PreferredAppointmentTimeCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.preferredappointmenttimecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredAppointmentTimeCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredappointmenttimecode, value);
                this.OnPropertyChanged(nameof(PreferredAppointmentTimeCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Time
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the preferred time of day for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredappointmenttimecode)]
        [System.ComponentModel.DescriptionAttribute("Preferred Time")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.preferredappointmenttimecode> PreferredAppointmentTimeCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.preferredappointmenttimecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.preferredappointmenttimecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.preferredappointmenttimecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.preferredappointmenttimecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredAppointmentTimeCodeEnum));
                this.OnPropertyChanging(nameof(PreferredAppointmentTimeCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredappointmenttimecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredappointmenttimecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(PreferredAppointmentTimeCode));
                this.OnPropertyChanged(nameof(PreferredAppointmentTimeCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Method of Contact
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the preferred method of contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredcontactmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Preferred Method of Contact")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue PreferredContactMethodCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.preferredcontactmethodcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredContactMethodCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredcontactmethodcode, value);
                this.OnPropertyChanged(nameof(PreferredContactMethodCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Method of Contact
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the preferred method of contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredcontactmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Preferred Method of Contact")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.preferredcontactmethodcode> PreferredContactMethodCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.preferredcontactmethodcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.preferredcontactmethodcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.preferredcontactmethodcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.preferredcontactmethodcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredContactMethodCodeEnum));
                this.OnPropertyChanging(nameof(PreferredContactMethodCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredcontactmethodcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredcontactmethodcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(PreferredContactMethodCode));
                this.OnPropertyChanged(nameof(PreferredContactMethodCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Facility/Equipment
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredequipmentid)]
        [System.ComponentModel.DescriptionAttribute("Preferred Facility/Equipment")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference PreferredEquipmentId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.preferredequipmentid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredEquipmentId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredequipmentid, value);
                this.OnPropertyChanged(nameof(PreferredEquipmentId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred Service
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the account's preferred service for reference when you schedule service activities.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredserviceid)]
        [System.ComponentModel.DescriptionAttribute("Preferred Service")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference PreferredServiceId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.preferredserviceid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredServiceId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredserviceid, value);
                this.OnPropertyChanged(nameof(PreferredServiceId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Preferred User
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the preferred service representative for reference when you schedule service activities for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredsystemuserid)]
        [System.ComponentModel.DescriptionAttribute("Preferred User")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference PreferredSystemUserId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.preferredsystemuserid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PreferredSystemUserId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.preferredsystemuserid, value);
                this.OnPropertyChanged(nameof(PreferredSystemUserId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Primary Contact
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the primary contact for the account to provide quick access to contact details.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.primarycontactid)]
        [System.ComponentModel.DescriptionAttribute("Primary Contact")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference PrimaryContactId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.primarycontactid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrimaryContactId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.primarycontactid, value);
                this.OnPropertyChanged(nameof(PrimaryContactId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Primary Satori ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Primary Satori ID for Account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.primarysatoriid)]
        [System.ComponentModel.DescriptionAttribute("Primary Satori ID")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrimarySatoriId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.primarysatoriid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrimarySatoriId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.primarysatoriid, value);
                this.OnPropertyChanged(nameof(PrimarySatoriId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Primary Twitter ID
        /// 
        /// Description:
        ///     (English - United States - 1033): Primary Twitter ID for Account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.primarytwitterid)]
        [System.ComponentModel.DescriptionAttribute("Primary Twitter ID")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrimaryTwitterId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.primarytwitterid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(PrimaryTwitterId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.primarytwitterid, value);
                this.OnPropertyChanged(nameof(PrimaryTwitterId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Process
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.processid)]
        [System.ComponentModel.DescriptionAttribute("Process")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> ProcessId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Entities.Account.Schema.Attributes.processid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ProcessId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.processid, value);
                this.OnPropertyChanged(nameof(ProcessId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Annual Revenue
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the annual revenue for the account, used as an indicator in financial performance analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.revenue)]
        [System.ComponentModel.DescriptionAttribute("Annual Revenue")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Revenue
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.revenue);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Revenue));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.revenue, value);
                this.OnPropertyChanged(nameof(Revenue));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Annual Revenue (Base)
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.revenue_base)]
        [System.ComponentModel.DescriptionAttribute("Annual Revenue (Base)")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.Money Revenue_Base
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>(Entities.Account.Schema.Attributes.revenue_base);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Shares Outstanding
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.sharesoutstanding)]
        [System.ComponentModel.DescriptionAttribute("Shares Outstanding")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> SharesOutstanding
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.sharesoutstanding);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SharesOutstanding));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.sharesoutstanding, value);
                this.OnPropertyChanged(nameof(SharesOutstanding));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.shippingmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Shipping Method")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue ShippingMethodCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.shippingmethodcode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ShippingMethodCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.shippingmethodcode, value);
                this.OnPropertyChanged(nameof(ShippingMethodCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Shipping Method
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.shippingmethodcode)]
        [System.ComponentModel.DescriptionAttribute("Shipping Method")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.shippingmethodcode> ShippingMethodCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.shippingmethodcode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.shippingmethodcode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.shippingmethodcode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.shippingmethodcode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(ShippingMethodCodeEnum));
                this.OnPropertyChanging(nameof(ShippingMethodCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.shippingmethodcode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.shippingmethodcode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(ShippingMethodCode));
                this.OnPropertyChanged(nameof(ShippingMethodCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SIC Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.sic)]
        [System.ComponentModel.DescriptionAttribute("SIC Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SIC
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.sic);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SIC));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.sic, value);
                this.OnPropertyChanged(nameof(SIC));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): SLA
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the service level agreement (SLA) that you want to apply to the Account record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.slaid)]
        [System.ComponentModel.DescriptionAttribute("SLA")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference SLAId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.slaid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SLAId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.slaid, value);
                this.OnPropertyChanged(nameof(SLAId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Last SLA applied
        /// 
        /// Description:
        ///     (English - United States - 1033): Last SLA that was applied to this case. This field is for internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.slainvokedid)]
        [System.ComponentModel.DescriptionAttribute("Last SLA applied")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.slainvokedid);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Process Stage
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.stageid)]
        [System.ComponentModel.DescriptionAttribute("Process Stage")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<System.Guid> StageId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>(Entities.Account.Schema.Attributes.stageid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StageId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.stageid, value);
                this.OnPropertyChanged(nameof(StageId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.statecode)]
        [System.ComponentModel.DescriptionAttribute("Status")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue StateCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.statecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StateCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.statecode, value);
                this.OnPropertyChanged(nameof(StateCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status
        /// 
        /// Description:
        ///     (English - United States - 1033): Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.statecode)]
        [System.ComponentModel.DescriptionAttribute("Status")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.statecode> StateCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.statecode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.statecode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.statecode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.statecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StateCodeEnum));
                this.OnPropertyChanging(nameof(StateCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.statecode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.statecode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(StateCode));
                this.OnPropertyChanged(nameof(StateCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status Reason
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the account's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.statuscode)]
        [System.ComponentModel.DescriptionAttribute("Status Reason")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.statuscode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StatusCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.statuscode, value);
                this.OnPropertyChanged(nameof(StatusCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Status Reason
        /// 
        /// Description:
        ///     (English - United States - 1033): Select the account's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.statuscode)]
        [System.ComponentModel.DescriptionAttribute("Status Reason")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.statuscode> StatusCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.statuscode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.statuscode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.statuscode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.statuscode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StatusCodeEnum));
                this.OnPropertyChanging(nameof(StatusCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.statuscode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.statuscode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(StatusCode));
                this.OnPropertyChanged(nameof(StatusCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Stock Exchange
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the stock exchange at which the account is listed to track their stock and financial performance of the company.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.stockexchange)]
        [System.ComponentModel.DescriptionAttribute("Stock Exchange")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StockExchange
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.stockexchange);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(StockExchange));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.stockexchange, value);
                this.OnPropertyChanged(nameof(StockExchange));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Main Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the main phone number for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.telephone1)]
        [System.ComponentModel.DescriptionAttribute("Main Phone")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Telephone1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.telephone1);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Telephone1));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.telephone1, value);
                this.OnPropertyChanged(nameof(Telephone1));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Other Phone
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a second phone number for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.telephone2)]
        [System.ComponentModel.DescriptionAttribute("Other Phone")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Telephone2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.telephone2);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Telephone2));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.telephone2, value);
                this.OnPropertyChanged(nameof(Telephone2));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Telephone 3
        /// 
        /// Description:
        ///     (English - United States - 1033): Type a third phone number for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.telephone3)]
        [System.ComponentModel.DescriptionAttribute("Telephone 3")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Telephone3
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.telephone3);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Telephone3));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.telephone3, value);
                this.OnPropertyChanged(nameof(Telephone3));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Territory Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a region or territory for the account for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.territorycode)]
        [System.ComponentModel.DescriptionAttribute("Territory Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.OptionSetValue TerritoryCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.territorycode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TerritoryCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.territorycode, value);
                this.OnPropertyChanged(nameof(TerritoryCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Territory Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Select a region or territory for the account for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.territorycode)]
        [System.ComponentModel.DescriptionAttribute("Territory Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<Entities.Account.Schema.OptionSets.territorycode> TerritoryCodeEnum
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>(Entities.Account.Schema.Attributes.territorycode);
                if (((optionSet != null) 
                            && System.Enum.IsDefined(typeof(Entities.Account.Schema.OptionSets.territorycode), optionSet.Value)))
                {
                    return ((Entities.Account.Schema.OptionSets.territorycode)(System.Enum.ToObject(typeof(Entities.Account.Schema.OptionSets.territorycode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TerritoryCodeEnum));
                this.OnPropertyChanging(nameof(TerritoryCode));
                if ((value == null))
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.territorycode, null);
                }
                else
                {
                    this.SetAttributeValue(Entities.Account.Schema.Attributes.territorycode, new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged(nameof(TerritoryCode));
                this.OnPropertyChanged(nameof(TerritoryCodeEnum));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Territory
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the sales region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.territoryid)]
        [System.ComponentModel.DescriptionAttribute("Territory")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TerritoryId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.territoryid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TerritoryId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.territoryid, value);
                this.OnPropertyChanged(nameof(TerritoryId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Ticker Symbol
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.tickersymbol)]
        [System.ComponentModel.DescriptionAttribute("Ticker Symbol")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TickerSymbol
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.tickersymbol);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TickerSymbol));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.tickersymbol, value);
                this.OnPropertyChanged(nameof(TickerSymbol));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Spent by me
        /// 
        /// Description:
        ///     (English - United States - 1033): Total time spent for emails (read and write) and meetings by me in relation to account record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.timespentbymeonemailandmeetings)]
        [System.ComponentModel.DescriptionAttribute("Time Spent by me")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TimeSpentByMeOnEmailAndMeetings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.timespentbymeonemailandmeetings);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Time Zone Rule Version Number
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.timezoneruleversionnumber)]
        [System.ComponentModel.DescriptionAttribute("Time Zone Rule Version Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.timezoneruleversionnumber);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TimeZoneRuleVersionNumber));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.timezoneruleversionnumber, value);
                this.OnPropertyChanged(nameof(TimeZoneRuleVersionNumber));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Currency
        /// 
        /// Description:
        ///     (English - United States - 1033): Choose the local currency for the record to make sure budgets are reported in the correct currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.transactioncurrencyid)]
        [System.ComponentModel.DescriptionAttribute("Currency")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>(Entities.Account.Schema.Attributes.transactioncurrencyid);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TransactionCurrencyId));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.transactioncurrencyid, value);
                this.OnPropertyChanged(nameof(TransactionCurrencyId));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Traversed Path
        /// 
        /// Description:
        ///     (English - United States - 1033): For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.traversedpath)]
        [System.ComponentModel.DescriptionAttribute("Traversed Path")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TraversedPath
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.traversedpath);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(TraversedPath));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.traversedpath, value);
                this.OnPropertyChanged(nameof(TraversedPath));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): UTC Conversion Time Zone Code
        /// 
        /// Description:
        ///     (English - United States - 1033): Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.utcconversiontimezonecode)]
        [System.ComponentModel.DescriptionAttribute("UTC Conversion Time Zone Code")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>(Entities.Account.Schema.Attributes.utcconversiontimezonecode);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(UTCConversionTimeZoneCode));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.utcconversiontimezonecode, value);
                this.OnPropertyChanged(nameof(UTCConversionTimeZoneCode));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Version Number
        /// 
        /// Description:
        ///     (English - United States - 1033): Version number of the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.versionnumber)]
        [System.ComponentModel.DescriptionAttribute("Version Number")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Nullable<long> VersionNumber
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>(Entities.Account.Schema.Attributes.versionnumber);
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Website
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the account's website URL to get quick details about the company profile.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.websiteurl)]
        [System.ComponentModel.DescriptionAttribute("Website")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WebSiteURL
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.websiteurl);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(WebSiteURL));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.websiteurl, value);
                this.OnPropertyChanged(nameof(WebSiteURL));
            }
        }
        
        /// <summary>
        /// DisplayName:
        ///     (English - United States - 1033): Yomi Account Name
        /// 
        /// Description:
        ///     (English - United States - 1033): Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.yominame)]
        [System.ComponentModel.DescriptionAttribute("Yomi Account Name")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiName
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetAttributeValue<string>(Entities.Account.Schema.Attributes.yominame);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(YomiName));
                this.SetAttributeValue(Entities.Account.Schema.Attributes.yominame, value);
                this.OnPropertyChanged(nameof(YomiName));
            }
        }
        #endregion
        
        #region ManyToOne Relationships
        /// <summary>
        /// N:1 account_master_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.masterid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.account_master_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        [System.ComponentModel.DescriptionAttribute("N:1 account_master_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Account account_master_account_Referencing
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Account>(Entities.Account.Schema.ManyToOne.account_master_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
        }
        
        /// <summary>
        /// N:1 account_originating_lead
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.originatingleadid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.account_originating_lead.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 account_originating_lead")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Lead account_originating_lead
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Lead>(Entities.Account.Schema.ManyToOne.account_originating_lead.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_originating_lead));
                this.SetRelatedEntity<Entities.Lead>(Entities.Account.Schema.ManyToOne.account_originating_lead.Name, null, value);
                this.OnPropertyChanged(nameof(account_originating_lead));
            }
        }
        
        /// <summary>
        /// N:1 account_parent_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.parentaccountid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.account_parent_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        [System.ComponentModel.DescriptionAttribute("N:1 account_parent_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Account account_parent_account_Referencing
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Account>(Entities.Account.Schema.ManyToOne.account_parent_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_parent_account_Referencing));
                this.SetRelatedEntity<Entities.Account>(Entities.Account.Schema.ManyToOne.account_parent_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
                this.OnPropertyChanged(nameof(account_parent_account_Referencing));
            }
        }
        
        /// <summary>
        /// N:1 account_primary_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.primarycontactid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.account_primary_contact.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 account_primary_contact")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Contact account_primary_contact
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Contact>(Entities.Account.Schema.ManyToOne.account_primary_contact.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_primary_contact));
                this.SetRelatedEntity<Entities.Contact>(Entities.Account.Schema.ManyToOne.account_primary_contact.Name, null, value);
                this.OnPropertyChanged(nameof(account_primary_contact));
            }
        }
        
        /// <summary>
        /// N:1 business_unit_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.owningbusinessunit)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.business_unit_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 business_unit_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.BusinessUnit business_unit_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.BusinessUnit>(Entities.Account.Schema.ManyToOne.business_unit_accounts.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 equipment_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredequipmentid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.equipment_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 equipment_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Equipment equipment_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Equipment>(Entities.Account.Schema.ManyToOne.equipment_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(equipment_accounts));
                this.SetRelatedEntity<Entities.Equipment>(Entities.Account.Schema.ManyToOne.equipment_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(equipment_accounts));
            }
        }
        
        /// <summary>
        /// N:1 lk_account_entityimage
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.entityimageid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_account_entityimage.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_account_entityimage")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.ImageDescriptor lk_account_entityimage
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.ImageDescriptor>(Entities.Account.Schema.ManyToOne.lk_account_entityimage.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 lk_accountbase_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdby)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_accountbase_createdby.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_accountbase_createdby")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SystemUser lk_accountbase_createdby
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.lk_accountbase_createdby.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 lk_accountbase_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdonbehalfby)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_accountbase_createdonbehalfby.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_accountbase_createdonbehalfby")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SystemUser lk_accountbase_createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.lk_accountbase_createdonbehalfby.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 lk_accountbase_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedby)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_accountbase_modifiedby.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_accountbase_modifiedby")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SystemUser lk_accountbase_modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.lk_accountbase_modifiedby.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 lk_accountbase_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedonbehalfby)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_accountbase_modifiedonbehalfby.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_accountbase_modifiedonbehalfby")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SystemUser lk_accountbase_modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.lk_accountbase_modifiedonbehalfby.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 lk_externalparty_account_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.createdbyexternalparty)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_externalparty_account_createdby.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_externalparty_account_createdby")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.ExternalParty lk_externalparty_account_createdby
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.ExternalParty>(Entities.Account.Schema.ManyToOne.lk_externalparty_account_createdby.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 lk_externalparty_account_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.modifiedbyexternalparty)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.lk_externalparty_account_modifiedby.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 lk_externalparty_account_modifiedby")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.ExternalParty lk_externalparty_account_modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.ExternalParty>(Entities.Account.Schema.ManyToOne.lk_externalparty_account_modifiedby.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 manualsla_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.slaid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.manualsla_account.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 manualsla_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SLA manualsla_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SLA>(Entities.Account.Schema.ManyToOne.manualsla_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(manualsla_account));
                this.SetRelatedEntity<Entities.SLA>(Entities.Account.Schema.ManyToOne.manualsla_account.Name, null, value);
                this.OnPropertyChanged(nameof(manualsla_account));
            }
        }
        
        /// <summary>
        /// N:1 owner_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.ownerid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.owner_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 owner_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Owner owner_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Owner>(Entities.Account.Schema.ManyToOne.owner_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(owner_accounts));
                this.SetRelatedEntity<Entities.Owner>(Entities.Account.Schema.ManyToOne.owner_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(owner_accounts));
            }
        }
        
        /// <summary>
        /// N:1 price_level_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.defaultpricelevelid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.price_level_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 price_level_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.PriceLevel price_level_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.PriceLevel>(Entities.Account.Schema.ManyToOne.price_level_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(price_level_accounts));
                this.SetRelatedEntity<Entities.PriceLevel>(Entities.Account.Schema.ManyToOne.price_level_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(price_level_accounts));
            }
        }
        
        /// <summary>
        /// N:1 processstage_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.stageid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.processstage_account.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 processstage_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.ProcessStage processstage_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.ProcessStage>(Entities.Account.Schema.ManyToOne.processstage_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(processstage_account));
                this.SetRelatedEntity<Entities.ProcessStage>(Entities.Account.Schema.ManyToOne.processstage_account.Name, null, value);
                this.OnPropertyChanged(nameof(processstage_account));
            }
        }
        
        /// <summary>
        /// N:1 service_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredserviceid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.service_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 service_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Service service_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Service>(Entities.Account.Schema.ManyToOne.service_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(service_accounts));
                this.SetRelatedEntity<Entities.Service>(Entities.Account.Schema.ManyToOne.service_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(service_accounts));
            }
        }
        
        /// <summary>
        /// N:1 sla_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.slainvokedid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.sla_account.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 sla_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SLA sla_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SLA>(Entities.Account.Schema.ManyToOne.sla_account.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 system_user_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.preferredsystemuserid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.system_user_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 system_user_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SystemUser system_user_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.system_user_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(system_user_accounts));
                this.SetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.system_user_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(system_user_accounts));
            }
        }
        
        /// <summary>
        /// N:1 team_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.owningteam)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.team_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 team_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Team team_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Team>(Entities.Account.Schema.ManyToOne.team_accounts.Name, null);
            }
        }
        
        /// <summary>
        /// N:1 territory_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.territoryid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.territory_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 territory_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.Territory territory_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.Territory>(Entities.Account.Schema.ManyToOne.territory_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(territory_accounts));
                this.SetRelatedEntity<Entities.Territory>(Entities.Account.Schema.ManyToOne.territory_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(territory_accounts));
            }
        }
        
        /// <summary>
        /// N:1 transactioncurrency_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.transactioncurrencyid)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.transactioncurrency_account.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 transactioncurrency_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.TransactionCurrency transactioncurrency_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.TransactionCurrency>(Entities.Account.Schema.ManyToOne.transactioncurrency_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(transactioncurrency_account));
                this.SetRelatedEntity<Entities.TransactionCurrency>(Entities.Account.Schema.ManyToOne.transactioncurrency_account.Name, null, value);
                this.OnPropertyChanged(nameof(transactioncurrency_account));
            }
        }
        
        /// <summary>
        /// N:1 user_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute(Entities.Account.Schema.Attributes.owninguser)]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToOne.user_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("N:1 user_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Entities.SystemUser user_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntity<Entities.SystemUser>(Entities.Account.Schema.ManyToOne.user_accounts.Name, null);
            }
        }
        #endregion
        
        #region OneToMany Relationships
        /// <summary>
        /// 1:N account_actioncard
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_actioncard.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_actioncard")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.ActionCard> account_actioncard
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.ActionCard>(Entities.Account.Schema.OneToMany.account_actioncard.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_actioncard));
                this.SetRelatedEntities<Entities.ActionCard>(Entities.Account.Schema.OneToMany.account_actioncard.Name, null, value);
                this.OnPropertyChanged(nameof(account_actioncard));
            }
        }
        
        /// <summary>
        /// 1:N account_activity_parties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_activity_parties.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_activity_parties")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.ActivityParty> account_activity_parties
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.ActivityParty>(Entities.Account.Schema.OneToMany.account_activity_parties.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_activity_parties));
                this.SetRelatedEntities<Entities.ActivityParty>(Entities.Account.Schema.OneToMany.account_activity_parties.Name, null, value);
                this.OnPropertyChanged(nameof(account_activity_parties));
            }
        }
        
        /// <summary>
        /// 1:N Account_ActivityPointers
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_activitypointers.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_ActivityPointers")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.ActivityPointer> Account_ActivityPointers
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.ActivityPointer>(Entities.Account.Schema.OneToMany.account_activitypointers.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_ActivityPointers));
                this.SetRelatedEntities<Entities.ActivityPointer>(Entities.Account.Schema.OneToMany.account_activitypointers.Name, null, value);
                this.OnPropertyChanged(nameof(Account_ActivityPointers));
            }
        }
        
        /// <summary>
        /// 1:N Account_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_annotation.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Annotation")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Annotation> Account_Annotation
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Annotation>(Entities.Account.Schema.OneToMany.account_annotation.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Annotation));
                this.SetRelatedEntities<Entities.Annotation>(Entities.Account.Schema.OneToMany.account_annotation.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Annotation));
            }
        }
        
        /// <summary>
        /// 1:N Account_Appointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_appointments.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Appointments")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Appointment> Account_Appointments
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Appointment>(Entities.Account.Schema.OneToMany.account_appointments.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Appointments));
                this.SetRelatedEntities<Entities.Appointment>(Entities.Account.Schema.OneToMany.account_appointments.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Appointments));
            }
        }
        
        /// <summary>
        /// 1:N Account_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_asyncoperations.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_AsyncOperations")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.AsyncOperation> Account_AsyncOperations
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.AsyncOperation>(Entities.Account.Schema.OneToMany.account_asyncoperations.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_AsyncOperations));
                this.SetRelatedEntities<Entities.AsyncOperation>(Entities.Account.Schema.OneToMany.account_asyncoperations.Name, null, value);
                this.OnPropertyChanged(nameof(Account_AsyncOperations));
            }
        }
        
        /// <summary>
        /// 1:N account_bookableresource_AccountId
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_bookableresource_accountid.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_bookableresource_AccountId")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.BookableResource> account_bookableresource_AccountId
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.BookableResource>(Entities.Account.Schema.OneToMany.account_bookableresource_accountid.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_bookableresource_AccountId));
                this.SetRelatedEntities<Entities.BookableResource>(Entities.Account.Schema.OneToMany.account_bookableresource_accountid.Name, null, value);
                this.OnPropertyChanged(nameof(account_bookableresource_AccountId));
            }
        }
        
        /// <summary>
        /// 1:N Account_BulkDeleteFailures
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_bulkdeletefailures.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_BulkDeleteFailures")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.BulkDeleteFailure> Account_BulkDeleteFailures
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.BulkDeleteFailure>(Entities.Account.Schema.OneToMany.account_bulkdeletefailures.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_BulkDeleteFailures));
                this.SetRelatedEntities<Entities.BulkDeleteFailure>(Entities.Account.Schema.OneToMany.account_bulkdeletefailures.Name, null, value);
                this.OnPropertyChanged(nameof(Account_BulkDeleteFailures));
            }
        }
        
        /// <summary>
        /// 1:N account_BulkOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_bulkoperations.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_BulkOperations")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.BulkOperation> account_BulkOperations
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.BulkOperation>(Entities.Account.Schema.OneToMany.account_bulkoperations.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_BulkOperations));
                this.SetRelatedEntities<Entities.BulkOperation>(Entities.Account.Schema.OneToMany.account_bulkoperations.Name, null, value);
                this.OnPropertyChanged(nameof(account_BulkOperations));
            }
        }
        
        /// <summary>
        /// 1:N account_CampaignResponses
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_campaignresponses.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_CampaignResponses")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.CampaignResponse> account_CampaignResponses
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.CampaignResponse>(Entities.Account.Schema.OneToMany.account_campaignresponses.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_CampaignResponses));
                this.SetRelatedEntities<Entities.CampaignResponse>(Entities.Account.Schema.OneToMany.account_campaignresponses.Name, null, value);
                this.OnPropertyChanged(nameof(account_CampaignResponses));
            }
        }
        
        /// <summary>
        /// 1:N account_connections1
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_connections1.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_connections1")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Connection> account_connections1
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Connection>(Entities.Account.Schema.OneToMany.account_connections1.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_connections1));
                this.SetRelatedEntities<Entities.Connection>(Entities.Account.Schema.OneToMany.account_connections1.Name, null, value);
                this.OnPropertyChanged(nameof(account_connections1));
            }
        }
        
        /// <summary>
        /// 1:N account_connections2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_connections2.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_connections2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Connection> account_connections2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Connection>(Entities.Account.Schema.OneToMany.account_connections2.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_connections2));
                this.SetRelatedEntities<Entities.Connection>(Entities.Account.Schema.OneToMany.account_connections2.Name, null, value);
                this.OnPropertyChanged(nameof(account_connections2));
            }
        }
        
        /// <summary>
        /// 1:N account_customer_opportunity_roles
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_customer_opportunity_roles.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_customer_opportunity_roles")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.CustomerOpportunityRole> account_customer_opportunity_roles
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.CustomerOpportunityRole>(Entities.Account.Schema.OneToMany.account_customer_opportunity_roles.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_customer_opportunity_roles));
                this.SetRelatedEntities<Entities.CustomerOpportunityRole>(Entities.Account.Schema.OneToMany.account_customer_opportunity_roles.Name, null, value);
                this.OnPropertyChanged(nameof(account_customer_opportunity_roles));
            }
        }
        
        /// <summary>
        /// 1:N account_customer_relationship_customer
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_customer_relationship_customer.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_customer_relationship_customer")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.CustomerRelationship> account_customer_relationship_customer
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.CustomerRelationship>(Entities.Account.Schema.OneToMany.account_customer_relationship_customer.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_customer_relationship_customer));
                this.SetRelatedEntities<Entities.CustomerRelationship>(Entities.Account.Schema.OneToMany.account_customer_relationship_customer.Name, null, value);
                this.OnPropertyChanged(nameof(account_customer_relationship_customer));
            }
        }
        
        /// <summary>
        /// 1:N account_customer_relationship_partner
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_customer_relationship_partner.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_customer_relationship_partner")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.CustomerRelationship> account_customer_relationship_partner
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.CustomerRelationship>(Entities.Account.Schema.OneToMany.account_customer_relationship_partner.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_customer_relationship_partner));
                this.SetRelatedEntities<Entities.CustomerRelationship>(Entities.Account.Schema.OneToMany.account_customer_relationship_partner.Name, null, value);
                this.OnPropertyChanged(nameof(account_customer_relationship_partner));
            }
        }
        
        /// <summary>
        /// 1:N Account_CustomerAddress
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_customeraddress.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_CustomerAddress")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.CustomerAddress> Account_CustomerAddress
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.CustomerAddress>(Entities.Account.Schema.OneToMany.account_customeraddress.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_CustomerAddress));
                this.SetRelatedEntities<Entities.CustomerAddress>(Entities.Account.Schema.OneToMany.account_customeraddress.Name, null, value);
                this.OnPropertyChanged(nameof(Account_CustomerAddress));
            }
        }
        
        /// <summary>
        /// 1:N Account_DuplicateBaseRecord
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_duplicatebaserecord.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_DuplicateBaseRecord")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> Account_DuplicateBaseRecord
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.DuplicateRecord>(Entities.Account.Schema.OneToMany.account_duplicatebaserecord.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_DuplicateBaseRecord));
                this.SetRelatedEntities<Entities.DuplicateRecord>(Entities.Account.Schema.OneToMany.account_duplicatebaserecord.Name, null, value);
                this.OnPropertyChanged(nameof(Account_DuplicateBaseRecord));
            }
        }
        
        /// <summary>
        /// 1:N Account_DuplicateMatchingRecord
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_duplicatematchingrecord.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_DuplicateMatchingRecord")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.DuplicateRecord> Account_DuplicateMatchingRecord
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.DuplicateRecord>(Entities.Account.Schema.OneToMany.account_duplicatematchingrecord.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_DuplicateMatchingRecord));
                this.SetRelatedEntities<Entities.DuplicateRecord>(Entities.Account.Schema.OneToMany.account_duplicatematchingrecord.Name, null, value);
                this.OnPropertyChanged(nameof(Account_DuplicateMatchingRecord));
            }
        }
        
        /// <summary>
        /// 1:N Account_Email_EmailSender
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_email_emailsender.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Email_EmailSender")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Email> Account_Email_EmailSender
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Email>(Entities.Account.Schema.OneToMany.account_email_emailsender.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Email_EmailSender));
                this.SetRelatedEntities<Entities.Email>(Entities.Account.Schema.OneToMany.account_email_emailsender.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Email_EmailSender));
            }
        }
        
        /// <summary>
        /// 1:N Account_Email_SendersAccount
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_email_sendersaccount.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Email_SendersAccount")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Email> Account_Email_SendersAccount
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Email>(Entities.Account.Schema.OneToMany.account_email_sendersaccount.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Email_SendersAccount));
                this.SetRelatedEntities<Entities.Email>(Entities.Account.Schema.OneToMany.account_email_sendersaccount.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Email_SendersAccount));
            }
        }
        
        /// <summary>
        /// 1:N Account_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_emails.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Emails")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Email> Account_Emails
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Email>(Entities.Account.Schema.OneToMany.account_emails.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Emails));
                this.SetRelatedEntities<Entities.Email>(Entities.Account.Schema.OneToMany.account_emails.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Emails));
            }
        }
        
        /// <summary>
        /// 1:N account_entitlement_Account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_entitlement_account.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_entitlement_Account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Entitlement> account_entitlement_Account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Entitlement>(Entities.Account.Schema.OneToMany.account_entitlement_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_entitlement_Account));
                this.SetRelatedEntities<Entities.Entitlement>(Entities.Account.Schema.OneToMany.account_entitlement_account.Name, null, value);
                this.OnPropertyChanged(nameof(account_entitlement_Account));
            }
        }
        
        /// <summary>
        /// 1:N account_entitlement_Customer
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_entitlement_customer.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_entitlement_Customer")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Entitlement> account_entitlement_Customer
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Entitlement>(Entities.Account.Schema.OneToMany.account_entitlement_customer.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_entitlement_Customer));
                this.SetRelatedEntities<Entities.Entitlement>(Entities.Account.Schema.OneToMany.account_entitlement_customer.Name, null, value);
                this.OnPropertyChanged(nameof(account_entitlement_Customer));
            }
        }
        
        /// <summary>
        /// 1:N Account_Faxes
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_faxes.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Faxes")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Fax> Account_Faxes
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Fax>(Entities.Account.Schema.OneToMany.account_faxes.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Faxes));
                this.SetRelatedEntities<Entities.Fax>(Entities.Account.Schema.OneToMany.account_faxes.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Faxes));
            }
        }
        
        /// <summary>
        /// 1:N account_IncidentResolutions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_incidentresolutions.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_IncidentResolutions")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.IncidentResolution> account_IncidentResolutions
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.IncidentResolution>(Entities.Account.Schema.OneToMany.account_incidentresolutions.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_IncidentResolutions));
                this.SetRelatedEntities<Entities.IncidentResolution>(Entities.Account.Schema.OneToMany.account_incidentresolutions.Name, null, value);
                this.OnPropertyChanged(nameof(account_IncidentResolutions));
            }
        }
        
        /// <summary>
        /// 1:N Account_Letters
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_letters.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Letters")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Letter> Account_Letters
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Letter>(Entities.Account.Schema.OneToMany.account_letters.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Letters));
                this.SetRelatedEntities<Entities.Letter>(Entities.Account.Schema.OneToMany.account_letters.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Letters));
            }
        }
        
        /// <summary>
        /// 1:N Account_MailboxTrackingFolder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_mailboxtrackingfolder.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_MailboxTrackingFolder")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.MailboxTrackingFolder> Account_MailboxTrackingFolder
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.MailboxTrackingFolder>(Entities.Account.Schema.OneToMany.account_mailboxtrackingfolder.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_MailboxTrackingFolder));
                this.SetRelatedEntities<Entities.MailboxTrackingFolder>(Entities.Account.Schema.OneToMany.account_mailboxtrackingfolder.Name, null, value);
                this.OnPropertyChanged(nameof(Account_MailboxTrackingFolder));
            }
        }
        
        /// <summary>
        /// 1:N account_master_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_master_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        [System.ComponentModel.DescriptionAttribute("1:N account_master_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Account> account_master_account_Referenced
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Account>(Entities.Account.Schema.OneToMany.account_master_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_master_account_Referenced));
                this.SetRelatedEntities<Entities.Account>(Entities.Account.Schema.OneToMany.account_master_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
                this.OnPropertyChanged(nameof(account_master_account_Referenced));
            }
        }
        
        /// <summary>
        /// 1:N account_OpportunityCloses
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_opportunitycloses.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_OpportunityCloses")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.OpportunityClose> account_OpportunityCloses
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.OpportunityClose>(Entities.Account.Schema.OneToMany.account_opportunitycloses.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_OpportunityCloses));
                this.SetRelatedEntities<Entities.OpportunityClose>(Entities.Account.Schema.OneToMany.account_opportunitycloses.Name, null, value);
                this.OnPropertyChanged(nameof(account_OpportunityCloses));
            }
        }
        
        /// <summary>
        /// 1:N account_OrderCloses
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_ordercloses.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_OrderCloses")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.OrderClose> account_OrderCloses
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.OrderClose>(Entities.Account.Schema.OneToMany.account_ordercloses.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_OrderCloses));
                this.SetRelatedEntities<Entities.OrderClose>(Entities.Account.Schema.OneToMany.account_ordercloses.Name, null, value);
                this.OnPropertyChanged(nameof(account_OrderCloses));
            }
        }
        
        /// <summary>
        /// 1:N account_parent_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_parent_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        [System.ComponentModel.DescriptionAttribute("1:N account_parent_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Account> account_parent_account_Referenced
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Account>(Entities.Account.Schema.OneToMany.account_parent_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_parent_account_Referenced));
                this.SetRelatedEntities<Entities.Account>(Entities.Account.Schema.OneToMany.account_parent_account.Name, Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
                this.OnPropertyChanged(nameof(account_parent_account_Referenced));
            }
        }
        
        /// <summary>
        /// 1:N Account_Phonecalls
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_phonecalls.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Phonecalls")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.PhoneCall> Account_Phonecalls
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.PhoneCall>(Entities.Account.Schema.OneToMany.account_phonecalls.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Phonecalls));
                this.SetRelatedEntities<Entities.PhoneCall>(Entities.Account.Schema.OneToMany.account_phonecalls.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Phonecalls));
            }
        }
        
        /// <summary>
        /// 1:N account_PostFollows
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_postfollows.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_PostFollows")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.PostFollow> account_PostFollows
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.PostFollow>(Entities.Account.Schema.OneToMany.account_postfollows.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_PostFollows));
                this.SetRelatedEntities<Entities.PostFollow>(Entities.Account.Schema.OneToMany.account_postfollows.Name, null, value);
                this.OnPropertyChanged(nameof(account_PostFollows));
            }
        }
        
        /// <summary>
        /// 1:N account_PostRegardings
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_postregardings.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_PostRegardings")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.PostRegarding> account_PostRegardings
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.PostRegarding>(Entities.Account.Schema.OneToMany.account_postregardings.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_PostRegardings));
                this.SetRelatedEntities<Entities.PostRegarding>(Entities.Account.Schema.OneToMany.account_postregardings.Name, null, value);
                this.OnPropertyChanged(nameof(account_PostRegardings));
            }
        }
        
        /// <summary>
        /// 1:N account_PostRoles
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_postroles.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_PostRoles")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.PostRole> account_PostRoles
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.PostRole>(Entities.Account.Schema.OneToMany.account_postroles.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_PostRoles));
                this.SetRelatedEntities<Entities.PostRole>(Entities.Account.Schema.OneToMany.account_postroles.Name, null, value);
                this.OnPropertyChanged(nameof(account_PostRoles));
            }
        }
        
        /// <summary>
        /// 1:N account_principalobjectattributeaccess
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_principalobjectattributeaccess.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_principalobjectattributeaccess")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.PrincipalObjectAttributeAccess> account_principalobjectattributeaccess
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.PrincipalObjectAttributeAccess>(Entities.Account.Schema.OneToMany.account_principalobjectattributeaccess.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_principalobjectattributeaccess));
                this.SetRelatedEntities<Entities.PrincipalObjectAttributeAccess>(Entities.Account.Schema.OneToMany.account_principalobjectattributeaccess.Name, null, value);
                this.OnPropertyChanged(nameof(account_principalobjectattributeaccess));
            }
        }
        
        /// <summary>
        /// 1:N Account_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_processsessions.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_ProcessSessions")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.ProcessSession> Account_ProcessSessions
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.ProcessSession>(Entities.Account.Schema.OneToMany.account_processsessions.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_ProcessSessions));
                this.SetRelatedEntities<Entities.ProcessSession>(Entities.Account.Schema.OneToMany.account_processsessions.Name, null, value);
                this.OnPropertyChanged(nameof(Account_ProcessSessions));
            }
        }
        
        /// <summary>
        /// 1:N account_QuoteCloses
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_quotecloses.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N account_QuoteCloses")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.QuoteClose> account_QuoteCloses
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.QuoteClose>(Entities.Account.Schema.OneToMany.account_quotecloses.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(account_QuoteCloses));
                this.SetRelatedEntities<Entities.QuoteClose>(Entities.Account.Schema.OneToMany.account_quotecloses.Name, null, value);
                this.OnPropertyChanged(nameof(account_QuoteCloses));
            }
        }
        
        /// <summary>
        /// 1:N Account_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_recurringappointmentmasters.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_RecurringAppointmentMasters")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.RecurringAppointmentMaster> Account_RecurringAppointmentMasters
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.RecurringAppointmentMaster>(Entities.Account.Schema.OneToMany.account_recurringappointmentmasters.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_RecurringAppointmentMasters));
                this.SetRelatedEntities<Entities.RecurringAppointmentMaster>(Entities.Account.Schema.OneToMany.account_recurringappointmentmasters.Name, null, value);
                this.OnPropertyChanged(nameof(Account_RecurringAppointmentMasters));
            }
        }
        
        /// <summary>
        /// 1:N Account_ServiceAppointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_serviceappointments.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_ServiceAppointments")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.ServiceAppointment> Account_ServiceAppointments
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.ServiceAppointment>(Entities.Account.Schema.OneToMany.account_serviceappointments.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_ServiceAppointments));
                this.SetRelatedEntities<Entities.ServiceAppointment>(Entities.Account.Schema.OneToMany.account_serviceappointments.Name, null, value);
                this.OnPropertyChanged(nameof(Account_ServiceAppointments));
            }
        }
        
        /// <summary>
        /// 1:N Account_SharepointDocument
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_sharepointdocument.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_SharepointDocument")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SharePointDocument> Account_SharepointDocument
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SharePointDocument>(Entities.Account.Schema.OneToMany.account_sharepointdocument.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_SharepointDocument));
                this.SetRelatedEntities<Entities.SharePointDocument>(Entities.Account.Schema.OneToMany.account_sharepointdocument.Name, null, value);
                this.OnPropertyChanged(nameof(Account_SharepointDocument));
            }
        }
        
        /// <summary>
        /// 1:N Account_SharepointDocumentLocation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_sharepointdocumentlocation.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_SharepointDocumentLocation")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SharePointDocumentLocation> Account_SharepointDocumentLocation
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SharePointDocumentLocation>(Entities.Account.Schema.OneToMany.account_sharepointdocumentlocation.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_SharepointDocumentLocation));
                this.SetRelatedEntities<Entities.SharePointDocumentLocation>(Entities.Account.Schema.OneToMany.account_sharepointdocumentlocation.Name, null, value);
                this.OnPropertyChanged(nameof(Account_SharepointDocumentLocation));
            }
        }
        
        /// <summary>
        /// 1:N Account_SocialActivities
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_socialactivities.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_SocialActivities")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SocialActivity> Account_SocialActivities
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SocialActivity>(Entities.Account.Schema.OneToMany.account_socialactivities.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_SocialActivities));
                this.SetRelatedEntities<Entities.SocialActivity>(Entities.Account.Schema.OneToMany.account_socialactivities.Name, null, value);
                this.OnPropertyChanged(nameof(Account_SocialActivities));
            }
        }
        
        /// <summary>
        /// 1:N Account_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_syncerrors.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_SyncErrors")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SyncError> Account_SyncErrors
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SyncError>(Entities.Account.Schema.OneToMany.account_syncerrors.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_SyncErrors));
                this.SetRelatedEntities<Entities.SyncError>(Entities.Account.Schema.OneToMany.account_syncerrors.Name, null, value);
                this.OnPropertyChanged(nameof(Account_SyncErrors));
            }
        }
        
        /// <summary>
        /// 1:N Account_Tasks
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.account_tasks.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Account_Tasks")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Task> Account_Tasks
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Task>(Entities.Account.Schema.OneToMany.account_tasks.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Account_Tasks));
                this.SetRelatedEntities<Entities.Task>(Entities.Account.Schema.OneToMany.account_tasks.Name, null, value);
                this.OnPropertyChanged(nameof(Account_Tasks));
            }
        }
        
        /// <summary>
        /// 1:N contact_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.contact_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N contact_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Contact> contact_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Contact>(Entities.Account.Schema.OneToMany.contact_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(contact_customer_accounts));
                this.SetRelatedEntities<Entities.Contact>(Entities.Account.Schema.OneToMany.contact_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(contact_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N contract_billingcustomer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.contract_billingcustomer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N contract_billingcustomer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Contract> contract_billingcustomer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Contract>(Entities.Account.Schema.OneToMany.contract_billingcustomer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(contract_billingcustomer_accounts));
                this.SetRelatedEntities<Entities.Contract>(Entities.Account.Schema.OneToMany.contract_billingcustomer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(contract_billingcustomer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N contract_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.contract_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N contract_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Contract> contract_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Contract>(Entities.Account.Schema.OneToMany.contract_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(contract_customer_accounts));
                this.SetRelatedEntities<Entities.Contract>(Entities.Account.Schema.OneToMany.contract_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(contract_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N contractlineitem_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.contractlineitem_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N contractlineitem_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.ContractDetail> contractlineitem_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.ContractDetail>(Entities.Account.Schema.OneToMany.contractlineitem_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(contractlineitem_customer_accounts));
                this.SetRelatedEntities<Entities.ContractDetail>(Entities.Account.Schema.OneToMany.contractlineitem_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(contractlineitem_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N CreatedAccount_BulkOperationLogs2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.createdaccount_bulkoperationlogs2.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N CreatedAccount_BulkOperationLogs2")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.BulkOperationLog> CreatedAccount_BulkOperationLogs2
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.BulkOperationLog>(Entities.Account.Schema.OneToMany.createdaccount_bulkoperationlogs2.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(CreatedAccount_BulkOperationLogs2));
                this.SetRelatedEntities<Entities.BulkOperationLog>(Entities.Account.Schema.OneToMany.createdaccount_bulkoperationlogs2.Name, null, value);
                this.OnPropertyChanged(nameof(CreatedAccount_BulkOperationLogs2));
            }
        }
        
        /// <summary>
        /// 1:N incident_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.incident_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N incident_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Incident> incident_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Incident>(Entities.Account.Schema.OneToMany.incident_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(incident_customer_accounts));
                this.SetRelatedEntities<Entities.Incident>(Entities.Account.Schema.OneToMany.incident_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(incident_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N invoice_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.invoice_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N invoice_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Invoice> invoice_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Invoice>(Entities.Account.Schema.OneToMany.invoice_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(invoice_customer_accounts));
                this.SetRelatedEntities<Entities.Invoice>(Entities.Account.Schema.OneToMany.invoice_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(invoice_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N lead_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.lead_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N lead_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Lead> lead_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Lead>(Entities.Account.Schema.OneToMany.lead_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(lead_customer_accounts));
                this.SetRelatedEntities<Entities.Lead>(Entities.Account.Schema.OneToMany.lead_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(lead_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N lead_parent_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.lead_parent_account.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N lead_parent_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Lead> lead_parent_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Lead>(Entities.Account.Schema.OneToMany.lead_parent_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(lead_parent_account));
                this.SetRelatedEntities<Entities.Lead>(Entities.Account.Schema.OneToMany.lead_parent_account.Name, null, value);
                this.OnPropertyChanged(nameof(lead_parent_account));
            }
        }
        
        /// <summary>
        /// 1:N opportunity_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.opportunity_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N opportunity_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Opportunity> opportunity_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Opportunity>(Entities.Account.Schema.OneToMany.opportunity_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(opportunity_customer_accounts));
                this.SetRelatedEntities<Entities.Opportunity>(Entities.Account.Schema.OneToMany.opportunity_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(opportunity_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N opportunity_parent_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.opportunity_parent_account.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N opportunity_parent_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Opportunity> opportunity_parent_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Opportunity>(Entities.Account.Schema.OneToMany.opportunity_parent_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(opportunity_parent_account));
                this.SetRelatedEntities<Entities.Opportunity>(Entities.Account.Schema.OneToMany.opportunity_parent_account.Name, null, value);
                this.OnPropertyChanged(nameof(opportunity_parent_account));
            }
        }
        
        /// <summary>
        /// 1:N order_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.order_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N order_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SalesOrder> order_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SalesOrder>(Entities.Account.Schema.OneToMany.order_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(order_customer_accounts));
                this.SetRelatedEntities<Entities.SalesOrder>(Entities.Account.Schema.OneToMany.order_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(order_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N quote_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.quote_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N quote_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Quote> quote_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Quote>(Entities.Account.Schema.OneToMany.quote_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(quote_customer_accounts));
                this.SetRelatedEntities<Entities.Quote>(Entities.Account.Schema.OneToMany.quote_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(quote_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N slakpiinstance_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.slakpiinstance_account.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N slakpiinstance_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SLAKPIInstance> slakpiinstance_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SLAKPIInstance>(Entities.Account.Schema.OneToMany.slakpiinstance_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(slakpiinstance_account));
                this.SetRelatedEntities<Entities.SLAKPIInstance>(Entities.Account.Schema.OneToMany.slakpiinstance_account.Name, null, value);
                this.OnPropertyChanged(nameof(slakpiinstance_account));
            }
        }
        
        /// <summary>
        /// 1:N SocialActivity_PostAuthor_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.socialactivity_postauthor_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N SocialActivity_PostAuthor_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SocialActivity> SocialActivity_PostAuthor_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SocialActivity>(Entities.Account.Schema.OneToMany.socialactivity_postauthor_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SocialActivity_PostAuthor_accounts));
                this.SetRelatedEntities<Entities.SocialActivity>(Entities.Account.Schema.OneToMany.socialactivity_postauthor_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(SocialActivity_PostAuthor_accounts));
            }
        }
        
        /// <summary>
        /// 1:N SocialActivity_PostAuthorAccount_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.socialactivity_postauthoraccount_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N SocialActivity_PostAuthorAccount_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SocialActivity> SocialActivity_PostAuthorAccount_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SocialActivity>(Entities.Account.Schema.OneToMany.socialactivity_postauthoraccount_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SocialActivity_PostAuthorAccount_accounts));
                this.SetRelatedEntities<Entities.SocialActivity>(Entities.Account.Schema.OneToMany.socialactivity_postauthoraccount_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(SocialActivity_PostAuthorAccount_accounts));
            }
        }
        
        /// <summary>
        /// 1:N Socialprofile_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.socialprofile_customer_accounts.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N Socialprofile_customer_accounts")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.SocialProfile> Socialprofile_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.SocialProfile>(Entities.Account.Schema.OneToMany.socialprofile_customer_accounts.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(Socialprofile_customer_accounts));
                this.SetRelatedEntities<Entities.SocialProfile>(Entities.Account.Schema.OneToMany.socialprofile_customer_accounts.Name, null, value);
                this.OnPropertyChanged(nameof(Socialprofile_customer_accounts));
            }
        }
        
        /// <summary>
        /// 1:N SourceAccount_BulkOperationLogs
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.sourceaccount_bulkoperationlogs.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N SourceAccount_BulkOperationLogs")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.BulkOperationLog> SourceAccount_BulkOperationLogs
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.BulkOperationLog>(Entities.Account.Schema.OneToMany.sourceaccount_bulkoperationlogs.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(SourceAccount_BulkOperationLogs));
                this.SetRelatedEntities<Entities.BulkOperationLog>(Entities.Account.Schema.OneToMany.sourceaccount_bulkoperationlogs.Name, null, value);
                this.OnPropertyChanged(nameof(SourceAccount_BulkOperationLogs));
            }
        }
        
        /// <summary>
        /// 1:N userentityinstancedata_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.OneToMany.userentityinstancedata_account.Name)]
        [System.ComponentModel.DescriptionAttribute("1:N userentityinstancedata_account")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.UserEntityInstanceData> userentityinstancedata_account
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.UserEntityInstanceData>(Entities.Account.Schema.OneToMany.userentityinstancedata_account.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(userentityinstancedata_account));
                this.SetRelatedEntities<Entities.UserEntityInstanceData>(Entities.Account.Schema.OneToMany.userentityinstancedata_account.Name, null, value);
                this.OnPropertyChanged(nameof(userentityinstancedata_account));
            }
        }
        #endregion
        
        #region ManyToMany Relationships
        /// <summary>
        /// N:N accountleads_association
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToMany.accountleads_association.Name)]
        [System.ComponentModel.DescriptionAttribute("N:N accountleads_association")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.Lead> accountleads_association
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.Lead>(Entities.Account.Schema.ManyToMany.accountleads_association.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(accountleads_association));
                this.SetRelatedEntities<Entities.Lead>(Entities.Account.Schema.ManyToMany.accountleads_association.Name, null, value);
                this.OnPropertyChanged(nameof(accountleads_association));
            }
        }
        
        /// <summary>
        /// N:N listaccount_association
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute(Entities.Account.Schema.ManyToMany.listaccount_association.Name)]
        [System.ComponentModel.DescriptionAttribute("N:N listaccount_association")]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public System.Collections.Generic.IEnumerable<Entities.List> listaccount_association
        {
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            get
            {
                return this.GetRelatedEntities<Entities.List>(Entities.Account.Schema.ManyToMany.listaccount_association.Name, null);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            set
            {
                this.OnPropertyChanging(nameof(listaccount_association));
                this.SetRelatedEntities<Entities.List>(Entities.Account.Schema.ManyToMany.listaccount_association.Name, null, value);
                this.OnPropertyChanged(nameof(listaccount_association));
            }
        }
        #endregion
    }
}
